{
    "runs": {
        "init_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/init_directive_c ../vvllm_git/gpt-4/template_context_full/init_directive.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/init_directive_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_num_workersclause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_num_workersclause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.F90",
                "output": "NVFORTRAN-S-0121-Operation requires logical or integer data types (../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.F90: 47)\nNVFORTRAN-S-0038-Symbol, num_test_calls, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.F90: 39)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.F90: 39)\n  0 inform,   0 warnings,   3 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_num_workersclause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_detach_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_detach_clause_c ../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.c\", line 11: error: identifier \"SIZE\" is undefined\n      host_array = (float*)malloc(SIZE * sizeof(float*));\n                                  ^\n\n\"../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.c\", line 22: error: expected a \"]\"\n      #pragma acc exit data detach(host_array[0:SIZE])\n                                               ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_detach_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "variable_predetermined_data_attributes_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/variable_predetermined_data_attributes_cpp ../vvllm_git/gpt-4/template_context_full/variable_predetermined_data_attributes.cpp",
                "output": "test1():\n     16, Generating NVIDIA GPU code\n         18, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     16, Generating copy(a[:len]) [if not already present]\n         Generating implicit copyin(b[:1024]) [if not already present]\n     18, Generating implicit private(success)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/variable_predetermined_data_attributes_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_memcpy_from_device_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_memcpy_from_device_c ../vvllm_git/gpt-4/template_context_full/acc_memcpy_from_device.c",
                "output": "NVC++-S-1067-Cannot determine bounds for array - d_vector (../vvllm_git/gpt-4/template_context_full/acc_memcpy_from_device.c: 15)\ntest1:\n     15, Generating present(dev_mem[:])\n         Generating NVIDIA GPU code\n         18, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     18, Generating implicit private(d_vector)\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_memcpy_from_device_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_copy_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_copy_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_construct_copy_clause.cpp",
                "output": "test1():\n     20, Generating copy(h_array[:array_length]) [if not already present]\n         Generating NVIDIA GPU code\n         22, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_copy_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "parallel_construct_private_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_private_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_private_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/parallel_construct_private_clause.F90: 8)\nNVFORTRAN-S-0072-Assignment operation illegal to constant or parameter n (../vvllm_git/gpt-4/template_context_full/parallel_construct_private_clause.F90: 10)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_private_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_private_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_private_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier test1 (../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.F90: 8)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.F90: 9)\nNVFORTRAN-S-0070-Incorrect sequence of statements : implicit none (../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.F90: 10)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.F90: 10)\nNVFORTRAN-S-0302-Unmatched ENDFUNCTION statement (../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.F90: 44)\n  0 inform,   0 warnings,   5 severes, 0 fatal for MAIN\nnvfortran-Fatal-/opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/bin/tools/fort1 TERMINATED by signal 11\nArguments to /opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/bin/tools/fort1\n/opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/bin/tools/fort1 ../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.F90 -opt 2 -terse 1 -inform warn -nostatic -x 19 0x400000 -quad -x 59 4 -x 15 2 -x 49 0x400004 -x 51 0x20 -x 57 0x4c -x 58 0x10000 -x 124 0x1000 -tp skylake-avx512 -x 57 0xfb0000 -x 58 0x78031040 -x 70 0x6c00 -x 47 0x400000 -x 47 0x08 -x 48 4608 -x 49 0x100 -stdinc /opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/include:/opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/include-stdexec:/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include:/usr/local/include:/usr/include -cmdline '+nvfortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.F90 -acc -Minfo=all -o build/kernels_construct_private_clause_fortran' -def unix -def __unix -def __unix__ -def linux -def __linux -def __linux__ -def __NO_MATH_INLINES -def __LP64__ -def __x86_64 -def __x86_64__ -def __LONG_MAX__=9223372036854775807L -def '__SIZE_TYPE__=unsigned long int' -def '__PTRDIFF_TYPE__=long int' -def __amd64 -def __amd64__ -def __k8 -def __k8__ -def __MMX__ -def __SSE__ -def __SSE2__ -def __SSE3__ -def __SSSE3__ -def __ABM__ -def __SSE4_1__ -def __SSE4_2__ -def __AVX__ -def __AVX2__ -def __AVX512F__ -def __AVX512CD__ -def __AVX512VL__ -def __AVX512BW__ -def __AVX512DQ__ -def __AVX512VNNI__ -def __F16C__ -def __FMA__ -def __XSAVE__ -def __XSAVEOPT__ -def __XSAVEC__ -def __XSAVES__ -def __POPCNT__ -def __AES__ -def __PCLMUL__ -def __CLFLUSHOPT__ -def __FSGSBASE__ -def __RDRND__ -def __BMI__ -def __BMI2__ -def __LZCNT__ -def __FXSR__ -def __RTM__ -def __PKU__ -def __PGLLVM__ -def __NVCOMPILER_LLVM__ -def __extension__= -def _ACCEL=201003 -def _OPENACC=201711 -def CUDA_VERSION=11080 -def PGI_TESLA_TARGET -ccff -preprocess -freeform -vect 48 -x 54 1 -x 68 0x1 -x 70 0x40000000 -x 70 0x40000000 -x 68 0x1 -x 124 1 -x 195 0x8000 -x 186 0x80 -x 180 0x400 -x 163 0x1 -cudaver 11080 -x 186 0x80000 -x 189 0x8000 -y 163 0xc0000000 -x 189 0x10 -accel tesla -accel host -stbfile /tmp/nvfortranNLdE1cOskbaM.stb -modexport /tmp/nvfortranFLdEDzi3JeH-.cmod -modindex /tmp/nvfortranxLdEfLR72NAh.cmdx -cci /tmp/nvfortranVLdEn5aN2IAl.cci -output /tmp/nvfortran3LdELuUHJ0sT.ilm",
                "exit_code": 127
            },
            "execution": {
                "command": "./build/kernels_construct_private_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_wait_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_wait_cpp ../vvllm_git/gpt-4/template_context_full/acc_wait.cpp",
                "output": "test1():\n     21, Generating enter data copyin(b[:10000])\n         Generating implicit copy(b[:10000]) [if not already present]\n     22, Loop is parallelizable\n         Generating NVIDIA GPU code\n         22, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     24, Generating exit data copyout(b[:10000])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_wait_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_default_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_default_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_default_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_default_clause.cpp\", line 9: error: identifier \"ARRAY_SIZE\" is undefined\n          arr_host = (int*)malloc(ARRAY_SIZE*sizeof(int));\n                                  ^\n\n\"../vvllm_git/gpt-4/template_context_full/serial_construct_default_clause.cpp\", line 18: error: identifier \"ARRAY_SIZE\" is undefined\n          arr_host = (int*)acc_malloc(ARRAY_SIZE*sizeof(int));\n                                      ^\n\n\"../vvllm_git/gpt-4/template_context_full/serial_construct_default_clause.cpp\", line 21: error: identifier \"ARRAY_SIZE\" is undefined\n  #pragma acc serial copyout(arr_host[0:ARRAY_SIZE]) default(none)\n                                        ^\n\n3 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/serial_construct_default_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_default_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_self_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_self_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.F90: 12)\nNVFORTRAN-S-0034-Syntax error at or near SELF (../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.F90: 19)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_self_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_num_workersclause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_num_workersclause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.cpp\", line 27: warning: missing return statement at end of non-void function \"testNumWorkers\" [implicit_return_from_non_void_function]\n      }\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.cpp\", line 6: warning: variable \"err\" was set but never used [set_but_not_used]\n      int err = 0;\n          ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.cpp\", line 29: error: expected a declaration\n      return err;\n      ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.cpp\", line 30: error: expected a declaration\n  }\n  ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_num_workersclause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_update_self_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_update_self_c ../vvllm_git/gpt-4/template_context_full/acc_update_self.c",
                "output": "test1:\n     18, Generating enter data copyin(host_data[:n])\n         Generating present(host_data[:])\n         Generating NVIDIA GPU code\n         23, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n     18, Generating implicit copyout(device_data[:100]) [if not already present]\n     23, Memory copy idiom, loop replaced by call to __c_mcopy4\n     44, Generating exit data delete(host_data[:1])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_update_self_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_attach_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_attach_c ../vvllm_git/gpt-4/template_context_full/acc_attach.c",
                "output": "test_acc_attach_detach:\n     17, Generating enter data create(dev_data[:1000])\n         Generating present(dev_data[:1000])\n         Generating NVIDIA GPU code\n         21, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     26, Generating update self(host_data[:1000])\n     43, Generating exit data delete(dev_data[:1000])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_attach_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "parallel_construct_async_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_async_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.c\", line 18: error: too few arguments in function call\n            vector[i] = __pgi_threadidx();\n                                        ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.c\", line 21: error: too few arguments in function call\n        acc_wait();\n                 ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.c\", line 25: error: too few arguments in function call\n              vector[i] != __pgi_threadidx()) {\n                                           ^\n\n3 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_async_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_firstprivate_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_firstprivate_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_firstprivate_clause.c",
                "output": "test_firstprivate:\n      9, Accelerator serial kernel generated\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_firstprivate_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_delete_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_delete_c ../vvllm_git/gpt-4/template_context_full/acc_delete.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_delete_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_fortran ../vvllm_git/gpt-4/template_context_full/data_construct.F90",
                "output": "test1:\n     17, Generating copyin(a(:)) [if not already present]\n         Generating copy(b(:)) [if not already present]\n     19, Generating NVIDIA GPU code\n         20, !$acc loop gang ! blockidx%x\n     26, any reduction inlined",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_fortran",
                "output": "Test passed",
                "exit_code": 0,
                "passed": true
            }
        },
        "declare_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/declare_directive_c ../vvllm_git/gpt-4/template_context_full/declare_directive.c",
                "output": "test_declare_directive:\n     11, Generating create(host_data[:size]) [if not already present]\n     18, Generating present(host_data[:size])\n         Generating NVIDIA GPU code\n         22, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n     24, Generating update self(host_data[:size])\n     31, FMA (fused multiply-add) instruction(s) generated",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/declare_directive_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "parallel_construct_private_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_private_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_private_clause.c",
                "output": "test1:\n     17, Generating copyin(b[:num_gangs]) [if not already present]\n         Generating copy(a[:num_gangs]) [if not already present]\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_private_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_update_self_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_update_self_fortran ../vvllm_git/gpt-4/template_context_full/acc_update_self.F90",
                "output": "test1:\n     21, Generating copy(a(:)) [if not already present]\n         Generating NVIDIA GPU code\n         22, !$acc loop gang, vector(128) ! blockidx%x threadidx%x",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_update_self_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_free_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_free_fortran ../vvllm_git/gpt-4/template_context_full/acc_free.F90",
                "output": "NVFORTRAN-S-0148-Reference to TYPE(C_PTR) expression required (../vvllm_git/gpt-4/template_context_full/acc_free.F90: 23)\nNVFORTRAN-S-0155-Illegal target of a POINTER assignment  (../vvllm_git/gpt-4/template_context_full/acc_free.F90: 28)\nNVFORTRAN-S-0155-Could not resolve generic procedure acc_free (../vvllm_git/gpt-4/template_context_full/acc_free.F90: 31)\nNVFORTRAN-S-0038-Symbol, c_f_pointer, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_free.F90: 10)\n  0 inform,   0 warnings,   4 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_free_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_hostptr_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_hostptr_c ../vvllm_git/gpt-4/template_context_full/acc_hostptr.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_hostptr_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_get_property_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_get_property_fortran ../vvllm_git/gpt-4/template_context_full/acc_get_property.F90",
                "output": "NVFORTRAN-S-0038-Symbol, acc_get_num, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_get_property.F90: 3)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_get_property_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_vector_length_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_vector_length_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_vector_length_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/serial_construct_vector_length_clause.F90: 9)\nNVFORTRAN-S-0072-Assignment operation illegal to constant or parameter n (../vvllm_git/gpt-4/template_context_full/serial_construct_vector_length_clause.F90: 12)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_vector_length_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_tile_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_tile_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_tile_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/loop_construct_tile_clause.F90: 7)\nNVFORTRAN-S-0155-The TILE clause may not appear on the same loop as the COLLAPSE clause  (../vvllm_git/gpt-4/template_context_full/loop_construct_tile_clause.F90: 20)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_tile_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_reduction_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_reduction_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_reduction_clause.c",
                "output": "test1:\n     20, Generating copy(arr[:n]) [if not already present]\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         22, #pragma acc for seq\n     22, Generating implicit private(sum)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_reduction_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "loop_construct_private_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_private_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.cpp\", line 18: error: identifier \"tmp\" is undefined\n          #pragma acc loop private(tmp)\n                                   ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_private_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_tile_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_tile_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_tile_clause.c",
                "output": "test1:\n     15, Generating NVIDIA GPU code\n         19, #pragma acc loop gang, vector tile(4,4) /* blockIdx.x threadIdx.x */\n         20,   /* blockIdx.x threadIdx.x tiled */\n     15, Generating implicit copyout(b[:16][:16]) [if not already present]\n         Generating implicit copyin(a[:16][:16]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_tile_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_on_device_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_on_device_cpp ../vvllm_git/gpt-4/template_context_full/acc_on_device.cpp",
                "output": "test1():\n     16, Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_on_device_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "exit_data_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/exit_data_directive_fortran ../vvllm_git/gpt-4/template_context_full/exit_data_directive.F90",
                "output": "test1:\n     17, Generating enter data copyin(a(:))\n     20, Generating implicit copyout(a(1:10)) [if not already present]\n     21, Loop is parallelizable\n         Generating NVIDIA GPU code\n         21, !$acc loop gang, vector(32) ! blockidx%x threadidx%x\n     27, Generating exit data copyout(a(:))",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/exit_data_directive_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_num_gangs_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_num_gangs_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_num_gangs_clause.F90",
                "output": "test1:\n     14, Memory set idiom, loop replaced by call to __c_mset4\n     19, Generating copy(array(:)) [if not already present]\n         Generating NVIDIA GPU code\n         20, !$acc loop gang(10), vector(128) ! blockidx%x threadidx%x\n     20, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_num_gangs_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "combined_constucts_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/combined_constucts_fortran ../vvllm_git/gpt-4/template_context_full/combined_constucts.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier test1 (../vvllm_git/gpt-4/template_context_full/combined_constucts.F90: 4)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/combined_constucts.F90: 5)\nNVFORTRAN-S-0070-Incorrect sequence of statements : implicit none (../vvllm_git/gpt-4/template_context_full/combined_constucts.F90: 6)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/combined_constucts.F90: 6)\nNVFORTRAN-S-0302-Unmatched ENDFUNCTION statement (../vvllm_git/gpt-4/template_context_full/combined_constucts.F90: 36)\n  0 inform,   0 warnings,   5 severes, 0 fatal for MAIN",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/combined_constucts_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_num_gangs_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_num_gangs_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_num_gangs_clause.cpp",
                "output": "test1():\n     17, Generating implicit copy(data[:]) [if not already present]\n     20, Loop is parallelizable\n         Generating NVIDIA GPU code\n         20, #pragma acc loop gang(100), vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_num_gangs_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "kernels_construct_if_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_if_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_if_clause.F90",
                "output": "test1:\n     12, Generating copyin(a(:)) [if not already present]\n         Generating copy(b(:)) [if not already present]\n     13, Loop is parallelizable\n         Generating NVIDIA GPU code\n         13, !$acc loop gang, vector(32) ! blockidx%x threadidx%x",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_if_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_memcpy_to_device_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_memcpy_to_device_cpp ../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.cpp\", line 21: error: argument of type \"int\" is incompatible with parameter of type \"void *\"\n          if (acc_memcpy_from_device(host_data[i], dev_data[i], sizeof(int)) != 0) {\n                                     ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.cpp\", line 21: error: argument of type \"int\" is incompatible with parameter of type \"void *\"\n          if (acc_memcpy_from_device(host_data[i], dev_data[i], sizeof(int)) != 0) {\n                                                   ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_memcpy_to_device_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_set_device_type_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_set_device_type_cpp ../vvllm_git/gpt-4/template_context_full/acc_set_device_type.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_set_device_type_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "host_data_construct_use_device_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/host_data_construct_use_device_clause_c ../vvllm_git/gpt-4/template_context_full/host_data_construct_use_device_clause.c",
                "output": "test1:\n     20, Generating enter data create(h_array[:h_array_size])\n     31, Generating exit data delete(h_array[:1])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/host_data_construct_use_device_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "declare_directive_create_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/declare_directive_create_clause_c ../vvllm_git/gpt-4/template_context_full/declare_directive_create_clause.c",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - rand (../vvllm_git/gpt-4/template_context_full/declare_directive_create_clause.c: 16)\ntest1:\n      9, Generating create(testVector[:10]) [if not already present]\n     16, Accelerator restriction: call to 'rand' with no acc routine information\n     17, Generating update self(testVector[:10])\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/declare_directive_create_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_malloc_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_malloc_cpp ../vvllm_git/gpt-4/template_context_full/acc_malloc.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_malloc_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_get_default_async_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_get_default_async_cpp ../vvllm_git/gpt-4/template_context_full/acc_get_default_async.cpp",
                "output": "test1():\n     13, Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_get_default_async_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_detach_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_detach_c ../vvllm_git/gpt-4/template_context_full/acc_detach.c",
                "output": "test1:\n     15, Generating create(devptr[:1]) [if not already present]\n     19, Generating present(devptr[:])\n         Generating implicit private(err)\n         Generating NVIDIA GPU code\n         Generating implicit copyin(hostptr) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_detach_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "loop_construct_gang_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_gang_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_gang_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/loop_construct_gang_clause.F90: 8)\n  0 inform,   1 warnings,   0 severes, 0 fatal for test1\ntest1:\n     15, Generating NVIDIA GPU code\n         16, !$acc loop gang ! blockidx%x\n     15, Generating implicit copyout(arr(:)) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_gang_clause_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_self_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_self_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.cpp\", line 18: error: invalid text in pragma\n      #pragma acc serial present(host_array[0:10]) self\n                                                   ^\n\n\"../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.cpp\", line 20: error: a value of type \"void *\" cannot be assigned to an entity of type \"int *\"\n          device_array = acc_copyin(host_array, 10*sizeof(int));\n                       ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_self_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_wait_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_wait_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_wait_clause.cpp",
                "output": "test1():\n     19, Generating copyout(b[:1024]) [if not already present]\n         Generating copyin(a[:1024]) [if not already present]\n     21, Generating NVIDIA GPU code\n         23, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_wait_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_wait_any_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_wait_any_fortran ../vvllm_git/gpt-4/template_context_full/acc_wait_any.F90",
                "output": "NVFORTRAN-S-0023-Syntax error - unbalanced parentheses (../vvllm_git/gpt-4/template_context_full/acc_wait_any.F90: 30)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_wait_any_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "routine_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/routine_directive_c ../vvllm_git/gpt-4/template_context_full/routine_directive.c",
                "output": "square:\n      6, Generating acc routine seq\n         Generating NVIDIA GPU code\ntest1:\n     25, Generating copyout(out[:n]) [if not already present]\n         Generating copyin(in[:n]) [if not already present]\n         Generating NVIDIA GPU code\n         27, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/routine_directive_c",
                "output": "Routine Directive Test Passed",
                "exit_code": 0,
                "passed": true
            }
        },
        "atomic_construct_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/atomic_construct_cpp ../vvllm_git/gpt-4/template_context_full/atomic_construct.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/atomic_construct.cpp\", line 8: error: this declaration has no storage class or type specifier\n  __global__ void increment(int* sum){\n  ^\n\n\"../vvllm_git/gpt-4/template_context_full/atomic_construct.cpp\", line 8: error: expected a \";\"\n  __global__ void increment(int* sum){\n             ^\n\n\"../vvllm_git/gpt-4/template_context_full/atomic_construct.cpp\", line 34: warning: parsing restarts here after previous syntax error [end_of_flush]\n      return err;\n                ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/atomic_construct.cpp\", line 35: error: expected a declaration\n  }\n  ^\n\n3 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/atomic_construct.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/atomic_construct_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_delete_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_delete_fortran ../vvllm_git/gpt-4/template_context_full/acc_delete.F90",
                "output": "test1:\n     15, Generating enter data copyin(testarr(:))\n     17, Memory zero idiom, loop replaced by call to __c_mzero4\n     19, Generating update device(testarr(:))",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_delete_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_init_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_init_c ../vvllm_git/gpt-4/template_context_full/acc_init.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_init_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_set_device_num_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_set_device_num_fortran ../vvllm_git/gpt-4/template_context_full/acc_set_device_num.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier or (../vvllm_git/gpt-4/template_context_full/acc_set_device_num.F90: 44)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_set_device_num_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "update_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/update_directive_fortran ../vvllm_git/gpt-4/template_context_full/update_directive.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near = (../vvllm_git/gpt-4/template_context_full/update_directive.F90: 21)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/update_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_attach_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_attach_cpp ../vvllm_git/gpt-4/template_context_full/acc_attach.cpp",
                "output": "test1():\n     15, Generating create(dev_data[:100]) [if not already present]\n     16, Generating present(dev_data[:100])\n         Generating NVIDIA GPU code\n         19, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n     16, Generating implicit copyin(host_data[:100]) [if not already present]\n     19, Memory copy idiom, loop replaced by call to __c_mcopy8",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_attach_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "reference_counters_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/reference_counters_cpp ../vvllm_git/gpt-4/template_context_full/reference_counters.cpp",
                "output": "test1():\n     24, Generating enter data copyin(data[:100])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/reference_counters_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_worker_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_worker_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_worker_clause.cpp",
                "output": "test1():\n     16, Memory set idiom, loop replaced by call to __c_mset4\n     22, Generating copy(test_array[:num_workers*num_gangs]) [if not already present]\n     24, Generating NVIDIA GPU code\n         26, #pragma acc loop gang(num_gangs) /* blockIdx.x */\n         29, #pragma acc loop worker(num_workers) /* threadIdx.y */\n     29, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_worker_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_device_type_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_device_type_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_device_type_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/loop_construct_device_type_clause.F90: 9)\nNVFORTRAN-S-1072-Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default' - gpu (../vvllm_git/gpt-4/template_context_full/loop_construct_device_type_clause.F90: 19)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_device_type_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_update_device_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_update_device_cpp ../vvllm_git/gpt-4/template_context_full/acc_update_device.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_update_device.cpp\", line 17: error: argument of type \"const void *\" is incompatible with parameter of type \"void *\"\n      gpu_array = (float*)acc_copyin((const void*)random_array, 10 * sizeof(float));\n                                     ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_update_device.cpp\", line 23: error: identifier \"h_void\" is undefined\n      acc_update_device((h_void*)random_array, 10 * sizeof(float));\n                         ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_update_device.cpp\", line 23: error: expected an expression\n      acc_update_device((h_void*)random_array, 10 * sizeof(float));\n                                ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_update_device.cpp\", line 23: error: expected a \")\"\n      acc_update_device((h_void*)random_array, 10 * sizeof(float));\n                                 ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_update_device.cpp\", line 23: error: too few arguments in function call\n      acc_update_device((h_void*)random_array, 10 * sizeof(float));\n                                 ^\n\n5 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_update_device.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_update_device_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct.cpp",
                "output": "test1():\n     11, Generating NVIDIA GPU code\n         14, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n     11, Generating implicit copyout(A[:]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "cache_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/cache_directive_cpp ../vvllm_git/gpt-4/template_context_full/cache_directive.cpp",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - rand (../vvllm_git/gpt-4/template_context_full/cache_directive.cpp: 17)\ntest1():\n     14, Generating copy(arr[:]) [if not already present]\n     17, Accelerator restriction: call to 'rand' with no acc routine information\n     18, Generating NVIDIA GPU code\n         21, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     21, Generating implicit private(err)\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/cache_directive_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_wait_async_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_wait_async_c ../vvllm_git/gpt-4/template_context_full/acc_wait_async.c",
                "output": "test1:\n     20, Generating NVIDIA GPU code\n         24, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     20, Generating implicit copy(a[:1024]) [if not already present]\n     26, Generating NVIDIA GPU code\n         30, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     26, Generating implicit copy(b[:1024]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_wait_async_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_if_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_if_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_if_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_if_clause.c\", line 26: error: invalid text in pragma\n      #pragma acc enter data copyin(a[0:n], b[0:n]) copyout(c[0:n])\n                                                    ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_if_clause.c\", line 26: error: invalid text in pragma\n      #pragma acc enter data copyin(a[0:n], b[0:n]) copyout(c[0:n])\n                                                           ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_if_clause.c\", line 26: error: extra text after expected end of preprocessing directive\n      #pragma acc enter data copyin(a[0:n], b[0:n]) copyout(c[0:n])\n                                                            ^\n\n3 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/kernels_construct_if_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_if_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "async_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/async_clause_fortran ../vvllm_git/gpt-4/template_context_full/async_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier field (../vvllm_git/gpt-4/template_context_full/async_clause.F90: 17)\nNVFORTRAN-S-0034-Syntax error at or near end of line (../vvllm_git/gpt-4/template_context_full/async_clause.F90: 30)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/async_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "set_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/set_directive_cpp ../vvllm_git/gpt-4/template_context_full/set_directive.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/set_directive.cpp\", line 8: error: identifier \"acc_device_last\" is undefined\n      for (int device_type = acc_device_none; device_type < acc_device_last; ++device_type){\n                                                            ^\n\n\"../vvllm_git/gpt-4/template_context_full/set_directive.cpp\", line 9: error: argument of type \"int\" is incompatible with parameter of type \"acc_device_t\"\n          if (acc_get_num_devices(device_type) > 0) {\n                                  ^\n\n\"../vvllm_git/gpt-4/template_context_full/set_directive.cpp\", line 11: error: Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default'\n              #pragma acc set device_num(0) device_type(device_type)\n                                                        ^\n\n\"../vvllm_git/gpt-4/template_context_full/set_directive.cpp\", line 13: error: argument of type \"int\" is incompatible with parameter of type \"acc_device_t\"\n              if (acc_get_device_type() != device_type || acc_get_device_num(device_type) != 0) {\n                                                                             ^\n\n4 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/set_directive.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/set_directive_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_reduction_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_reduction_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_reduction_clause.cpp",
                "output": "test1():\n     15, Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         18, #pragma acc for seq\n     15, Generating implicit copyin(arr[:100]) [if not already present]\n     18, Generating implicit private(reducedVal)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_reduction_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "loop_construct_independent_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_independent_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_independent_clause.F90",
                "output": "test1:\n     10, Memory set idiom, array assignment replaced by call to pgf90_mset4\n     11, Memory set idiom, array assignment replaced by call to pgf90_mset4\n     12, Memory zero idiom, array assignment replaced by call to pgf90_mzero4\n     16, Generating NVIDIA GPU code\n         17, !$acc loop gang ! blockidx%x\n         19, !$acc loop vector(128) ! threadidx%x\n         20, !$acc loop seq\n     16, Generating implicit copy(c(:,:)) [if not already present]\n         Generating implicit copyin(b(:,:),a(:,:)) [if not already present]\n     19, Loop is parallelizable\n     20, Complex loop carried dependence of c prevents parallelization\n         Loop carried dependence of c prevents parallelization\n         Loop carried backward dependence of c prevents vectorization\n     21, FMA (fused multiply-add) instruction(s) generated\n/opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/lib/f90main.o: In function `main':\nnvc87si04rK2QW7.ll:(.text+0x2f): undefined reference to `MAIN_'\npgacclnk: child process exit status 1: /bin/ld",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_independent_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_default_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_default_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_default_clause.c",
                "output": "test1:\n     11, Generating copyout(b) [if not already present]\n         Generating copyin(a) [if not already present]\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_default_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_deviceptr_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_deviceptr_clause_c ../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.c\", line 11: warning: variable \"device_data\" is used before its value is set [used_before_set]\n      #pragma acc data create(device_data[1])\n                              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.c\", line 32: error: identifier \"failed\" is undefined\n      failed = 0;\n      ^\n\n\"../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.c\", line 33: error: expected an identifier\n      int NUM_TEST_CALLS = 10;\n          ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_deviceptr_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_if_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_if_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_if_clause.cpp",
                "output": "test1():\n     13, Generating copy(isAccelerator) [if not already present]\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_if_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_async_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_async_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_async_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_async_clause.cpp\", line 27: error: too few arguments in function call\n      acc_wait_async();\n                     ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/serial_construct_async_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_async_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "wait_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/wait_directive_c ../vvllm_git/gpt-4/template_context_full/wait_directive.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/wait_directive.c\", line 11: warning: variable \"compute\" was declared but never referenced [declared_but_not_referenced]\n      int ref, compute;\n               ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\nNVC++-S-0155-Compiler failed to translate accelerator region (see -Minfo messages): Character local variable unsupported on device (../vvllm_git/gpt-4/template_context_full/wait_directive.c: 17)\nNVC++-S-0155-Compiler failed to translate accelerator region (see -Minfo messages): Character local variable unsupported on device (../vvllm_git/gpt-4/template_context_full/wait_directive.c: 25)\ntest1:\n     25, Generating present(b)\nNVC++-F-0704-Compilation aborted due to previous errors. (../vvllm_git/gpt-4/template_context_full/wait_directive.c)\nNVC++/x86-64 Linux 23.1-0: compilation aborted",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/wait_directive_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "host_data_construct_use_device_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/host_data_construct_use_device_clause_cpp ../vvllm_git/gpt-4/template_context_full/host_data_construct_use_device_clause.cpp",
                "output": "test1():\n     22, Generating update device(device_ptr[:10])\n         Generating enter data create(device_ptr[:10])\n     31, Generating exit data delete(device_ptr[:10])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/host_data_construct_use_device_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_create_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_create_cpp ../vvllm_git/gpt-4/template_context_full/acc_create.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_create_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "declare_directive_link_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/declare_directive_link_clause_cpp ../vvllm_git/gpt-4/template_context_full/declare_directive_link_clause.cpp",
                "output": "NVC++-W-1053-External and Static variables are not supported in acc routine - foo (../vvllm_git/gpt-4/template_context_full/declare_directive_link_clause.cpp: 11)\nsquare_foo():\n     10, Generating acc routine seq\ntest():\n     20, Generating copyout(foo) [if not already present]\nNVC++/x86-64 Linux 23.1-0: compilation completed with warnings",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/declare_directive_link_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_init_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_init_cpp ../vvllm_git/gpt-4/template_context_full/acc_init.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_init_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "kernels_construct_async_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_async_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_async_clause.cpp",
                "output": "test1():\n     17, Generating implicit copyin(A[:100]) [if not already present]\n         Generating implicit copy(B[:100]) [if not already present]\n     20, Complex loop carried dependence of A-> prevents parallelization\n         Loop carried dependence of B-> prevents parallelization\n         Loop carried backward dependence of B-> prevents vectorization\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         20, #pragma acc loop seq\n     20, Complex loop carried dependence of A-> prevents parallelization",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_async_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "declare_directive_link_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/declare_directive_link_clause_c ../vvllm_git/gpt-4/template_context_full/declare_directive_link_clause.c",
                "output": "test1:\n     17, Generating enter data copyin(x[:])\n         Generating NVIDIA GPU code\n         23, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n             Generating reduction(max:err)\n     17, Generating implicit copy(err) [if not already present]\n         Generating implicit copyin(x[:]) [if not already present]\n     30, Generating exit data delete(x[:])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/declare_directive_link_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "data_deviceptr_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_deviceptr_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.cpp",
                "output": "test1():\n     25, Generating NVIDIA GPU code\n         27, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_deviceptr_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "data_construct_copyin_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_copyin_clause_c ../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.c\", line 5: warning: function \"srand\" declared implicitly [implicit_func_decl]\n      srand(SEED);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.c\", line 5: error: identifier \"SEED\" is undefined\n      srand(SEED);\n            ^\n\n\"../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.c\", line 7: warning: function \"malloc\" declared implicitly [implicit_func_decl]\n      int* host_array = (int*)malloc(100*sizeof(int));\n                              ^\n\n\"../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.c\", line 14: warning: function \"acc_deviceptr\" declared implicitly [implicit_func_decl]\n          device_array = (int*)acc_deviceptr(host_array);\n                               ^\n\n\"../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.c\", line 26: warning: function \"free\" declared implicitly [implicit_func_decl]\n      free(host_array);\n      ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_copyin_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_no_create_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_no_create_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_construct_no_create_clause.cpp",
                "output": "test1():\n     19, Generating NVIDIA GPU code\n         21, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     19, Generating nocreate(a[:1000]) [if not already present]\n         Generating implicit copyout(b[:1000]) [if not already present]\n     28, FMA (fused multiply-add) instruction(s) generated",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_no_create_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "loop_construct_gang_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_gang_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_gang_clause.c",
                "output": "test1:\n     17, Generating NVIDIA GPU code\n         21, #pragma acc loop gang /* blockIdx.x */\n         23, #pragma acc loop vector(128) /* threadIdx.x */\n     17, Generating implicit copy(result_arr[:size]) [if not already present]\n     21, Generating implicit private(j)\n     23, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_gang_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "parallel_construct_num_workersclause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_num_workersclause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.c",
                "output": "test1:\n     14, Generating copy(results[:num_workers*num_gangs]) [if not already present]\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_num_workersclause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_default_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_default_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_default_clause.c",
                "output": "test1:\n     15, Generating copy(a[:vector_size],b[:vector_size]) [if not already present]\n     18, Complex loop carried dependence of a-> prevents parallelization\n         Loop carried dependence of b-> prevents parallelization\n         Loop carried backward dependence of b-> prevents vectorization\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         18, #pragma acc loop seq\n     18, Loop carried dependence of b-> prevents parallelization",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_default_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_num_workersclause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_num_workersclause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.c\", line 7: warning: use of a const variable in a constant expression is nonstandard in C [const_var_in_C_const_expr]\n      float actual[num_workers];\n                   ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\ntest1:\n     11, Generating NVIDIA GPU code\n         13, #pragma acc loop worker(4) /* threadIdx.y */\n     11, Generating implicit copyout(actual[:]) [if not already present]\n     13, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_num_workersclause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_memcpy_device_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_memcpy_device_c ../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_memcpy_device_c",
                "output": "",
                "exit_code": -11,
                "passed": false
            }
        },
        "exit_data_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/exit_data_directive_cpp ../vvllm_git/gpt-4/template_context_full/exit_data_directive.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/exit_data_directive.cpp\", line 24: error: identifier \"original_x\" is undefined\n          if(x[i] != (original_x[i] + 1)){\n                      ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/exit_data_directive.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/exit_data_directive_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_private_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_private_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.F90: 10)\nNVFORTRAN-S-0072-Assignment operation illegal to constant or parameter n (../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.F90: 12)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_private_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_on_device_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_on_device_fortran ../vvllm_git/gpt-4/template_context_full/acc_on_device.F90",
                "output": "NVFORTRAN-S-0087-Non-constant expression where constant expression required (../vvllm_git/gpt-4/template_context_full/acc_on_device.F90: 8)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_on_device_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_tile_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_tile_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_tile_clause.cpp",
                "output": "test1():\n     18, Generating NVIDIA GPU code\n         22, #pragma acc loop gang, vector tile(32,32) /* blockIdx.x threadIdx.x */\n         23,   /* blockIdx.x threadIdx.x tiled */\n     18, Generating implicit copy(matrix[:][:]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_tile_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_self_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_self_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.c\", line 12: error: invalid text in pragma\n      #pragma acc parallel self(condition)\n                           ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.c\", line 12: error: invalid text in pragma\n      #pragma acc parallel self(condition)\n                               ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.c\", line 12: error: extra text after expected end of preprocessing directive\n      #pragma acc parallel self(condition)\n                                ^\n\n3 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_self_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_vector_length_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_vector_length_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_vector_length_clause.cpp",
                "output": "test1():\n     22, Generating copyin(array_host[:1024]) [if not already present]\n         Generating copy(array_device[:1024]) [if not already present]\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         24, #pragma acc for seq",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_vector_length_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_memcpy_to_device_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_memcpy_to_device_fortran ../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.F90",
                "output": "NVFORTRAN-S-0148-Reference to TYPE(C_PTR) expression required (../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.F90: 18)\nNVFORTRAN-S-0155-Could not resolve generic procedure acc_memcpy_to_device (../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.F90: 19)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_memcpy_to_device_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_set_device_type_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_set_device_type_fortran ../vvllm_git/gpt-4/template_context_full/acc_set_device_type.F90",
                "output": "NVFORTRAN-S-0038-Symbol, acc_device_gpu, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_set_device_type.F90: 3)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_set_device_type_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_num_gangs_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_num_gangs_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_num_gangs_clause.cpp",
                "output": "test1():\n     16, Generating copy(a[:1000]) [if not already present]\n         Generating NVIDIA GPU code\n         18, #pragma acc loop gang(50), vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_num_gangs_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "atomic_construct_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/atomic_construct_c ../vvllm_git/gpt-4/template_context_full/atomic_construct.c",
                "output": "test1:\n     14, Generating copy(counter) [if not already present]\n     16, Generating NVIDIA GPU code\n         18, #pragma acc loop gang(gangNum), worker(workerNum), vector(vectorNum) /* blockIdx.x threadIdx.y threadIdx.x */\n             Generating reduction(+:counter)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/atomic_construct_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_num_gangs_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_num_gangs_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.c\", line 8: error: identifier \"NUM_GANGS\" is undefined\n      char verify[NUM_GANGS];\n                  ^\n\n\"../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.c\", line 15: warning: function \"_acc_num_gangs\" declared implicitly [implicit_func_decl]\n              real_num_gangs = _acc_num_gangs();\n                               ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_num_gangs_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_num_gangs_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_num_gangs_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_num_gangs_clause.F90",
                "output": "test_num_gangs:\n     14, Memory zero idiom, loop replaced by call to __c_mzero4\n     16, Generating implicit copy(array(:)) [if not already present]\n     17, Loop is parallelizable\n         Generating NVIDIA GPU code\n         17, !$acc loop gang(10), vector(128) ! blockidx%x threadidx%x\n     22, sum reduction inlined",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_num_gangs_clause_fortran",
                "output": "Test Passed.",
                "exit_code": 0,
                "passed": true
            }
        },
        "kernels_construct_if_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_if_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_if_clause.cpp",
                "output": "test1():\n     27, Generating copy(a[:n],c[:n],b[:n]) [if not already present]\n     28, Complex loop carried dependence of b->,a-> prevents parallelization\n         Loop carried dependence of c-> prevents parallelization\n         Loop carried backward dependence of c-> prevents vectorization\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         28, #pragma acc loop seq\n     28, Complex loop carried dependence of b->,a-> prevents parallelization\n         Loop carried backward dependence of c-> prevents vectorization",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_if_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "combined_constucts_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/combined_constucts_cpp ../vvllm_git/gpt-4/template_context_full/combined_constucts.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/combined_constucts.cpp\", line 21: error: identifier \"output\" is undefined\n          if(fabs(output[i] - a[i] * 2.0f) > PRECISION) {\n                  ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/combined_constucts.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/combined_constucts_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_update_self_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_update_self_cpp ../vvllm_git/gpt-4/template_context_full/acc_update_self.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_update_self.cpp\", line 2: catastrophic error: cannot open source file \"OpenACC/openacc.h\"\n  #include <OpenACC/openacc.h>\n                              ^\n\n1 catastrophic error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_update_self.cpp\".\nCompilation terminated.",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_update_self_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_present_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_present_clause_c ../vvllm_git/gpt-4/template_context_full/data_present_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/data_present_clause.c\", line 10: error: identifier \"SIZE\" is undefined\n      float* h_vec = (float* )malloc (SIZE * sizeof (float));\n                                      ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/data_present_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_present_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_get_property_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_get_property_cpp ../vvllm_git/gpt-4/template_context_full/acc_get_property.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_get_property_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_async_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_async_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_async_clause.c",
                "output": "test1:\n     24, Generating enter data copyin(b[:100])\n         Generating enter data create(c[:100])\n         Generating enter data copyin(a[:100])\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         25, #pragma acc for seq\n     24, Generating implicit copyout(c[:100]) [if not already present]\n         Generating implicit copyin(b[:100],a[:100]) [if not already present]\n     28, Generating exit data copyout(c[:100])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_async_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_free_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_free_cpp ../vvllm_git/gpt-4/template_context_full/acc_free.cpp",
                "output": "test_acc_free():\n     11, Generating create(size) [if not already present]\n     18, Generating present(size)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_free_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "data_construct_copy_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_copy_clause_c ../vvllm_git/gpt-4/template_context_full/data_construct_copy_clause.c",
                "output": "test1:\n     18, Generating copy(a_host[:length]) [if not already present]\n     20, Loop is parallelizable\n         Generating NVIDIA GPU code\n         20, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_copy_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_default_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_default_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_default_clause.F90",
                "output": "test1:\n     11, Accelerator serial kernel generated\n         Generating implicit private(c)\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_default_clause_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_self_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_self_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.cpp\", line 30: error: identifier \"acc_memcpy_to_host\" is undefined\n      acc_memcpy_to_host(c_device, c_host, 1000*sizeof(int));\n      ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_self_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_num_workersclause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_num_workersclause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.F90",
                "output": "NVFORTRAN-S-0121-Operation requires logical or integer data types (../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.F90: 44)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/parallel_construct_num_workersclause.F90: 32)\n  0 inform,   0 warnings,   2 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_num_workersclause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "combined_constucts_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/combined_constucts_c ../vvllm_git/gpt-4/template_context_full/combined_constucts.c",
                "output": "test1:\n     11, Generating implicit copy(hundred[:]) [if not already present]\n     14, Loop is parallelizable\n         Generating NVIDIA GPU code\n         14, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     16, Generating NVIDIA GPU code\n         19, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n     16, Generating implicit copy(hundred[:]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/combined_constucts_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "kernels_construct_num_workersclause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_num_workersclause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_num_workersclause.c",
                "output": "test1:\n     19, Generating copy(a_host[:num_workers]) [if not already present]\n     22, Loop is parallelizable\n         Generating NVIDIA GPU code\n         22, #pragma acc loop gang, vector(32) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_num_workersclause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "kernels_construct_private_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_private_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.cpp",
                "output": "test1():\n     21, Generating implicit copyin(a[:10],b[:10]) [if not already present]\n     25, Scalar last value needed after loop for err at line 36\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         25, #pragma acc loop seq\n     25, Scalar last value needed after loop for err at line 36",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_private_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "shutdown_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/shutdown_directive_c ../vvllm_git/gpt-4/template_context_full/shutdown_directive.c",
                "output": "test1:\n     11, Generating copy(err) [if not already present]\n     13, Generating copy(err) [if not already present]\n         Generating implicit private(err)\n         Generating NVIDIA GPU code\n     20, Generating copy(err) [if not already present]\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/shutdown_directive_c",
                "output": "",
                "exit_code": -11,
                "passed": false
            }
        },
        "acc_wait_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_wait_fortran ../vvllm_git/gpt-4/template_context_full/acc_wait.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/acc_wait.F90: 12)\nNVFORTRAN-S-0034-Syntax error at or near identifier i (../vvllm_git/gpt-4/template_context_full/acc_wait.F90: 24)\nNVFORTRAN-S-0034-Syntax error at or near identifier i (../vvllm_git/gpt-4/template_context_full/acc_wait.F90: 32)\n  0 inform,   0 warnings,   3 severes, 0 fatal for test_acc_wait",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_wait_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_set_default_async_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_set_default_async_c ../vvllm_git/gpt-4/template_context_full/acc_set_default_async.c",
                "output": "test1:\n     13, Generating copy(compute_var) [if not already present]\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_set_default_async_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_cpp ../vvllm_git/gpt-4/template_context_full/data_construct.cpp",
                "output": "test1():\n     28, Generating copyout(b[:1000]) [if not already present]\n         Generating copy(a[:1000]) [if not already present]\n         Generating NVIDIA GPU code\n         30, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_independent_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_independent_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_independent_clause.c",
                "output": "test1:\n     22, Generating NVIDIA GPU code\n         26, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n     22, Generating implicit copyin(a[:]) [if not already present]\n         Generating implicit copyout(c[:]) [if not already present]\n         Generating implicit copyin(b[:]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_independent_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_num_workersclause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_num_workersclause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.cpp\", line 20: error: identifier \"acc_get_num_workers\" is undefined\n          num_workers = acc_get_num_workers();\n                        ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/serial_construct_num_workersclause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_num_workersclause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "enter_data_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/enter_data_directive_c ../vvllm_git/gpt-4/template_context_full/enter_data_directive.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/enter_data_directive.c\", line 9: error: identifier \"N\" is undefined\n      int *a = (int*) malloc(N*sizeof(int));\n                             ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/enter_data_directive.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/enter_data_directive_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_get_device_type_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_get_device_type_c ../vvllm_git/gpt-4/template_context_full/acc_get_device_type.c",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - acc_get_device_type (../vvllm_git/gpt-4/template_context_full/acc_get_device_type.c: 13)\ntest1:\n     13, Accelerator restriction: call to 'acc_get_device_type' with no acc routine information\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_get_device_type_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_copy_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_copy_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_construct_copy_clause.F90",
                "output": "test1:\n     16, Generating copy(b(size)) [if not already present]\n         Generating copyin(a(size)) [if not already present]\n     24, Loop is parallelizable\n         Generating NVIDIA GPU code\n         24, !$acc loop gang, vector(128) ! blockidx%x threadidx%x\n     30, Generating update self(b(size))",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_copy_clause_fortran",
                "output": "Test Failed: Check the implementation of data construct copy clause",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_wait_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_wait_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_wait_clause.c",
                "output": "test1:\n     15, Generating copyin(h_a) [if not already present]\n         Generating copyout(d_a[:1]) [if not already present]\n         Generating present(d_a[:1],h_a)\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_wait_clause_c",
                "output": "",
                "exit_code": -11,
                "passed": false
            }
        },
        "parallel_construct_private_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_private_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_private_clause.cpp",
                "output": "test():\n     11, Generating implicit private(original)\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_private_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_firstprivate_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_firstprivate_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_firstprivate_clause.c",
                "output": "test1:\n     14, Generating NVIDIA GPU code\n         Generating implicit copyout(b[0]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_firstprivate_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "variable_predetermined_data_attributes_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/variable_predetermined_data_attributes_fortran ../vvllm_git/gpt-4/template_context_full/variable_predetermined_data_attributes.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/variable_predetermined_data_attributes.F90: 8)\nNVFORTRAN-S-0044-Multiple declaration for symbol n (../vvllm_git/gpt-4/template_context_full/variable_predetermined_data_attributes.F90: 9)\nNVFORTRAN-S-0038-Symbol, n, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/variable_predetermined_data_attributes.F90: 2)\n  0 inform,   1 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/variable_predetermined_data_attributes_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "variable_predetermined_data_attributes_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/variable_predetermined_data_attributes_c ../vvllm_git/gpt-4/template_context_full/variable_predetermined_data_attributes.c",
                "output": "test1:\n     21, Generating NVIDIA GPU code\n         21, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n     21, Generating implicit copyin(a[:]) [if not already present]\n         Generating implicit copyout(c[:]) [if not already present]\n         Generating implicit copyin(b[:]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/variable_predetermined_data_attributes_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_create_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_create_fortran ../vvllm_git/gpt-4/template_context_full/acc_create.F90",
                "output": "NVFORTRAN-S-0121-Operation requires logical or integer data types (../vvllm_git/gpt-4/template_context_full/acc_create.F90: 60)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_create.F90: 47)\n  0 inform,   0 warnings,   2 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_create_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_seq_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_seq_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_seq_clause.c",
                "output": "test1:\n     11, Generating copy(a[:1024]) [if not already present]\n         Generating NVIDIA GPU code\n         13, #pragma acc loop seq",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_seq_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_create_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_create_c ../vvllm_git/gpt-4/template_context_full/acc_create.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_create_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "declare_directive_link_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/declare_directive_link_clause_fortran ../vvllm_git/gpt-4/template_context_full/declare_directive_link_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near '(/' (../vvllm_git/gpt-4/template_context_full/declare_directive_link_clause.F90: 16)\nNVFORTRAN-S-0034-Syntax error at or near '(/' (../vvllm_git/gpt-4/template_context_full/declare_directive_link_clause.F90: 23)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/declare_directive_link_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_init_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_init_fortran ../vvllm_git/gpt-4/template_context_full/acc_init.F90",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_init_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "loop_construct_private_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_private_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.c\", line 44: error: expected an identifier\n      int NUM_TEST_CALLS = 1;\n          ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/loop_construct_private_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_private_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_deviceptr_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_deviceptr_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.F90: 8)\nNVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.F90: 9)\nNVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.F90: 10)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/data_deviceptr_clause.F90: 3)\n  0 inform,   0 warnings,   4 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_deviceptr_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_async_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_async_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_async_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/kernels_construct_async_clause.F90: 7)\nNVFORTRAN-S-0104-Illegal control structure - unterminated ACC KERNELS construct (../vvllm_git/gpt-4/template_context_full/kernels_construct_async_clause.F90: 19)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_async_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_no_create_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_no_create_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_construct_no_create_clause.F90",
                "output": "test1:\n     11, Memory set idiom, loop replaced by call to __c_mset4\n     12, Memory zero idiom, loop replaced by call to __c_mzero4\n     14, Generating no_create(b(:)) [if not already present]\n     15, Generating copy(a(:)) [if not already present]\n         Generating NVIDIA GPU code\n         16, !$acc loop gang, vector(96) ! blockidx%x threadidx%x\n     16, Memory copy idiom, loop replaced by call to __c_mcopy4",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_no_create_clause_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "async_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/async_clause_cpp ../vvllm_git/gpt-4/template_context_full/async_clause.cpp",
                "output": "test1():\n     19, Generating copyin(a[:size]) [if not already present]\n         Generating copyout(b[:size]) [if not already present]\n     21, Generating NVIDIA GPU code\n         22, #pragma acc loop seq\n     22, Complex loop carried dependence of a-> prevents parallelization\n         Loop carried dependence of b-> prevents parallelization\n         Loop carried backward dependence of b-> prevents vectorization\n     25, Generating update self(b[:size])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/async_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_reduction_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_reduction_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_reduction_clause.F90",
                "output": "NVFORTRAN-S-0038-Symbol, errors, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/serial_construct_reduction_clause.F90)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_reduction_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "set_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/set_directive_fortran ../vvllm_git/gpt-4/template_context_full/set_directive.F90",
                "output": "NVFORTRAN-S-0087-Non-constant expression where constant expression required (../vvllm_git/gpt-4/template_context_full/set_directive.F90: 14)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/set_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_if_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_if_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_if_clause.F90",
                "output": "NVFORTRAN-F-0906-Can't find include file acc_testsuite.F (../vvllm_git/gpt-4/template_context_full/serial_construct_if_clause.F90: 2)\nNVFORTRAN/x86-64 Linux 23.1-0: compilation aborted",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_if_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "host_data_construct_use_device_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/host_data_construct_use_device_clause_fortran ../vvllm_git/gpt-4/template_context_full/host_data_construct_use_device_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier i (../vvllm_git/gpt-4/template_context_full/host_data_construct_use_device_clause.F90: 16)\nNVFORTRAN-S-0034-Syntax error at or near identifier for (../vvllm_git/gpt-4/template_context_full/host_data_construct_use_device_clause.F90: 20)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/host_data_construct_use_device_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_async_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_async_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_async_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for test1 (../vvllm_git/gpt-4/template_context_full/serial_construct_async_clause.F90: 50)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/serial_construct_async_clause.F90: 50)\n  0 inform,   1 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_async_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_get_device_num_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_get_device_num_c ../vvllm_git/gpt-4/template_context_full/acc_get_device_num.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_get_device_num_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_independent_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_independent_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_independent_clause.cpp",
                "output": "test1():\n     22, Generating copy(a[:100],c[:100],b[:100]) [if not already present]\n         Generating NVIDIA GPU code\n         26, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_independent_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "update_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/update_directive_cpp ../vvllm_git/gpt-4/template_context_full/update_directive.cpp",
                "output": "test1():\n     16, Generating enter data create(device_array[:100])\n         Generating update device(device_array[:100])\n     29, Generating update self(host_array[:100])\n     45, Generating exit data delete(device_array[:1])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/update_directive_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_set_device_num_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_set_device_num_cpp ../vvllm_git/gpt-4/template_context_full/acc_set_device_num.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_set_device_num_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_get_property_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_get_property_c ../vvllm_git/gpt-4/template_context_full/acc_get_property.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_get_property_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_device_type_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_device_type_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_device_type_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/loop_construct_device_type_clause.cpp\", line 8: error: identifier \"SIZE\" is undefined\n      int hostArr[SIZE], deviceArr[SIZE];\n                  ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/loop_construct_device_type_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_device_type_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_update_device_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_update_device_fortran ../vvllm_git/gpt-4/template_context_full/acc_update_device.F90",
                "output": "NVFORTRAN-S-0038-Symbol, i, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_update_device.F90: 3)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_update_device_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "cache_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/cache_directive_fortran ../vvllm_git/gpt-4/template_context_full/cache_directive.F90",
                "output": "NVFORTRAN-S-0023-Syntax error - unbalanced parentheses (../vvllm_git/gpt-4/template_context_full/cache_directive.F90: 27)\n  0 inform,   0 warnings,   1 severes, 0 fatal for cache_test",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/cache_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct.F90",
                "output": "NVFORTRAN-S-0022-Unexpected end of file - missing END statement (../vvllm_git/gpt-4/template_context_full/parallel_construct.F90: 22)\n  0 inform,   0 warnings,   1 severes, 0 fatal for MAIN",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_attach_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_attach_fortran ../vvllm_git/gpt-4/template_context_full/acc_attach.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/acc_attach.F90: 8)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_attach_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_memcpy_to_device_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_memcpy_to_device_c ../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.c\", line 5: warning: incompatible redefinition of macro \"SEED\" (declared at line 74 of \"../vvllm_git/gpt-4/template_context_full/acc_testsuite.h\") [bad_macro_redef]\n  #define SEED 100\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/acc_memcpy_to_device.c\", line 6: warning: incompatible redefinition of macro \"NUM_TEST_CALLS\" (declared at line 78 of \"../vvllm_git/gpt-4/template_context_full/acc_testsuite.h\") [bad_macro_redef]\n  #define NUM_TEST_CALLS 100\n          ^\n\ntest1:\n     20, Generating present(device_data[:])\n         Generating NVIDIA GPU code\n         23, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     20, Generating implicit copyin(host_data[:1024]) [if not already present]\n     23, Generating implicit private(err)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_memcpy_to_device_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "reference_counters_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/reference_counters_fortran ../vvllm_git/gpt-4/template_context_full/reference_counters.F90",
                "output": "NVFORTRAN-S-0038-Symbol, acc_device_gpu, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/reference_counters.F90: 3)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/reference_counters_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_worker_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_worker_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_worker_clause.F90",
                "output": "test1:\n     20, Generating NVIDIA GPU code\n         21, !$acc loop seq ! threadidx%y\n     20, Generating implicit copyout(result(:)) [if not already present]\n         Generating implicit copyin(b(:),a(:)) [if not already present]\n     21, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_worker_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_if_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_if_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_if_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_if_clause.c\", line 15: warning: function \"acc_is_device_type\" declared implicitly [implicit_func_decl]\n          isOffload = acc_is_device_type(acc_device_not_host);\n                      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\nNVC++-S-1061-Procedures called in a compute region must have acc routine information - acc_is_device_type (../vvllm_git/gpt-4/template_context_full/serial_construct_if_clause.c: 15)\ntest1:\n     15, Accelerator restriction: call to 'acc_is_device_type' with no acc routine information\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_if_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_self_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_self_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier test1 (../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.F90: 5)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.F90: 6)\nNVFORTRAN-S-0070-Incorrect sequence of statements : implicit none (../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.F90: 7)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.F90: 7)\nNVFORTRAN-S-0034-Syntax error at or near SELF (../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.F90: 14)\nNVFORTRAN-S-0302-Unmatched ENDFUNCTION statement (../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.F90: 27)\n  0 inform,   0 warnings,   6 severes, 0 fatal for MAIN\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.F90: 29)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_self_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_gang_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_gang_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_gang_clause.cpp",
                "output": "test1():\n     18, Generating NVIDIA GPU code\n         20, #pragma acc loop gang(256), vector(4) /* blockIdx.x threadIdx.x */\n     18, Generating implicit copy(a[:1024]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_gang_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_malloc_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_malloc_fortran ../vvllm_git/gpt-4/template_context_full/acc_malloc.F90",
                "output": "NVFORTRAN-S-0087-Non-constant expression where constant expression required (../vvllm_git/gpt-4/template_context_full/acc_malloc.F90: 11)\nNVFORTRAN-S-0034-Syntax error at or near identifier ptr (../vvllm_git/gpt-4/template_context_full/acc_malloc.F90: 13)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1\nNVFORTRAN-S-0196-Deferred-shape specifiers are required for failcode (../vvllm_git/gpt-4/template_context_full/acc_malloc.F90)\nNVFORTRAN-S-0196-Deferred-shape specifiers are required for testrun (../vvllm_git/gpt-4/template_context_full/acc_malloc.F90)\n  0 inform,   0 warnings,   2 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_malloc_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_get_default_async_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_get_default_async_fortran ../vvllm_git/gpt-4/template_context_full/acc_get_default_async.F90",
                "output": "NVFORTRAN-S-0038-Symbol, acc_get_default_async, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_get_default_async.F90: 2)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_get_default_async_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "async_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/async_clause_c ../vvllm_git/gpt-4/template_context_full/async_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/async_clause.c\", line 10: error: identifier \"N\" is undefined\n      int *a = (int*)malloc(N*sizeof(int));\n                            ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/async_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/async_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_delete_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_delete_cpp ../vvllm_git/gpt-4/template_context_full/acc_delete.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_delete.cpp\", line 32: error: branching into or out of a parallel region is not allowed\n              break;\n              ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_delete.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_delete_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_worker_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_worker_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_worker_clause.c",
                "output": "test1:\n     16, Generating NVIDIA GPU code\n         20, #pragma acc loop seq /* threadIdx.y */\n     16, Generating implicit copy(data[:100]) [if not already present]\n     20, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_worker_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_wait_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_wait_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_wait_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/acc_testsuite.Fh: 7)\nNVFORTRAN-S-0188-Argument number 1 to acc_get_num_devices: type mismatch (../vvllm_git/gpt-4/template_context_full/parallel_construct_wait_clause.F90: 11)\nNVFORTRAN-S-0038-Symbol, acc_device_all, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/parallel_construct_wait_clause.F90: 3)\n  0 inform,   1 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_wait_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "atomic_construct_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/atomic_construct_fortran ../vvllm_git/gpt-4/template_context_full/atomic_construct.F90",
                "output": "NVFORTRAN-S-0083-Vector expression used where scalar expression required (../vvllm_git/gpt-4/template_context_full/atomic_construct.F90: 31)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1\nNVFORTRAN-S-0121-Operation requires logical or integer data types (../vvllm_git/gpt-4/template_context_full/atomic_construct.F90: 56)\nNVFORTRAN-S-0038-Symbol, testrun, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/atomic_construct.F90: 44)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/atomic_construct.F90: 44)\n  0 inform,   0 warnings,   3 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/atomic_construct_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_wait_any_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_wait_any_cpp ../vvllm_git/gpt-4/template_context_full/acc_wait_any.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_wait_any.cpp\", line 12: warning: variable \"asyncList\" is used before its value is set [used_before_set]\n      #pragma acc parallel num_gangs(100) async(asyncList[0])\n                                                ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/acc_wait_any.cpp\", line 28: error: identifier \"acc_wait_any\" is undefined\n      int asyncId = acc_wait_any(numAsync, asyncList);\n                    ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_wait_any.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_wait_any_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_if_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_if_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_if_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/parallel_construct_if_clause.c\", line 12: error: invalid text in pragma\n          #pragma acc on_device(acc_device_not_host)\n                               ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_if_clause.c\", line 16: error: invalid text in pragma\n          #pragma acc on_device(acc_device_host)\n                               ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/parallel_construct_if_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_if_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_firstprivate_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_firstprivate_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.cpp\", line 20: error: invalid text in pragma\n      #pragma acc kernels copyin(a[0:length], b[0:length]), copyout(c[0:length]), firstprivate(scalar)\n                                                                                                     ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_firstprivate_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_present_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_present_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_present_clause.cpp",
                "output": "NVC++-S-1067-Cannot determine bounds for array - dev_array (../vvllm_git/gpt-4/template_context_full/data_present_clause.cpp: 21)\ntest1():\n     19, Generating enter data create(host_array[:10])\n     21, Generating present(host_array[:])\n         Generating implicit private(dev_array)\n         Generating NVIDIA GPU code\n         24, #pragma acc loop seq\n     24, Loop is parallelizable\n     27, Generating exit data copyout(host_array[:10])\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_present_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_set_device_type_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_set_device_type_c ../vvllm_git/gpt-4/template_context_full/acc_set_device_type.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_set_device_type_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_vector_length_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_vector_length_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_vector_length_clause.F90",
                "output": "test1:\n     13, Memory copy idiom, loop replaced by call to __c_mcopy4\n     14, Memory copy idiom, loop replaced by call to __c_mcopy4\n     16, Generating implicit copyin(b(:)) [if not already present]\n         Generating implicit copyout(c(:)) [if not already present]\n         Generating implicit copyin(a(:)) [if not already present]\n     17, Loop is parallelizable\n         Generating NVIDIA GPU code\n         17, !$acc loop gang, vector(32) ! blockidx%x threadidx%x",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_vector_length_clause_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct.F90",
                "output": "NVFORTRAN-S-0038-Symbol, testrun, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/serial_construct.F90: 33)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_c ../vvllm_git/gpt-4/template_context_full/data_construct.c",
                "output": "test1:\n     24, Generating copyout(b[:length]) [if not already present]\n         Generating copy(a[:length]) [if not already present]\n         Generating NVIDIA GPU code\n         26, #pragma acc loop gang /* blockIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_is_present_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_is_present_c ../vvllm_git/gpt-4/template_context_full/acc_is_present.c",
                "output": "test1:\n     25, Generating enter data copyin(array[:num_elements])\n     33, Generating exit data delete(array[:1])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_is_present_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_memcpy_from_device_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_memcpy_from_device_cpp ../vvllm_git/gpt-4/template_context_full/acc_memcpy_from_device.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_memcpy_from_device.cpp\", line 33: error: branching into or out of a parallel region is not allowed\n              break;\n              ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_memcpy_from_device.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_memcpy_from_device_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_is_present_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_is_present_cpp ../vvllm_git/gpt-4/template_context_full/acc_is_present.cpp",
                "output": "test1():\n     20, Generating create(d_data[:1000]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_is_present_cpp",
                "output": "",
                "exit_code": -11,
                "passed": false
            }
        },
        "loop_construct_seq_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_seq_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_seq_clause.cpp",
                "output": "test1():\n     13, Generating NVIDIA GPU code\n         16, #pragma acc loop seq\n     13, Generating implicit copyin(a[:]) [if not already present]\n         Generating implicit copyout(c[:]) [if not already present]\n         Generating implicit copyin(b[:]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_seq_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "set_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/set_directive_c ../vvllm_git/gpt-4/template_context_full/set_directive.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/set_directive.c\", line 31: error: Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default'\n      #pragma acc set device_type(device_type) \n                                  ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/set_directive.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/set_directive_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_if_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_if_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_if_clause.cpp",
                "output": "test1():\n     14, Generating enter data create(a_device[:10000])\n         Generating copyin(a[:10000]) [if not already present]\n         Generating copyout(a_device[:10000]) [if not already present]\n         Generating NVIDIA GPU code\n         18, #pragma acc loop seq\n     18, Complex loop carried dependence of a-> prevents parallelization\n         Loop carried dependence of a_device-> prevents parallelization\n         Loop carried backward dependence of a_device-> prevents vectorization",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_if_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "reference_counters_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/reference_counters_c ../vvllm_git/gpt-4/template_context_full/reference_counters.c",
                "output": "test1:\n     20, Generating enter data create(hostdata[:10])\n     27, Generating exit data delete(hostdata[:10])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/reference_counters_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_vector_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_vector_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_vector_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier test1 (../vvllm_git/gpt-4/template_context_full/loop_construct_vector_clause.F90: 10)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/loop_construct_vector_clause.F90: 11)\nNVFORTRAN-S-0070-Incorrect sequence of statements : implicit none (../vvllm_git/gpt-4/template_context_full/loop_construct_vector_clause.F90: 12)\nNVFORTRAN-W-0119-Redundant specification for num_test_calls (../vvllm_git/gpt-4/template_context_full/acc_testsuite.Fh: 6)\nNVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/loop_construct_vector_clause.F90: 16)\n  0 inform,   2 warnings,   3 severes, 0 fatal for MAIN",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_vector_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_c ../vvllm_git/gpt-4/template_context_full/kernels_construct.c",
                "output": "mult:\n      7, Generating acc routine seq\n         Generating NVIDIA GPU code\ntest:\n     23, Generating copy(a[:100]) [if not already present]\n         Generating copyin(b[:100]) [if not already present]\n     26, Complex loop carried dependence of a->,b-> prevents parallelization\n         Loop carried dependence of a->,b-> prevents parallelization\n         Loop carried backward dependence of b->,a-> prevents vectorization\n         Complex loop carried dependence of a-> prevents parallelization\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         26, #pragma acc loop seq\n     26, Loop carried dependence of b->,a-> prevents parallelization\n         Loop carried backward dependence of b-> prevents vectorization\n         Complex loop carried dependence of b-> prevents parallelization",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "parallel_construct_self_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_self_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier initialization (../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.F90: 12)\nNVFORTRAN-S-0034-Syntax error at or near SELF (../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.F90: 17)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_self_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_firstprivate_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_firstprivate_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_firstprivate_clause.cpp",
                "output": "test1():\n     12, Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_firstprivate_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_async_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_async_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.F90",
                "output": "acc_test:\n     18, Generating copyin(a(:)) [if not already present]\n         Generating copyout(c(:)) [if not already present]\n         Generating copyin(b(:)) [if not already present]\n         Generating NVIDIA GPU code\n         19, !$acc loop gang, vector(128) ! blockidx%x threadidx%x",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_async_clause_fortran",
                "output": "Test passed",
                "exit_code": 0,
                "passed": true
            }
        },
        "kernels_construct_self_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_self_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.c\", line 17: error: invalid text in pragma\n      #pragma acc kernels copy(a[:LOOP_SIZE]) if(LOOP_SIZE > THRESHOLD) self(LOOP_SIZE < THRESHOLD)\n                                                                        ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.c\", line 17: error: invalid text in pragma\n      #pragma acc kernels copy(a[:LOOP_SIZE]) if(LOOP_SIZE > THRESHOLD) self(LOOP_SIZE < THRESHOLD)\n                                                                            ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.c\", line 17: error: extra text after expected end of preprocessing directive\n      #pragma acc kernels copy(a[:LOOP_SIZE]) if(LOOP_SIZE > THRESHOLD) self(LOOP_SIZE < THRESHOLD)\n                                                                             ^\n\n3 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/kernels_construct_self_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_self_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_wait_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_wait_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_wait_clause.F90",
                "output": "test1:\n     11, Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         12, !$acc do seq\n     11, Generating implicit copyout(y(:),x(:)) [if not already present]\n     18, Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         19, !$acc do seq\n     18, Generating implicit copyin(x(:)) [if not already present]\n         Generating implicit copy(z(:)) [if not already present]\n         Generating implicit copyin(y(:)) [if not already present]\n     19, Generating implicit private(errors)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_wait_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_unmap_data_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_unmap_data_fortran ../vvllm_git/gpt-4/template_context_full/acc_unmap_data.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/acc_unmap_data.F90: 9)\nNVFORTRAN-S-0196-Deferred-shape specifiers are required for device_data (../vvllm_git/gpt-4/template_context_full/acc_unmap_data.F90)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_unmap_data_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_memcpy_d2d_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_memcpy_d2d_c ../vvllm_git/gpt-4/template_context_full/acc_memcpy_d2d.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_memcpy_d2d_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_detach_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_detach_fortran ../vvllm_git/gpt-4/template_context_full/acc_detach.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/acc_detach.F90: 9)\nNVFORTRAN-S-0072-Assignment operation illegal to constant or parameter n (../vvllm_git/gpt-4/template_context_full/acc_detach.F90: 11)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_detach_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_wait_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_wait_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_wait_clause.c",
                "output": "test1:\n     11, Memory set idiom, loop replaced by call to __c_mset4\n     16, Generating copy(arr[:num_items]) [if not already present]\n     18, Loop is parallelizable\n         Generating NVIDIA GPU code\n         18, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     24, Loop is parallelizable\n         Generating NVIDIA GPU code\n         24, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_wait_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_collapse_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_collapse_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_collapse_clause.F90",
                "output": "test_collapse_clauses:\n     11, Memory zero idiom, array assignment replaced by call to pgf90_mzero4\n     12, Memory zero idiom, array assignment replaced by call to pgf90_mzero4\n     14, Generating NVIDIA GPU code\n         15, !$acc loop gang, vector(96) collapse(2) ! blockidx%x threadidx%x\n         16,   ! blockidx%x threadidx%x collapsed\n     14, Generating implicit copyout(a(:,:)) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_collapse_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_collapse_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_collapse_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_collapse_clause.c",
                "output": "NVC++-S-1047-Inner collapsed loop bounds are not invariant in outer loop. (../vvllm_git/gpt-4/template_context_full/loop_construct_collapse_clause.c: 20)\ntest1:\n     15, Generating copyout(result[:N]) [if not already present]\n         Generating implicit private(i)\n         Generating NVIDIA GPU code\n         19, #pragma acc loop seq collapse(2)\n         20,   collapsed */\n     19, Generating implicit private(i)\n     20, Accelerator restriction: induction variable live-out from loop: i\n         Complex loop carried dependence of result prevents parallelization\n         Loop carried dependence due to exposed use of result[i1] prevents parallelization\n     21, Accelerator restriction: induction variable live-out from loop: i\n     22, Accelerator restriction: induction variable live-out from loop: i\n     23, Accelerator restriction: induction variable live-out from loop: i\n     34, Accelerator restriction: induction variable live-out from loop: i\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_collapse_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_get_device_type_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_get_device_type_cpp ../vvllm_git/gpt-4/template_context_full/acc_get_device_type.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_get_device_type_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_vector_length_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_vector_length_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_vector_length_clause.c",
                "output": "test1:\n     21, Generating NVIDIA GPU code\n         23, #pragma acc loop vector(256) /* threadIdx.x */\n     21, Generating implicit copyin(a[:]) [if not already present]\n         Generating implicit copyout(c[:]) [if not already present]\n         Generating implicit copyin(b[:]) [if not already present]\n     23, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_vector_length_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "wait_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/wait_directive_cpp ../vvllm_git/gpt-4/template_context_full/wait_directive.cpp",
                "output": "test1():\n     13, Generating NVIDIA GPU code\n         16, #pragma acc loop gang /* blockIdx.x */\n     13, Generating implicit copyout(test[:10]) [if not already present]\n     18, Generating update self(test[:10])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/wait_directive_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_map_data_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_map_data_c ../vvllm_git/gpt-4/template_context_full/acc_map_data.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_map_data_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "host_data_construct_if_present_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/host_data_construct_if_present_clause_fortran ../vvllm_git/gpt-4/template_context_full/host_data_construct_if_present_clause.F90",
                "output": "NVFORTRAN-S-0070-Incorrect sequence of statements : implicit none (../vvllm_git/gpt-4/template_context_full/host_data_construct_if_present_clause.F90: 6)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/host_data_construct_if_present_clause.F90: 6)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/host_data_construct_if_present_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_wait_async_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_wait_async_cpp ../vvllm_git/gpt-4/template_context_full/acc_wait_async.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_wait_async.cpp\", line 13: error: identifier \"acc_async_copy\" is undefined\n          acc_async_copy(data + i, data + i, sizeof(int));\n          ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_wait_async.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_wait_async_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_copyin_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_copyin_fortran ../vvllm_git/gpt-4/template_context_full/acc_copyin.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/acc_copyin.F90: 8)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_copyin_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_reduction_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_reduction_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.F90",
                "output": "NVFORTRAN-S-0043-Illegal attempt to redefine intrinsic sum (../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.F90: 23)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test_openacc_reduction",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_reduction_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "declare_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/declare_directive_cpp ../vvllm_git/gpt-4/template_context_full/declare_directive.cpp",
                "output": "test1():\n     20, Generating NVIDIA GPU code\n         24, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     20, Generating implicit copyin(host_array[:1024]) [if not already present]\n         Generating implicit copyout(dev_array[:1024]) [if not already present]\n     24, Memory copy idiom, loop replaced by call to __c_mcopy4\n     29, Generating update self(check_array[:size])\nNVC++-W-0155-Invalid accelerator data region: branching into or out of region is not allowed  (../vvllm_git/gpt-4/template_context_full/declare_directive.cpp: 50)\nmain:\n     50, Invalid accelerator data region: branching into or out of region is not allowed\n     65, Generating exit data delete(dev_array[:1])\nNVC++/x86-64 Linux 23.1-0: compilation completed with warnings",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/declare_directive_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct.F90",
                "output": "test1:\n     17, Generating implicit copyin(b(:)) [if not already present]\n         Generating implicit copyout(c(:)) [if not already present]\n         Generating implicit copyin(a(:)) [if not already present]\n     18, Loop is parallelizable\n         Generating NVIDIA GPU code\n         18, !$acc loop gang, vector(128) ! blockidx%x threadidx%x",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_hostptr_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_hostptr_cpp ../vvllm_git/gpt-4/template_context_full/acc_hostptr.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_hostptr_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "variable_implicit_data_attributes_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/variable_implicit_data_attributes_cpp ../vvllm_git/gpt-4/template_context_full/variable_implicit_data_attributes.cpp",
                "output": "test1():\n     17, Generating copy(a[:1000],c[:1000],b[:1000]) [if not already present]\n         Generating NVIDIA GPU code\n         21, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/variable_implicit_data_attributes_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_delete_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_delete_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_construct_delete_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier copin (../vvllm_git/gpt-4/template_context_full/data_construct_delete_clause.F90: 18)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_delete_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_create_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_create_clause_c ../vvllm_git/gpt-4/template_context_full/data_construct_create_clause.c",
                "output": "test1:\n     18, Generating NVIDIA GPU code\n         20, #pragma acc loop gang /* blockIdx.x */\n     18, Generating implicit copyout(b[:10]) [if not already present]\n         Generating create(a[:length]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_create_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "loop_construct_device_type_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_device_type_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_device_type_clause.c",
                "output": "test1:\n     21, Generating copy(a[:1000],b[:1000]) [if not already present]\n         Generating NVIDIA GPU code\n         23, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     23, Memory copy idiom, loop replaced by call to __c_mcopy4",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_device_type_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "host_data_construct_if_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/host_data_construct_if_clause_cpp ../vvllm_git/gpt-4/template_context_full/host_data_construct_if_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/host_data_construct_if_clause.cpp\", line 9: warning: variable \"host_data\" was declared but never referenced [declared_but_not_referenced]\n      int host_data = 10;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/host_data_construct_if_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_num_gangs_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_num_gangs_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier test1 (../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.F90: 47)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_num_gangs_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_vector_length_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_vector_length_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_vector_length_clause.F90",
                "output": "NVFORTRAN-S-0188-Argument number 3 to acc_get_property: type mismatch (../vvllm_git/gpt-4/template_context_full/parallel_construct_vector_length_clause.F90: 29)\nNVFORTRAN-S-0038-Symbol, acc_property_vectorsize, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/parallel_construct_vector_length_clause.F90: 11)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test_vector_length",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_vector_length_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_no_create_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_no_create_clause_c ../vvllm_git/gpt-4/template_context_full/data_construct_no_create_clause.c",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - rand (../vvllm_git/gpt-4/template_context_full/data_construct_no_create_clause.c: 23)\ntest:\n     19, Generating copy(device_array[:]) [if not already present]\n     23, Accelerator restriction: call to 'rand' with no acc routine information\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_no_create_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_copyout_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_copyout_clause_c ../vvllm_git/gpt-4/template_context_full/data_construct_copyout_clause.c",
                "output": "test1:\n     11, Generating copyout(b) [if not already present]\n     13, Generating present(b)\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_copyout_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "enter_data_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/enter_data_directive_cpp ../vvllm_git/gpt-4/template_context_full/enter_data_directive.cpp",
                "output": "test1():\n     13, Generating enter data create(b[:100])\n         Generating copyout(b[:100]) [if not already present]\n         Generating copyin(a[:100]) [if not already present]\n         Generating NVIDIA GPU code\n         18, #pragma acc loop seq\n     18, Complex loop carried dependence of a-> prevents parallelization\n         Loop carried dependence of b-> prevents parallelization\n         Loop carried backward dependence of b-> prevents vectorization\n     20, Generating exit data delete(b[:100])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/enter_data_directive_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_deviceptr_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_deviceptr_fortran ../vvllm_git/gpt-4/template_context_full/acc_deviceptr.F90",
                "output": "NVFORTRAN-S-0148-Reference to TYPE(C_PTR) expression required (../vvllm_git/gpt-4/template_context_full/acc_deviceptr.F90: 25)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_deviceptr_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_detach_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_detach_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.cpp\", line 23: error: argument of type \"int *\" is incompatible with parameter of type \"void **\"\n          acc_detach(arr);\n                     ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_detach_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_copyout_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_copyout_cpp ../vvllm_git/gpt-4/template_context_full/acc_copyout.cpp",
                "output": "test1():\n     20, Generating present(b[:],a[:])\n         Generating NVIDIA GPU code\n         24, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_copyout_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "host_data_construct_if_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/host_data_construct_if_clause_c ../vvllm_git/gpt-4/template_context_full/host_data_construct_if_clause.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/host_data_construct_if_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_firstprivate_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_firstprivate_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.c\", line 23: error: invalid text in pragma\n          #pragma acc kernels firstprivate(preview_a)\n                                                    ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_firstprivate_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_wait_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_wait_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_wait_clause.cpp",
                "output": "test1():\n     12, Generating implicit copyin(hst_data[:100000]) [if not already present]\n         Generating implicit copyout(hst_result[:100000]) [if not already present]\n     16, Complex loop carried dependence of hst_data-> prevents parallelization\n         Loop carried dependence of hst_result-> prevents parallelization\n         Loop carried backward dependence of hst_result-> prevents vectorization\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         16, #pragma acc loop seq\n     16, Complex loop carried dependence of hst_data-> prevents parallelization",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_wait_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_attach_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_attach_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.F90: 9)\nNVFORTRAN-S-0034-Syntax error at or near ACCATTACH (../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.F90: 26)\nNVFORTRAN-S-0034-Syntax error at or near ACCDETACH (../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.F90: 38)\n  0 inform,   0 warnings,   3 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_attach_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_num_gangs_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_num_gangs_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_num_gangs_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_gangs_clause.c\", line 31: error: expected a \")\"\n          if(fabs(a[i] - b[i] > 1e-5){\n                                     ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_gangs_clause.c\", line 34: warning: parsing restarts here after previous syntax error [end_of_flush]\n      }\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_gangs_clause.c\", line 34: error: expected a statement\n      }\n      ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/parallel_construct_num_gangs_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_num_gangs_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "shutdown_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/shutdown_directive_fortran ../vvllm_git/gpt-4/template_context_full/shutdown_directive.F90",
                "output": "NVFORTRAN-S-1072-Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default' - device_type (../vvllm_git/gpt-4/template_context_full/shutdown_directive.F90: 18)\nNVFORTRAN-S-1072-Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default' - device_type (../vvllm_git/gpt-4/template_context_full/shutdown_directive.F90: 31)\nNVFORTRAN-S-0034-Syntax error at or near IF (../vvllm_git/gpt-4/template_context_full/shutdown_directive.F90: 31)\n  0 inform,   0 warnings,   3 severes, 0 fatal for check_compiler",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/shutdown_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "variable_implicit_data_attributes_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/variable_implicit_data_attributes_c ../vvllm_git/gpt-4/template_context_full/variable_implicit_data_attributes.c",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - acc_is_present (../vvllm_git/gpt-4/template_context_full/variable_implicit_data_attributes.c: 19)\ntest1:\n     19, Accelerator restriction: call to 'acc_is_present' with no acc routine information\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/variable_implicit_data_attributes_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "routine_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/routine_directive_fortran ../vvllm_git/gpt-4/template_context_full/routine_directive.F90",
                "output": "NVFORTRAN-F-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/routine_directive.F90: 9)\nNVFORTRAN/x86-64 Linux 23.1-0: compilation aborted",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/routine_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_shutdown_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_shutdown_fortran ../vvllm_git/gpt-4/template_context_full/acc_shutdown.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier with (../vvllm_git/gpt-4/template_context_full/acc_shutdown.F90: 8)\nNVFORTRAN-S-0038-Symbol, dev_type, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_shutdown.F90: 2)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_shutdown_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_num_gangs_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_num_gangs_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_num_gangs_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_num_gangs_clause.c\", line 9: warning: use of a const variable in a constant expression is nonstandard in C [const_var_in_C_const_expr]\n      int host_array[numElements];\n                     ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_num_gangs_clause.c\", line 18: warning: function \"acc_gang_id\" declared implicitly [implicit_func_decl]\n          device_array[i] = acc_gang_id(0);\n                            ^\n\nNVC++-S-1061-Procedures called in a compute region must have acc routine information - acc_gang_id (../vvllm_git/gpt-4/template_context_full/kernels_construct_num_gangs_clause.c: 18)\ntest1:\n     18, Accelerator restriction: call to 'acc_gang_id' with no acc routine information\n     19, Generating update self(host_array[:])\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_num_gangs_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_set_default_async_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_set_default_async_cpp ../vvllm_git/gpt-4/template_context_full/acc_set_default_async.cpp",
                "output": "test1():\n     13, Generating implicit private(test_val)\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_set_default_async_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "attachment_counter_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/attachment_counter_fortran ../vvllm_git/gpt-4/template_context_full/attachment_counter.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/attachment_counter.F90: 9)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/attachment_counter_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_num_workersclause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_num_workersclause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_num_workersclause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/kernels_construct_num_workersclause.F90: 10)\nNVFORTRAN-S-0072-Assignment operation illegal to constant or parameter n (../vvllm_git/gpt-4/template_context_full/kernels_construct_num_workersclause.F90: 14)\nNVFORTRAN-S-0038-Symbol, rand, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/kernels_construct_num_workersclause.F90: 4)\n  0 inform,   1 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_num_workersclause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_memcpy_device_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_memcpy_device_fortran ../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90",
                "output": "NVFORTRAN-S-0148-Reference to TYPE(C_PTR) expression required (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 21)\nNVFORTRAN-S-0148-Reference to TYPE(C_PTR) expression required (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 22)\nNVFORTRAN-S-0155-Could not resolve generic procedure acc_memcpy_to_device (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 24)\nNVFORTRAN-S-0188-Argument number 1 to acc_memcpy_device: type mismatch (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 25)\nNVFORTRAN-S-0188-Argument number 2 to acc_memcpy_device: type mismatch (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 25)\nNVFORTRAN-S-0155-Could not resolve generic procedure acc_memcpy_from_device (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 26)\nNVFORTRAN-S-0155-Could not resolve generic procedure acc_free (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 30)\nNVFORTRAN-S-0155-Could not resolve generic procedure acc_free (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 31)\nNVFORTRAN-S-0038-Symbol, real, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.F90: 3)\n  0 inform,   0 warnings,   9 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_memcpy_device_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_create_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_create_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_construct_create_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/data_construct_create_clause.cpp\", line 8: error: identifier \"SIZE\" is undefined\n      int *h_data = new int[SIZE];\n                            ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/data_construct_create_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_create_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_async_test_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_async_test_fortran ../vvllm_git/gpt-4/template_context_full/acc_async_test.F90",
                "output": "NVFORTRAN-S-1254-acc_handle_kind is use associated with openacc_la and cannot be redeclared. (../vvllm_git/gpt-4/template_context_full/acc_async_test.F90: 8)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1_acc_async_test\nNVFORTRAN-S-0038-Symbol, num_test_calls, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_async_test.F90: 40)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_async_test_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_get_num_devices_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_get_num_devices_fortran ../vvllm_git/gpt-4/template_context_full/acc_get_num_devices.F90",
                "output": "NVFORTRAN-S-0121-Operation requires logical or integer data types (../vvllm_git/gpt-4/template_context_full/acc_get_num_devices.F90: 35)\nNVFORTRAN-S-0038-Symbol, num_test_calls, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_get_num_devices.F90: 29)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_get_num_devices.F90: 29)\n  0 inform,   0 warnings,   3 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_get_num_devices_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_default_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_default_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_default_clause.F90",
                "output": "NVFORTRAN-S-0155-unexpected default() argument: private (../vvllm_git/gpt-4/template_context_full/parallel_construct_default_clause.F90: 23)\nNVFORTRAN-S-0155-unexpected default() argument: firstprivate (../vvllm_git/gpt-4/template_context_full/parallel_construct_default_clause.F90: 37)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_default_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_memcpy_d2d_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_memcpy_d2d_fortran ../vvllm_git/gpt-4/template_context_full/acc_memcpy_d2d.F90",
                "output": "test1:\n     16, all reduction inlined",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_memcpy_d2d_fortran",
                "output": "Error on device             1",
                "exit_code": 1,
                "passed": false
            }
        },
        "parallel_construct_reduction_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_reduction_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_reduction_clause.cpp",
                "output": "test1():\n     23, Generating NVIDIA GPU code\n         25, #pragma acc loop gang(128), vector(128) /* blockIdx.x threadIdx.x */\n             Generating reduction(+:acc_total)\n     23, Generating implicit copy(acc_total) [if not already present]\n         Generating copyin(a[:aSize]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_reduction_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "init_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/init_directive_cpp ../vvllm_git/gpt-4/template_context_full/init_directive.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/init_directive.cpp\", line 13: error: Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default'\n          #pragma acc init device_type(acc_device_default) \n                                       ^\n\n\"../vvllm_git/gpt-4/template_context_full/init_directive.cpp\", line 30: error: invalid text in pragma\n          #pragma acc init if(condition) \n                           ^\n\n\"../vvllm_git/gpt-4/template_context_full/init_directive.cpp\", line 30: error: extra text after expected end of preprocessing directive\n          #pragma acc init if(condition) \n                             ^\n\n\"../vvllm_git/gpt-4/template_context_full/init_directive.cpp\", line 28: warning: variable \"condition\" was declared but never referenced [declared_but_not_referenced]\n      bool condition = true;\n           ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n3 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/init_directive.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/init_directive_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_copyin_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_copyin_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.F90",
                "output": "NVFORTRAN-S-0084-Illegal use of symbol data_device - must have the TARGET or POINTER attribute (../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.F90: 21)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_copyin_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_reduction_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_reduction_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.F90: 7)\nNVFORTRAN-S-0533-Clause 'REDUCTION' not allowed in ACC KERNELS (../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.F90: 17)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_reduction_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_auto_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_auto_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_auto_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/loop_construct_auto_clause.F90: 11)\nNVFORTRAN-S-0072-Assignment operation illegal to constant or parameter n (../vvllm_git/gpt-4/template_context_full/loop_construct_auto_clause.F90: 13)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_auto_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "attachment_counter_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/attachment_counter_c ../vvllm_git/gpt-4/template_context_full/attachment_counter.c",
                "output": "test1:\n     23, Generating enter data create(ptr[:1])\n     31, Generating exit data delete(ptr[:1])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/attachment_counter_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_map_data_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_map_data_cpp ../vvllm_git/gpt-4/template_context_full/acc_map_data.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_map_data.cpp\", line 11: error: a value of type \"void *\" cannot be used to initialize an entity of type \"float *\"\n      float *d_data = acc_malloc(len * sizeof(float));\n                      ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_map_data.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_map_data_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "update_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/update_directive_c ../vvllm_git/gpt-4/template_context_full/update_directive.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/update_directive.c\", line 39: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\ntest1:\n     15, Generating create(d_array[:size]) [if not already present]\n         Generating NVIDIA GPU code\n         17, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     19, Generating update self(h_array[:size])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/update_directive_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_get_device_num_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_get_device_num_fortran ../vvllm_git/gpt-4/template_context_full/acc_get_device_num.F90",
                "output": "/opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/lib/f90main.o: In function `main':\nnvc87si04rK2QW7.ll:(.text+0x2f): undefined reference to `MAIN_'\npgacclnk: child process exit status 1: /bin/ld",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_get_device_num_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_copyout_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_copyout_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_construct_copyout_clause.cpp",
                "output": "test1():\n     14, Generating copyout(result_array[:100]) [if not already present]\n         Generating implicit copyin(a[:100]) [if not already present]\n         Generating NVIDIA GPU code\n         18, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_copyout_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "kernels_construct_async_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_async_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_async_clause.c",
                "output": "test1:\n     21, Generating copyin(a[:n]) [if not already present]\n         Generating copyout(c[:n]) [if not already present]\n         Generating copyin(b[:n]) [if not already present]\n     23, Complex loop carried dependence of b->,a-> prevents parallelization\n         Loop carried dependence of c-> prevents parallelization\n         Loop carried backward dependence of c-> prevents vectorization\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         23, #pragma acc loop seq\n     23, Complex loop carried dependence of b->,a-> prevents parallelization\n         Loop carried backward dependence of c-> prevents vectorization",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_async_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "wait_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/wait_clause_cpp ../vvllm_git/gpt-4/template_context_full/wait_clause.cpp",
                "output": "test1():\n     20, Memory set idiom, loop replaced by call to __c_mset4\n     22, Generating NVIDIA GPU code\n         26, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     22, Generating implicit copy(vec[:10000]) [if not already present]\n     28, Generating NVIDIA GPU code\n         31, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     28, Generating implicit copy(vec[:10000]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/wait_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_wait_any_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_wait_any_c ../vvllm_git/gpt-4/template_context_full/acc_wait_any.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_wait_any.c\", line 8: warning: use of a const variable in a constant expression is nonstandard in C [const_var_in_C_const_expr]\n      int async_ids[count];\n                    ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/acc_wait_any.c\", line 11: warning: variable \"async_ids\" is used before its value is set [used_before_set]\n      #pragma acc parallel async(async_ids[0])\n                                 ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_wait_any.c\", line 36: warning: function \"acc_wait_any\" declared implicitly [implicit_func_decl]\n      int return_value = acc_wait_any(count, async_ids);\n                         ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_wait_any.c\", line 47: error: expected an identifier\n      const size_t NUM_TEST_CALLS = 5;\n                   ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_wait_any.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_wait_any_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "host_data_construct_if_present_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/host_data_construct_if_present_clause_c ../vvllm_git/gpt-4/template_context_full/host_data_construct_if_present_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/host_data_construct_if_present_clause.c\", line 13: warning: enumerated type mixed with another type [mixed_enum_type]\n      acc_set_device_type(dev);\n                          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/host_data_construct_if_present_clause.c\", line 16: warning: enumerated type mixed with another type [mixed_enum_type]\n      acc_init(dev);\n               ^\n\n\"../vvllm_git/gpt-4/template_context_full/host_data_construct_if_present_clause.c\", line 32: warning: enumerated type mixed with another type [mixed_enum_type]\n      acc_shutdown(dev);\n                   ^\n\ntest1:\n     22, Generating enter data copyin(hostarr[:size])\n     30, Generating exit data delete(hostarr[:size])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/host_data_construct_if_present_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_default_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_default_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_default_clause.F90",
                "output": "NVFORTRAN-S-0940-Unmatched #endif (../vvllm_git/gpt-4/template_context_full/kernels_construct_default_clause.F90: 36)\nNVFORTRAN/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_default_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "declare_directive_device_resident_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/declare_directive_device_resident_clause_fortran ../vvllm_git/gpt-4/template_context_full/declare_directive_device_resident_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/declare_directive_device_resident_clause.F90: 7)\nNVFORTRAN-S-0070-Incorrect sequence of statements  (../vvllm_git/gpt-4/template_context_full/declare_directive_device_resident_clause.F90: 19)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/declare_directive_device_resident_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_firstprivate_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_firstprivate_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_firstprivate_clause.cpp",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - rand (../vvllm_git/gpt-4/template_context_full/serial_construct_firstprivate_clause.cpp: 12)\ntest1():\n     12, Accelerator restriction: call to 'rand' with no acc routine information\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_firstprivate_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "declare_directive_create_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/declare_directive_create_clause_fortran ../vvllm_git/gpt-4/template_context_full/declare_directive_create_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near '(/' (../vvllm_git/gpt-4/template_context_full/declare_directive_create_clause.F90: 17)\nNVFORTRAN-S-0034-Syntax error at or near '(/' (../vvllm_git/gpt-4/template_context_full/declare_directive_create_clause.F90: 18)\nNVFORTRAN-S-0196-Deferred-shape specifiers are required for devarr (../vvllm_git/gpt-4/template_context_full/declare_directive_create_clause.F90)\nNVFORTRAN-S-0196-Deferred-shape specifiers are required for hosarr (../vvllm_git/gpt-4/template_context_full/declare_directive_create_clause.F90)\n  0 inform,   0 warnings,   4 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/declare_directive_create_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_vector_length_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_vector_length_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_vector_length_clause.c",
                "output": "test1:\n     28, Generating copy(a[:10000]) [if not already present]\n         Generating implicit copy(result) [if not already present]\n     29, Loop is parallelizable\n         Generating NVIDIA GPU code\n         29, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n             Generating implicit reduction(+:result)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_vector_length_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_reduction_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_reduction_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.c\", line 8: error: expected an identifier\n      int I = rand();\n          ^\n\n\"../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.c\", line 14: error: complex type is not allowed\n          for (int i = 0; i < I; ++i)\n                              ^\n\n\"../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.c\", line 31: error: expected an identifier\n      int I = rand();\n          ^\n\n\"../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.c\", line 37: error: complex type is not allowed\n          for (int i = 0; i < I; ++i) {\n                              ^\n\n4 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_reduction_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_private_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_private_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_private_clause.cpp",
                "output": "test1():\n      6, Generating copy(testArrayA[:],testArrayB[:]) [if not already present]\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n          9, #pragma acc for seq\n         12, #pragma acc for seq\n     12, Generating implicit private(err)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_private_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_hostptr_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_hostptr_fortran ../vvllm_git/gpt-4/template_context_full/acc_hostptr.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/acc_hostptr.F90: 11)\nNVFORTRAN-S-0148-Reference to TYPE(C_PTR) expression required (../vvllm_git/gpt-4/template_context_full/acc_hostptr.F90: 20)\nNVFORTRAN-S-0155-Could not resolve generic procedure acc_hostptr (../vvllm_git/gpt-4/template_context_full/acc_hostptr.F90: 23)\nNVFORTRAN-S-0091-Constant expression of wrong data type (../vvllm_git/gpt-4/template_context_full/acc_hostptr.F90: 23)\n  0 inform,   1 warnings,   3 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_hostptr_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "variable_implicit_data_attributes_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/variable_implicit_data_attributes_fortran ../vvllm_git/gpt-4/template_context_full/variable_implicit_data_attributes.F90",
                "output": "test1:\n     13, Generating copy(x) [if not already present]\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/variable_implicit_data_attributes_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_delete_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_delete_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_construct_delete_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/data_construct_delete_clause.cpp\", line 11: error: a value of type \"void *\" cannot be assigned to an entity of type \"int *\"\n      devicedata = acc_copyin(hostdata, 1024 * sizeof(int));\n                 ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/data_construct_delete_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_delete_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_num_gangs_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_num_gangs_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.cpp\", line 19: error: a value of type \"void *\" cannot be used to initialize an entity of type \"unsigned int *\"\n      unsigned *d_array = acc_copyin(h_array, num_gangs * sizeof(unsigned));\n                          ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/serial_construct_num_gangs_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_num_gangs_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "host_data_construct_if_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/host_data_construct_if_clause_fortran ../vvllm_git/gpt-4/template_context_full/host_data_construct_if_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier host (../vvllm_git/gpt-4/template_context_full/host_data_construct_if_clause.F90: 9)\nNVFORTRAN-S-0134-Illegal attribute - duplicate dimension (../vvllm_git/gpt-4/template_context_full/host_data_construct_if_clause.F90: 10)\nNVFORTRAN-S-0134-Illegal attribute - duplicate allocatable (../vvllm_git/gpt-4/template_context_full/host_data_construct_if_clause.F90: 10)\nNVFORTRAN-S-0034-Syntax error at or near device (../vvllm_git/gpt-4/template_context_full/host_data_construct_if_clause.F90: 10)\n  0 inform,   0 warnings,   4 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/host_data_construct_if_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct.cpp",
                "output": "test1():\n     16, Generating copy(arr[:arr_size]) [if not already present]\n     19, Loop is parallelizable\n         Generating NVIDIA GPU code\n         19, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "enter_data_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/enter_data_directive_fortran ../vvllm_git/gpt-4/template_context_full/enter_data_directive.F90",
                "output": "NVFORTRAN-S-0038-Symbol, i, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/enter_data_directive.F90: 3)\n  0 inform,   0 warnings,   1 severes, 0 fatal for enter_data_test\nNVFORTRAN-S-0038-Symbol, num_test_calls, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/enter_data_directive.F90: 35)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/enter_data_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_vector_length_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_vector_length_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_vector_length_clause.cpp",
                "output": "test1():\n     24, Generating copyin(b[:n]) [if not already present]\n         Generating copyout(c[:n]) [if not already present]\n         Generating copyin(a[:n]) [if not already present]\n         Generating NVIDIA GPU code\n         26, #pragma acc loop vector(vector_length) /* threadIdx.y threadIdx.x */\n     26, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_vector_length_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_attach_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_attach_clause_c ../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.c",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - rand (../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.c: 21)\ntest1:\n     14, Generating enter data create(arr[:n])\n     21, Accelerator restriction: call to 'rand' with no acc routine information\n     29, Generating exit data delete(arr[:1])\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_attach_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_collapse_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_collapse_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_collapse_clause.cpp",
                "output": "test1():\n     25, Generating NVIDIA GPU code\n         27, #pragma acc loop gang, vector(128) collapse(2) /* blockIdx.x threadIdx.x */\n             Generating reduction(+:acc_sum)\n         28,   /* blockIdx.x threadIdx.x collapsed */\n     25, Generating implicit copy(acc_sum) [if not already present]\n         Generating implicit copyin(a[:][:]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_collapse_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_get_device_type_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_get_device_type_fortran ../vvllm_git/gpt-4/template_context_full/acc_get_device_type.F90",
                "output": "NVFORTRAN-S-0087-Non-constant expression where constant expression required (../vvllm_git/gpt-4/template_context_full/acc_get_device_type.F90: 8)\nNVFORTRAN-S-0038-Symbol, acc_device_nvptx, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_get_device_type.F90: 3)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1\nNVFORTRAN-S-0038-Symbol, num_test_calls, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_get_device_type.F90: 30)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_get_device_type_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "wait_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/wait_directive_fortran ../vvllm_git/gpt-4/template_context_full/wait_directive.F90",
                "output": "NVFORTRAN-S-0121-Operation requires logical or integer data types (../vvllm_git/gpt-4/template_context_full/wait_directive.F90: 63)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/wait_directive.F90: 51)\n  0 inform,   0 warnings,   2 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/wait_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_detach_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_detach_cpp ../vvllm_git/gpt-4/template_context_full/acc_detach.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_detach.cpp\", line 22: error: expected a \"]\"\n  #pragma acc enter data attach(hostData[0:10]) async(0)\n                                          ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_detach.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_detach_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_malloc_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_malloc_c ../vvllm_git/gpt-4/template_context_full/acc_malloc.c",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - rand_r (../vvllm_git/gpt-4/template_context_full/acc_malloc.c: 21)\ntest1:\n     21, Accelerator restriction: call to 'rand_r' with no acc routine information\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_malloc_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "loop_construct_vector_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_vector_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_vector_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/loop_construct_vector_clause.c\", line 10: warning: use of a const variable in a constant expression is nonstandard in C [const_var_in_C_const_expr]\n      float array[N];\n                  ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\ntest1:\n     18, Generating NVIDIA GPU code\n         20, #pragma acc loop vector(256) /* threadIdx.x */\n     18, Generating implicit copy(array[:]) [if not already present]\n     28, FMA (fused multiply-add) instruction(s) generated",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_vector_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "declare_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/declare_directive_fortran ../vvllm_git/gpt-4/template_context_full/declare_directive.F90",
                "output": "t1_sub:\n     16, Generating NVIDIA GPU code\n         17, !$acc loop gang, vector(96) ! blockidx%x threadidx%x",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/declare_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_wait_async_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_wait_async_fortran ../vvllm_git/gpt-4/template_context_full/acc_wait_async.F90",
                "output": "test1:\n     16, Generating implicit copyin(b(:)) [if not already present]\n         Generating implicit copyout(c(:)) [if not already present]\n         Generating implicit copyin(a(:)) [if not already present]\n     17, Loop is parallelizable\n         Generating NVIDIA GPU code\n         17, !$acc loop gang, vector(32) ! blockidx%x threadidx%x",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_wait_async_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "host_data_construct_if_present_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/host_data_construct_if_present_clause_cpp ../vvllm_git/gpt-4/template_context_full/host_data_construct_if_present_clause.cpp",
                "output": "test1():\n     20, Generating update device(d_data[:1])\n         Generating enter data create(d_data[:1])\n     37, Generating exit data delete(d_data[:1])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/host_data_construct_if_present_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_copyin_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_copyin_cpp ../vvllm_git/gpt-4/template_context_full/acc_copyin.cpp",
                "output": "test_copyin():\n     13, Memory set idiom, loop replaced by call to __c_mset4\n     22, Generating present(data_device[:1000])\n         Generating NVIDIA GPU code\n         23, #pragma acc loop vector(128) /* threadIdx.x */\n     23, Loop is parallelizable\n         Generating implicit private(err)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_copyin_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "loop_construct_reduction_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_reduction_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_reduction_clause.cpp",
                "output": "test():\n     14, Generating NVIDIA GPU code\n         16, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n             Generating reduction(+:reduction_output)\n     14, Generating implicit copy(reduction_output) [if not already present]\n         Generating copyin(host_array[:]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_reduction_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_vector_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_vector_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_vector_clause.cpp",
                "output": "test1():\n     16, Generating copyout(device_array) [if not already present]\n         Generating copyin(host_array) [if not already present]\n         Generating NVIDIA GPU code\n         18, #pragma acc loop vector(96) /* threadIdx.x */\n     18, Loop is parallelizable\nstd::vector<int, std::allocator<int>>::operator [](unsigned long):\n      2, include \"vector\"\n          64, include \"stl_vector.h\"\n              771, Generating implicit acc routine seq\n                   Generating acc routine seq\n                   Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_vector_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "parallel_construct_self_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_self_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.cpp\", line 22: error: invalid text in pragma\n  #pragma acc parallel self copyout(device_array[0:N]) copyin(host_array[0:N])\n                       ^\n\n\"../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.cpp\", line 50: error: identifier \"ACC_TESTSUITE_NUM_CALLS\" is undefined\n      for (int x = 0; x < ACC_TESTSUITE_NUM_CALLS; ++x){\n                          ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/parallel_construct_self_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_self_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_firstprivate_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_firstprivate_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_firstprivate_clause.F90",
                "output": "test1:\n     17, Generating copyout(b(:)) [if not already present]\n         Generating copyin(a(:)) [if not already present]\n         Generating NVIDIA GPU code\n         18, !$acc loop gang ! blockidx%x\n     31, Generating copyout(b(:)) [if not already present]\n         Generating NVIDIA GPU code\n         32, !$acc loop gang ! blockidx%x\n     31, Generating update device(a(:))\n/opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/lib/f90main.o: In function `main':\nnvc87si04rK2QW7.ll:(.text+0x2f): undefined reference to `MAIN_'\npgacclnk: child process exit status 1: /bin/ld",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_firstprivate_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "serial_construct_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_c ../vvllm_git/gpt-4/template_context_full/serial_construct.c",
                "output": "test1:\n     18, Generating copyin(b[:a]) [if not already present]\n         Generating copyout(actual[:a]) [if not already present]\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         22, #pragma acc for seq",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_memcpy_from_device_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_memcpy_from_device_fortran ../vvllm_git/gpt-4/template_context_full/acc_memcpy_from_device.F90",
                "output": "NVFORTRAN-S-0087-Non-constant expression where constant expression required (../vvllm_git/gpt-4/template_context_full/acc_memcpy_from_device.F90: 9)\nNVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/acc_memcpy_from_device.F90: 11)\n  0 inform,   1 warnings,   1 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_memcpy_from_device_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_if_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_if_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_if_clause.F90",
                "output": "test1:\n     12, Memory copy idiom, loop replaced by call to __c_mcopy4\n     13, Memory copy idiom, loop replaced by call to __c_mcopy4\n     15, Generating copy(a(:)) [if not already present]\n         Generating copyin(b(:)) [if not already present]\n         Generating NVIDIA GPU code\n         16, !$acc loop vector(96) ! threadidx%x\n     16, Loop is parallelizable\n         Memory copy idiom, loop replaced by call to __c_mcopy4\n     21, any reduction inlined",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_if_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_free_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_free_c ../vvllm_git/gpt-4/template_context_full/acc_free.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_free_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_is_present_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_is_present_fortran ../vvllm_git/gpt-4/template_context_full/acc_is_present.F90",
                "output": "test1:\n     15, Generating enter data copyin(test_array(:))\n     25, Generating exit data delete(test_array(:))",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_is_present_fortran",
                "output": "Allocating an array in the device\n Checking if array is present in the device",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_seq_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/loop_construct_seq_clause_fortran ../vvllm_git/gpt-4/template_context_full/loop_construct_seq_clause.F90",
                "output": "test1:\n     13, Memory copy idiom, loop replaced by call to __c_mcopy4\n     14, Memory copy idiom, loop replaced by call to __c_mcopy4\n     15, Memory copy idiom, loop replaced by call to __c_mcopy4\n         Memory zero idiom, loop replaced by call to __c_mzero4\n     18, Generating NVIDIA GPU code\n         19, !$acc loop seq\n     18, Generating implicit copyout(c(:)) [if not already present]\n         Generating implicit copyin(b(:),a(:)) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_seq_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_default_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_default_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_default_clause.c",
                "output": "test1:\n     12, Generating implicit private(c)\n         Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_default_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_wait_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_wait_clause_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct_wait_clause.cpp",
                "output": "NVC++-S-1061-Procedures called in a compute region must have acc routine information - rand (../vvllm_git/gpt-4/template_context_full/serial_construct_wait_clause.cpp: 18)\ntest1():\n     15, Generating create(a[:]) [if not already present]\n     18, Accelerator restriction: call to 'rand' with no acc routine information\n     19, Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         24, #pragma acc for seq\n     19, Generating implicit copyout(b[:]) [if not already present]\n     24, Memory copy idiom, loop replaced by call to __c_mcopy4\nNVC++/x86-64 Linux 23.1-0: compilation completed with severe errors",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_wait_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_unmap_data_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_unmap_data_c ../vvllm_git/gpt-4/template_context_full/acc_unmap_data.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_unmap_data.c\", line 13: error: identifier \"N\" is undefined\n      float *host_array = (float*) malloc(N * sizeof(float));\n                                          ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_unmap_data.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_unmap_data_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_async_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_async_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.cpp\", line 10: error: identifier \"SIZE\" is undefined\n      int *data = (int*)malloc(SIZE*sizeof(int));\n                               ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/parallel_construct_async_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_async_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_get_default_async_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_get_default_async_c ../vvllm_git/gpt-4/template_context_full/acc_get_default_async.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_get_default_async_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_async_test_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_async_test_c ../vvllm_git/gpt-4/template_context_full/acc_async_test.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_async_test.c\", line 11: warning: variable \"data\" was set but never used [set_but_not_used]\n      int data[10];\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\ntest1:\n     12, Generating NVIDIA GPU code\n         15, #pragma acc loop seq\n     12, Generating implicit copyout(data[:]) [if not already present]\n     15, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_async_test_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_wait_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_wait_c ../vvllm_git/gpt-4/template_context_full/acc_wait.c",
                "output": "test1:\n     20, Generating copyout(h_res[:1000]) [if not already present]\n         Generating create(h_y[:1000],h_x[:1000]) [if not already present]\n     22, Complex loop carried dependence of h_y->,h_x-> prevents parallelization\n         Loop carried dependence of h_res-> prevents parallelization\n         Loop carried backward dependence of h_res-> prevents vectorization\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         22, #pragma acc loop seq\n     22, Complex loop carried dependence of h_y->,h_x-> prevents parallelization\n         Loop carried backward dependence of h_res-> prevents vectorization",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_wait_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_firstprivate_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_firstprivate_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for a (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 11)\nNVFORTRAN-W-0119-Redundant specification for b (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 11)\nNVFORTRAN-S-0084-Illegal use of symbol a - must have a POINTER or ALLOCATABLE attribute (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 18)\nNVFORTRAN-S-0084-Illegal use of symbol b - must have a POINTER or ALLOCATABLE attribute (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 19)\nNVFORTRAN-S-0533-Clause 'FIRSTPRIVATE' not allowed in ACC KERNELS LOOP (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 23)\nNVFORTRAN-S-0076-Subscripts specified for non-array variable b (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 25)\nNVFORTRAN-S-0076-Subscripts specified for non-array variable a (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 25)\nNVFORTRAN-S-0076-Subscripts specified for non-array variable b (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 31)\nNVFORTRAN-S-0076-Subscripts specified for non-array variable a (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 31)\nNVFORTRAN-S-0083-Vector expression used where scalar expression required (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 31)\nNVFORTRAN-S-0198-Illegal use of a in ALLOCATE/DEALLOCATE (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 37)\nNVFORTRAN-S-0198-Illegal use of b in ALLOCATE/DEALLOCATE (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 38)\n  0 inform,   2 warnings,  10 severes, 0 fatal for test1\nNVFORTRAN-S-0121-Operation requires logical or integer data types (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 51)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/kernels_construct_firstprivate_clause.F90: 44)\n  0 inform,   0 warnings,   2 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_firstprivate_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "cache_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/cache_directive_c ../vvllm_git/gpt-4/template_context_full/cache_directive.c",
                "output": "test1:\n     20, Generating NVIDIA GPU code\n         20, Cached references to size [1024] block of a\n             Replaced 1 loads by cache loads\n         23, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n             Generating reduction(+:sum)\n     20, Generating implicit copy(sum) [if not already present]\n         Generating copy(a[:size]) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/cache_directive_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/serial_construct_cpp ../vvllm_git/gpt-4/template_context_full/serial_construct.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct.cpp\", line 7: warning: incompatible redefinition of macro \"SEED\" (declared at line 74 of \"../vvllm_git/gpt-4/template_context_full/acc_testsuite.h\") [bad_macro_redef]\n  #define SEED 12345\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\ntest_serial_construct():\n     21, Generating copyout(res_arr[:1000]) [if not already present]\n         Generating copyin(h_arr[:1000]) [if not already present]\n     23, Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         24, #pragma acc for seq",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_cpp",
                "output": "Serial construct test passed!",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_auto_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/loop_construct_auto_clause_c ../vvllm_git/gpt-4/template_context_full/loop_construct_auto_clause.c",
                "output": "test1:\n     25, Generating copy(a[:length]) [if not already present]\n     29, Loop is parallelizable\n         Generating NVIDIA GPU code\n         29, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/loop_construct_auto_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "declare_directive_device_resident_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/declare_directive_device_resident_clause_c ../vvllm_git/gpt-4/template_context_full/declare_directive_device_resident_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/declare_directive_device_resident_clause.c\", line 6: error: identifier \"data\" is undefined\n  #pragma acc declare device_resident(data)\n                                      ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/declare_directive_device_resident_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/declare_directive_device_resident_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_vector_length_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_vector_length_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_vector_length_clause.cpp",
                "output": "test1():\n     17, Generating implicit copyout(result[:1000]) [if not already present]\n         Generating implicit copyin(vector2[:1000],vector1[:1000]) [if not already present]\n     21, Loop is parallelizable\n         Generating NVIDIA GPU code\n         21, #pragma acc loop gang, vector(256) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_vector_length_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_present_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_present_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_present_clause.F90",
                "output": "test1:\n     17, Generating enter data copyin(array(:))\n     19, Generating present(array(:))\n         Generating NVIDIA GPU code\n         20, !$acc loop vector(128) ! threadidx%x\n     20, Loop is parallelizable\n     25, Generating exit data copyout(array(:))\n/opt/shared/nvidia-hpc-sdk/2023.231/Linux_x86_64/23.1/compilers/lib/f90main.o: In function `main':\nnvc87si04rK2QW7.ll:(.text+0x2f): undefined reference to `MAIN_'\npgacclnk: child process exit status 1: /bin/ld",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_present_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_shutdown_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_shutdown_c ../vvllm_git/gpt-4/template_context_full/acc_shutdown.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_shutdown.c\", line 14: error: expression must have arithmetic or pointer type but has type \"void\"\n          if(acc_set_device_num(dev_num, device_type) == 0){\n             ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_shutdown.c\", line 19: warning: function \"acc_shutdown_device\" declared implicitly [implicit_func_decl]\n          acc_shutdown_device(dev_num, device_type);\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_shutdown.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_shutdown_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "wait_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/wait_clause_fortran ../vvllm_git/gpt-4/template_context_full/wait_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/wait_clause.F90: 9)\n  0 inform,   1 warnings,   0 severes, 0 fatal for test1\ntest1:\n     20, Generating copyin(a(:)) [if not already present]\n         Generating copyout(c(:)) [if not already present]\n         Generating copyin(b(:)) [if not already present]\n         Generating NVIDIA GPU code\n         21, !$acc loop gang ! blockidx%x\n     34, any reduction inlined",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/wait_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "wait_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/wait_clause_c ../vvllm_git/gpt-4/template_context_full/wait_clause.c",
                "output": "test1:\n     13, Generating implicit copyout(data_device[:]) [if not already present]\n         Generating copy(data_host[:]) [if not already present]\n         Generating present(data_host[:])\n     17, Loop is parallelizable\n         Generating NVIDIA GPU code\n         17, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/wait_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_copyout_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_copyout_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_construct_copyout_clause.F90",
                "output": "NVFORTRAN-W-0119-Redundant specification for n (../vvllm_git/gpt-4/template_context_full/data_construct_copyout_clause.F90: 10)\n  0 inform,   1 warnings,   0 severes, 0 fatal for test1\ntest1:\n     18, Generating copyin(b(1)) [if not already present]\n         Generating copyout(c(1)) [if not already present]\n         Generating copyin(a(1)) [if not already present]\n         Generating NVIDIA GPU code\n         19, !$acc loop gang ! blockidx%x",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_copyout_clause_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_wait_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_wait_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_wait_clause.c",
                "output": "test1:\n     20, Generating copyin(a[:length]) [if not already present]\n         Generating copyout(c[:length]) [if not already present]\n         Generating copyin(b[:length]) [if not already present]\n         Generating present(a[:length],c[:length],b[:length])\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         20, #pragma acc for seq",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_wait_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_copyout_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_copyout_c ../vvllm_git/gpt-4/template_context_full/acc_copyout.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_copyout.c\", line 8: warning: incompatible redefinition of macro \"SEED\" (declared at line 74 of \"../vvllm_git/gpt-4/template_context_full/acc_testsuite.h\") [bad_macro_redef]\n  #define SEED 1234\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_copyout_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_vector_length_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_vector_length_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_vector_length_clause.c",
                "output": "test1:\n     25, Generating copyin(a[:array_size]) [if not already present]\n         Generating copyout(c_gpu[:array_size]) [if not already present]\n         Generating copyin(b[:array_size]) [if not already present]\n         Generating NVIDIA GPU code\n         27, #pragma acc loop vector(128) /* threadIdx.x */\n     27, Loop is parallelizable",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_vector_length_clause_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_private_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_private_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_private_clause.F90",
                "output": "test1:\n     17, Accelerator serial kernel generated\n         CUDA shared memory used for arr\n         Generating NVIDIA GPU code\n         18, !$acc do seq\n     17, Generating implicit copyout(result(:)) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/serial_construct_private_clause_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_default_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_default_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_default_clause.cpp",
                "output": "test1():\n     21, Generating copy(a[:],c[:],b[:]) [if not already present]\n     22, Loop is parallelizable\n         Generating NVIDIA GPU code\n         22, #pragma acc loop gang, vector(64) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_default_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "declare_directive_device_resident_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/declare_directive_device_resident_clause_cpp ../vvllm_git/gpt-4/template_context_full/declare_directive_device_resident_clause.cpp",
                "output": "test1():\n     12, Generating device_resident(arr[:]) [if not already present]\n         Generating NVIDIA GPU code\n         16, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */\n     21, Generating update self(hostArr[:])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/declare_directive_device_resident_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_firstprivate_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/serial_construct_firstprivate_clause_fortran ../vvllm_git/gpt-4/template_context_full/serial_construct_firstprivate_clause.F90",
                "output": "NVFORTRAN-S-0017-Unable to open include file: acc_testsuite.fh (../vvllm_git/gpt-4/template_context_full/serial_construct_firstprivate_clause.F90: 6)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1\nNVFORTRAN-S-0017-Unable to open include file: acc_testsuite.fh (../vvllm_git/gpt-4/template_context_full/serial_construct_firstprivate_clause.F90: 46)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_firstprivate_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "declare_directive_create_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/declare_directive_create_clause_cpp ../vvllm_git/gpt-4/template_context_full/declare_directive_create_clause.cpp",
                "output": "test1():\n     15, Generating create(p[:10]) [if not already present]\n     20, Generating NVIDIA GPU code\n         24, #pragma acc loop gang /* blockIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/declare_directive_create_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_get_num_devices_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_get_num_devices_c ../vvllm_git/gpt-4/template_context_full/acc_get_num_devices.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_get_num_devices_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_copyin_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_copyin_c ../vvllm_git/gpt-4/template_context_full/acc_copyin.c",
                "output": "test1:\n     27, Generating present(device_array[:99])\n         Generating NVIDIA GPU code\n         28, #pragma acc loop vector(96) /* threadIdx.x */\n     27, Generating implicit copyin(host_array[:100]) [if not already present]\n     28, Loop is parallelizable\n         Generating implicit private(err)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_copyin_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_memcpy_d2d_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_memcpy_d2d_cpp ../vvllm_git/gpt-4/template_context_full/acc_memcpy_d2d.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_memcpy_d2d_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_get_num_devices_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_get_num_devices_cpp ../vvllm_git/gpt-4/template_context_full/acc_get_num_devices.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_get_num_devices_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "parallel_construct_default_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/parallel_construct_default_clause_cpp ../vvllm_git/gpt-4/template_context_full/parallel_construct_default_clause.cpp",
                "output": "test1():\n     14, Generating copy(a[:100]) [if not already present]\n         Generating NVIDIA GPU code\n         16, #pragma acc loop gang, vector(96) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_default_clause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "exit_data_directive_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/exit_data_directive_c ../vvllm_git/gpt-4/template_context_full/exit_data_directive.c",
                "output": "test1:\n     18, Generating enter data create(A[:N])\n         Generating present(A[:N])\n         Generating NVIDIA GPU code\n         25, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     33, Generating exit data delete(A[:N])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/exit_data_directive_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_async_test_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_async_test_cpp ../vvllm_git/gpt-4/template_context_full/acc_async_test.cpp",
                "output": "test_async_operation():\n     22, Generating enter data copyin(data[:n])\n     33, Generating exit data delete(data[:n])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_async_test_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "loop_construct_auto_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/loop_construct_auto_clause_cpp ../vvllm_git/gpt-4/template_context_full/loop_construct_auto_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/loop_construct_auto_clause.cpp\", line 7: error: identifier \"N\" is undefined\n      float a[N];\n              ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/loop_construct_auto_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/loop_construct_auto_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_get_device_num_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_get_device_num_cpp ../vvllm_git/gpt-4/template_context_full/acc_get_device_num.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/acc_get_device_num.cpp\", line 10: error: identifier \"acc_host\" is undefined\n      int deviceType = acc_host; // Assume the testing on host device\n                       ^\n\n\"../vvllm_git/gpt-4/template_context_full/acc_get_device_num.cpp\", line 11: error: argument of type \"int\" is incompatible with parameter of type \"acc_device_t\"\n      int deviceNum = acc_get_device_num(deviceType);\n                                         ^\n\n2 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/acc_get_device_num.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_get_device_num_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_map_data_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_map_data_fortran ../vvllm_git/gpt-4/template_context_full/acc_map_data.F90",
                "output": "NVFORTRAN-S-0148-Reference to TYPE(C_PTR) expression required (../vvllm_git/gpt-4/template_context_full/acc_map_data.F90: 17)\nNVFORTRAN-S-0155-Could not resolve generic procedure acc_map_data (../vvllm_git/gpt-4/template_context_full/acc_map_data.F90: 19)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_map_data_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_reduction_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/parallel_construct_reduction_clause_fortran ../vvllm_git/gpt-4/template_context_full/parallel_construct_reduction_clause.F90",
                "output": "test1:\n     21, Generating NVIDIA GPU code\n         22, !$acc loop gang, vector(128) ! blockidx%x threadidx%x\n             Generating reduction(+:num)\n     21, Generating implicit copy(num) [if not already present]\n         Generating implicit copyin(array(:)) [if not already present]",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/parallel_construct_reduction_clause_fortran",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_copyin_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_copyin_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_construct_copyin_clause.cpp",
                "output": "test1():\n     20, Generating enter data copyin(a[:10])\n         Generating present(a[:10])\n         Generating NVIDIA GPU code\n         22, #pragma acc loop gang /* blockIdx.x */\n     20, Generating implicit copyin(a_host[:10]) [if not already present]\n     36, Generating exit data delete(a[:10])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_copyin_clause_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "init_directive_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/init_directive_fortran ../vvllm_git/gpt-4/template_context_full/init_directive.F90",
                "output": "NVFORTRAN-S-0087-Non-constant expression where constant expression required (../vvllm_git/gpt-4/template_context_full/init_directive.F90: 9)\nNVFORTRAN-S-0023-Syntax error - unbalanced parentheses (../vvllm_git/gpt-4/template_context_full/init_directive.F90: 11)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/init_directive_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_set_device_num_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_set_device_num_c ../vvllm_git/gpt-4/template_context_full/acc_set_device_num.c",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_set_device_num_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "data_construct_delete_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/data_construct_delete_clause_c ../vvllm_git/gpt-4/template_context_full/data_construct_delete_clause.c",
                "output": "test1:\n     16, Generating enter data copyin(a[:len])\n         Generating present(a[:len])\n         Generating NVIDIA GPU code\n         23, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     25, Generating exit data copyout(a[:len])\n         Generating exit data delete(a[:1])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_delete_clause_c",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "kernels_construct_reduction_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_reduction_clause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.cpp\", line 9: error: invalid text in pragma\n      #pragma acc declare create(\n                                 ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.cpp\", line 9: error: expected a \")\"\n      #pragma acc declare create(\n                                 ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.cpp\", line 10: error: identifier \"arr1\" is undefined\n          arr1[size])\n          ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.cpp\", line 10: error: expected a \";\"\n          arr1[size])\n                    ^\n\n4 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_reduction_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_on_device_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_on_device_c ../vvllm_git/gpt-4/template_context_full/acc_on_device.c",
                "output": "test1:\n      8, Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_on_device_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_shutdown_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_shutdown_cpp ../vvllm_git/gpt-4/template_context_full/acc_shutdown.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_shutdown_cpp",
                "output": "Error: Device of type 4 was not shutdown properly",
                "exit_code": 1,
                "passed": false
            }
        },
        "routine_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/routine_directive_cpp ../vvllm_git/gpt-4/template_context_full/routine_directive.cpp",
                "output": "vec_add(int, float *, float *, float *):\n      6, Generating acc routine seq\n         Generating NVIDIA GPU code\ntest():\n     32, Generating copyin(a[:n]) [if not already present]\n         Generating copyout(c[:n]) [if not already present]\n         Generating copyin(b[:n]) [if not already present]\n     34, Generating NVIDIA GPU code",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/routine_directive_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "serial_construct_private_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_private_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_private_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_private_clause.c\", line 14: error: identifier \"x\" is undefined\n      #pragma acc serial copyin(a[0:length]) copyout(b[0:length]) private(x)\n                                                                          ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/serial_construct_private_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_private_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_create_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_create_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_construct_create_clause.F90",
                "output": "test1:\n     16, Generating create(a(:)) [if not already present]\n     17, Generating copyin(b(:)) [if not already present]\n         Generating copyout(a(:)) [if not already present]\n         Generating NVIDIA GPU code\n         18, !$acc loop gang, vector(96) ! blockidx%x threadidx%x\n     18, Memory copy idiom, loop replaced by call to __c_mcopy4",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/data_construct_create_clause_fortran",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "acc_memcpy_device_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_memcpy_device_cpp ../vvllm_git/gpt-4/template_context_full/acc_memcpy_device.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_memcpy_device_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_set_default_async_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_set_default_async_fortran ../vvllm_git/gpt-4/template_context_full/acc_set_default_async.F90",
                "output": "NVFORTRAN-S-0017-Unable to open include file: acc_testsuite.F90 (../vvllm_git/gpt-4/template_context_full/acc_set_default_async.F90: 5)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1\nNVFORTRAN-S-0017-Unable to open include file: acc_testsuite.F90 (../vvllm_git/gpt-4/template_context_full/acc_set_default_async.F90: 52)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_set_default_async_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_reduction_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_reduction_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.c\", line 3: warning: incompatible redefinition of macro \"SEED\" (declared at line 74 of \"../vvllm_git/gpt-4/template_context_full/acc_testsuite.h\") [bad_macro_redef]\n  #define SEED 12345\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.c\", line 19: error: invalid text in pragma\n      #pragma acc kernels copy(a[0:SIZE]) reduction(+:reduction_result)\n                                          ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.c\", line 19: error: invalid text in pragma\n      #pragma acc kernels copy(a[0:SIZE]) reduction(+:reduction_result)\n                                                   ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.c\", line 19: error: extra text after expected end of preprocessing directive\n      #pragma acc kernels copy(a[0:SIZE]) reduction(+:reduction_result)\n                                                    ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.c\", line 42: error: expected an identifier\n      int NUM_TEST_CALLS = 10;\n          ^\n\n4 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/kernels_construct_reduction_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_reduction_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_num_workersclause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/kernels_construct_num_workersclause_cpp ../vvllm_git/gpt-4/template_context_full/kernels_construct_num_workersclause.cpp",
                "output": "test1():\n     12, Memory zero idiom, loop replaced by call to __c_mzero4\n     14, Generating implicit copyout(test_array[:100]) [if not already present]\n     17, Loop is parallelizable\n         Generating NVIDIA GPU code\n         17, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/kernels_construct_num_workersclause_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "attachment_counter_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/attachment_counter_cpp ../vvllm_git/gpt-4/template_context_full/attachment_counter.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/attachment_counter.cpp\", line 20: error: too many arguments in function call\n      acc_attach((void**)&device_ptr, host_ptr, 10 * sizeof(float));\n                                      ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/attachment_counter.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/attachment_counter_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "parallel_construct_reduction_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/parallel_construct_reduction_clause_c ../vvllm_git/gpt-4/template_context_full/parallel_construct_reduction_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/parallel_construct_reduction_clause.c\", line 6: error: identifier \"SIZE\" is undefined\n      int a[SIZE];\n            ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/parallel_construct_reduction_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/parallel_construct_reduction_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_private_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/kernels_construct_private_clause_c ../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.c\", line 21: error: invalid text in pragma\n          #pragma acc loop gang(numGangs) vector_length(vectorLength)\n                                          ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.c\", line 21: error: invalid text in pragma\n          #pragma acc loop gang(numGangs) vector_length(vectorLength)\n                                                       ^\n\n\"../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.c\", line 21: error: extra text after expected end of preprocessing directive\n          #pragma acc loop gang(numGangs) vector_length(vectorLength)\n                                                        ^\n\n3 errors detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/kernels_construct_private_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_private_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_deviceptr_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/acc_deviceptr_cpp ../vvllm_git/gpt-4/template_context_full/acc_deviceptr.cpp",
                "output": "",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_deviceptr_cpp",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_deviceptr_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_deviceptr_c ../vvllm_git/gpt-4/template_context_full/acc_deviceptr.c",
                "output": "test_acc_deviceptr:\n     20, Generating enter data create(device_ptr[:array_size])\n         Generating enter data copyin(host_array[:array_size])\n         Generating present(device_ptr[:array_size],host_array[:array_size])\n         Generating NVIDIA GPU code\n         23, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */\n     39, Generating exit data delete(host_array[:array_size],device_ptr[:array_size])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_deviceptr_c",
                "output": "",
                "exit_code": 0,
                "passed": true
            }
        },
        "acc_update_device_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/acc_update_device_c ../vvllm_git/gpt-4/template_context_full/acc_update_device.c",
                "output": "test1:\n     23, Generating enter data copyin(localArray[:arraySize])\n     29, Generating present(localArray[:arraySize])\n         Generating NVIDIA GPU code\n         31, #pragma acc loop gang /* blockIdx.x */\n     29, CUDA shared memory used for deviceArray\n     31, Accelerator clause: upper bound for dimension 0 of array 'deviceArray' is unknown\n     42, Generating exit data delete(localArray[:arraySize])",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/acc_update_device_c",
                "output": "",
                "exit_code": -11,
                "passed": false
            }
        },
        "data_construct_detach_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/data_construct_detach_clause_fortran ../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near identifier s (../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.F90: 6)\nNVFORTRAN-S-0034-Syntax error at or near end of line (../vvllm_git/gpt-4/template_context_full/data_construct_detach_clause.F90: 25)\n  0 inform,   0 warnings,   2 severes, 0 fatal for test1",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_detach_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "acc_copyout_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/acc_copyout_fortran ../vvllm_git/gpt-4/template_context_full/acc_copyout.F90",
                "output": "NVFORTRAN-S-0034-Syntax error at or near = (../vvllm_git/gpt-4/template_context_full/acc_copyout.F90: 18)\n  0 inform,   0 warnings,   1 severes, 0 fatal for test1\nNVFORTRAN-S-0038-Symbol, num_test_calls, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/acc_copyout.F90: 37)\n  0 inform,   0 warnings,   1 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/acc_copyout_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "shutdown_directive_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/shutdown_directive_cpp ../vvllm_git/gpt-4/template_context_full/shutdown_directive.cpp",
                "output": "test_shutdown_directive():\n     17, Generating enter data create(device_num)\n     21, Generating update self(device_num)",
                "exit_code": 0
            },
            "execution": {
                "command": "./build/shutdown_directive_cpp",
                "output": "",
                "exit_code": 1,
                "passed": false
            }
        },
        "serial_construct_self_clause_c": {
            "compilation": {
                "command": "nvc -acc -Minfo=all -o build/serial_construct_self_clause_c ../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.c",
                "output": "\"../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.c\", line 9: error: invalid text in pragma\n      #pragma acc serial self\n                         ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/serial_construct_self_clause.c\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/serial_construct_self_clause_c",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "kernels_construct_wait_clause_F90": {
            "compilation": {
                "command": "nvfortran -acc -Minfo=all -o build/kernels_construct_wait_clause_fortran ../vvllm_git/gpt-4/template_context_full/kernels_construct_wait_clause.F90",
                "output": "NVFORTRAN-S-0121-Operation requires logical or integer data types (../vvllm_git/gpt-4/template_context_full/kernels_construct_wait_clause.F90: 50)\nNVFORTRAN-S-0038-Symbol, test1, has not been explicitly declared (../vvllm_git/gpt-4/template_context_full/kernels_construct_wait_clause.F90: 40)\n  0 inform,   0 warnings,   2 severes, 0 fatal for main",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/kernels_construct_wait_clause_fortran",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        },
        "data_construct_attach_clause_cpp": {
            "compilation": {
                "command": "nvc++ -acc -Minfo=all -o build/data_construct_attach_clause_cpp ../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.cpp",
                "output": "\"../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.cpp\", line 18: error: invalid text in pragma\n      #pragma acc attach (device_pointer)\n                         ^\n\n1 error detected in the compilation of \"../vvllm_git/gpt-4/template_context_full/data_construct_attach_clause.cpp\".",
                "exit_code": 2
            },
            "execution": {
                "command": "./build/data_construct_attach_clause_cpp",
                "output": "",
                "exit_code": 127,
                "passed": false
            }
        }
    }
}