{
    "configs": [
        {
            "CC": "nvc",
            "CCFlags": [
                "-acc=gpu",
                "-Minfo=all",
                "-lm"
            ],
            "CC_ACC_Version": "2.6",
            "CPP": "nvc++",
            "CPPFlags": [
                "-acc=gpu",
                "-Minfo=all",
                "-lm"
            ],
            "CPP_ACC_Version": "2.6",
            "FC": "nvfortran",
            "FCFlags": [
                "-acc=gpu",
                "-Minfo=all",
                "-lm"
            ],
            "FC_ACC_Version": "2.6",
            "PostCompileCommands": [],
            "PostRunCommands": [],
            "PreCompileCommands": [],
            "PreRunCommands": [],
            "build_dir": "/usa/jarmusch/Nvidia/OpenACCV-V/build",
            "config_id": -1,
            "config_name": "init_config.txt",
            "env": null,
            "exclude_tags": [],
            "exclude_tests": [
                "acc_testsuite.Fh",
                "acc_testsuite.h",
                "acc_testsuite_declare.h"
            ],
            "export_format": "json",
            "fast": false,
            "id": 1,
            "include_by_default": true,
            "include_tags": [],
            "include_tests": [],
            "keep_build_dir": false,
            "keep_mutated_tests": false,
            "keep_partial_results": false,
            "keep_policy": "on-error",
            "mutated_test_dir": "/usa/jarmusch/Nvidia/OpenACCV-V/build/mutated_tests",
            "mutators": [],
            "partial": false,
            "partial_results_dir": "/usa/jarmusch/Nvidia/OpenACCV-V/build/partial_results",
            "runAll": false,
            "runtime_prefix": "",
            "seed": null,
            "system_name": null,
            "tag_evaluation": null,
            "test_dir": "/usa/jarmusch/Nvidia/OpenACCV-V/Tests",
            "timeout": 10
        }
    ],
    "runs": {
        "acc_attach.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_attach.c/acc_attach.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_attach.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_attach.c\", line 18: error: invalid text in pragma\n      #pragma acc attach copyin(a[0:N])\n                         ^\n\n1 error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_attach.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.2151165020040935
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyin.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_copyin.c/acc_copyin.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_copyin.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_copyin.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_copyin.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1648917840066133
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_copyout.c/acc_copyout.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_copyout.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_copyout.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_copyout.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1649020340119023
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_delete.c/acc_delete.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_delete.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_delete.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_delete.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1646237730019493
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_detach.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_detach.c/acc_detach.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 20: warning: argument of type \"int *\" is incompatible with parameter of type \"void **\" [incompatible_param]\n      acc_detach(a);\n                 ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 23: warning: argument of type \"int *\" is incompatible with parameter of type \"unsigned long\" [incompatible_param]\n      acc_copyout(b, a, sizeof(int) * 10);\n                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 23: error: too many arguments in function call\n      acc_copyout(b, a, sizeof(int) * 10);\n                        ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 33: warning: argument of type \"int *\" is incompatible with parameter of type \"void **\" [incompatible_param]\n      acc_attach(a);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 36: warning: argument of type \"int *\" is incompatible with parameter of type \"unsigned long\" [incompatible_param]\n      acc_copyout(b, a, sizeof(int) * 10);\n                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 36: error: too many arguments in function call\n      acc_copyout(b, a, sizeof(int) * 10);\n                        ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 46: warning: argument of type \"int *\" is incompatible with parameter of type \"void **\" [incompatible_param]\n      acc_detach(a);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 47: warning: argument of type \"int *\" is incompatible with parameter of type \"void **\" [incompatible_param]\n      acc_attach(b);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 50: warning: argument of type \"int *\" is incompatible with parameter of type \"unsigned long\" [incompatible_param]\n      acc_copyout(a, b, sizeof(int) * 10);\n                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\", line 50: error: too many arguments in function call\n      acc_copyout(a, b, sizeof(int) * 10);\n                        ^\n\n3 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_detach.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.21490183199057356
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_deviceptr.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_deviceptr.c/acc_deviceptr.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_deviceptr.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_deviceptr.c\", line 4: catastrophic error: cannot open source file \"acc_deviceptr.h\"\n  #include <acc_deviceptr.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_deviceptr.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16478942800313234
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_free.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_free.c/acc_free.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_free.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2650495929992758
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21462116799375508,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_default_async.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_get_default_async.c/acc_get_default_async.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_default_async.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_default_async.c\", line 4: catastrophic error: cannot open source file \"acc_runtime.h\"\n  #include <acc_runtime.h>\n                          ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_default_async.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16483258199878037
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_device_num.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_get_device_num.c/acc_get_device_num.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_device_num.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_device_num.c\", line 4: catastrophic error: cannot open source file \"acc/acc_runtime.h\"\n  #include <acc/acc_runtime.h>\n                              ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_device_num.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16476806900755037
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_device_type.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_get_device_type.c/acc_get_device_type.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_device_type.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_device_type.c\", line 4: catastrophic error: cannot open source file \"acc_runtime.h\"\n  #include <acc_runtime.h>\n                          ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_device_type.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.165033733996097
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_num_devices.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_get_num_devices.c/acc_get_num_devices.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_num_devices.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_num_devices.c\", line 4: catastrophic error: cannot open source file \"acc_runtime.h\"\n  #include <acc_runtime.h>\n                          ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_num_devices.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1647952310013352
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_property.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_get_property.c/acc_get_property.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_property.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_property.c\", line 41: error: identifier \"acc_property_shared_memory_support\" is undefined\n          failed = failed + test_acc_get_property(x, acc_device_current, acc_property_shared_memory_support);\n                                                                         ^\n\n1 error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_get_property.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1647891499887919
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_hostptr.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_hostptr.c/acc_hostptr.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_hostptr.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_hostptr.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_hostptr.c\".\nCompilation terminated.\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16483404400059953
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -DT1 -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_hostptr.c/acc_hostptr.c1 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_hostptr.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_hostptr.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_hostptr.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16452137599117123
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_is_present.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_is_present.c/acc_is_present.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c\", line 9: error: identifier \"NUM_TEST_CALLS\" is undefined\n      for (int x = 0; x < NUM_TEST_CALLS; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c\", line 18: error: identifier \"NUM_TEST_CALLS\" is undefined\n      for (int x = 0; x < NUM_TEST_CALLS; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c\", line 19: warning: function \"malloc\" declared implicitly [implicit_func_decl]\n          int *data = (int *)malloc(sizeof(int));\n                             ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c\", line 22: warning: function \"free\" declared implicitly [implicit_func_decl]\n          free(data);\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c\", line 30: error: identifier \"NUM_TEST_CALLS\" is undefined\n      for (int x = 0; x < NUM_TEST_CALLS; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c\", line 31: warning: function \"malloc\" declared implicitly [implicit_func_decl]\n          int *data = (int *)malloc(sizeof(int));\n                             ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c\", line 34: warning: function \"free\" declared implicitly [implicit_func_decl]\n          free(data);\n          ^\n\n3 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_is_present.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16455320800014306
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_malloc.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_malloc.c/acc_malloc.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_malloc.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_malloc.c\", line 4: catastrophic error: cannot open source file \"acc_runtime.h\"\n  #include <acc_runtime.h>\n                          ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_malloc.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16490747599164024
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_map_data.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_map_data.c/acc_map_data.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_map_data.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_map_data.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_map_data.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16457940799591597
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_memcpy_from_device.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_memcpy_from_device.c/acc_memcpy_from_device.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_memcpy_from_device.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_memcpy_from_device.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_memcpy_from_device.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16473521498846821
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_memcpy_to_device.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_memcpy_to_device.c/acc_memcpy_to_device.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_memcpy_to_device.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_memcpy_to_device.c\", line 11: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2647760820109397
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Segmentation fault (core dumped)\n",
                    "export": true,
                    "output": "",
                    "result": 139,
                    "runtime": 0.264732487994479,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_on_device.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_on_device.c/acc_on_device.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_on_device.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_on_device.c\", line 11: warning: function \"acc_get_device_count\" declared implicitly [implicit_func_decl]\n              if (acc_get_device_count(acc_device_host) > 0) {\n                  ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_on_device.c\", line 32: warning: function \"acc_get_device_count\" declared implicitly [implicit_func_decl]\n              if (acc_get_device_count(acc_device_not_host) > 0) {\n                  ^\n\n/usr/bin/ld: /tmp/nvcf7r0p1P8_tOl.o: in function `main':\n/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_on_device.c:11: undefined reference to `acc_get_device_count'\npgacclnk: child process exit status 1: /usr/bin/ld\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.36510786099825054
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_set_default_async.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_set_default_async.c/acc_set_default_async.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_set_default_async.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_set_default_async.c\", line 4: catastrophic error: cannot open source file \"acc_runtime.h\"\n  #include <acc_runtime.h>\n                          ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_set_default_async.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16462930300622247
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_set_device_type.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_set_device_type.c/acc_set_device_type.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_set_device_type.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_set_device_type.c\", line 5: error: identifier \"ACC_DEVICE_GPU\" is undefined\n      acc_set_device_type(ACC_DEVICE_GPU);\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_set_device_type.c\", line 14: error: identifier \"ACC_DEVICE_CPU\" is undefined\n      acc_set_device_type(ACC_DEVICE_CPU);\n                          ^\n\n2 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_set_device_type.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16465455199067947
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_shutdown.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_shutdown.c/acc_shutdown.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_shutdown.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_shutdown.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_shutdown.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16469596099341288
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_unmap_data.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_unmap_data.c/acc_unmap_data.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_unmap_data.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_unmap_data.c\", line 4: catastrophic error: cannot open source file \"acc_runtime.h\"\n  #include <acc_runtime.h>\n                          ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_unmap_data.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16488414000195917
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_device.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_update_device.c/acc_update_device.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_update_device.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_update_device.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_update_device.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16471713299688417
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_wait.c/acc_wait.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait.c\".\nCompilation terminated.\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16474778999690898
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -DT1 -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_wait.c/acc_wait.c1 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1645462860033149
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait_any.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/acc_wait_any.c/acc_wait_any.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait_any.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait_any.c\", line 4: catastrophic error: cannot open source file \"acc_runtime.h\"\n  #include <acc_runtime.h>\n                          ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/acc_wait_any.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1646304249879904
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "async_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/async_clause.c/async_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/async_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/async_clause.c\", line 5: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/async_clause.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16469753299315926
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "attachment_counter.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/attachment_counter.c/attachment_counter.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 8: warning: function \"srand\" declared implicitly [implicit_func_decl]\n      srand(SEED);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 8: error: identifier \"SEED\" is undefined\n      srand(SEED);\n            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 9: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 9: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 9: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 9: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 10: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 10: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 10: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 12: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 13: warning: function \"rand\" declared implicitly [implicit_func_decl]\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 13: error: identifier \"RAND_MAX\" is undefined\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 17: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 17: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 17: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 19: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 19: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 29: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 41: error: identifier \"a\" is undefined\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 41: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 43: error: identifier \"b\" is undefined\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 47: error: identifier \"b\" is undefined\n                  b[x] = a[x];\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 47: error: identifier \"a\" is undefined\n                  b[x] = a[x];\n                         ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 53: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 53: error: identifier \"b\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 53: error: identifier \"a\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\", line 39: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\n22 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/attachment_counter.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16461287399579305
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "cache_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/cache_directive.c/cache_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/cache_directive.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/cache_directive.c\", line 10: warning: variable \"k\" was declared but never referenced [declared_but_not_referenced]\n      int i, j, k;\n                ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31515610600763466
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.008002875998499803,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "combined_constucts.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/combined_constucts.c/combined_constucts.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 49: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 49: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 49: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 49: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 50: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 50: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 50: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 52: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 57: error: non variable found in parallel pragma list\n      #pragma acc parallel loop copyin(a[0:n]) copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 57: error: non variable found in parallel pragma list\n      #pragma acc parallel loop copyin(a[0:n]) copyout(b[0:n])\n                                        ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 57: error: identifier \"n\" is undefined\n      #pragma acc parallel loop copyin(a[0:n]) copyout(b[0:n])\n                                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 57: error: non variable found in parallel pragma list\n      #pragma acc parallel loop copyin(a[0:n]) copyout(b[0:n])\n                                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 57: error: non variable found in parallel pragma list\n      #pragma acc parallel loop copyin(a[0:n]) copyout(b[0:n])\n                                                        ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 62: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 74: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 74: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 74: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 74: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 75: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 75: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 75: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 77: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 82: error: non variable found in parallel pragma list\n      #pragma acc serial loop copyin(a[0:n]) copyout(b[0:n])\n                                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 82: error: non variable found in parallel pragma list\n      #pragma acc serial loop copyin(a[0:n]) copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 82: error: identifier \"n\" is undefined\n      #pragma acc serial loop copyin(a[0:n]) copyout(b[0:n])\n                                         ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 82: error: non variable found in parallel pragma list\n      #pragma acc serial loop copyin(a[0:n]) copyout(b[0:n])\n                                                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 82: error: non variable found in parallel pragma list\n      #pragma acc serial loop copyin(a[0:n]) copyout(b[0:n])\n                                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 87: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 99: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 99: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 99: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 99: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 100: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 100: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 100: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 102: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 107: error: non variable found in parallel pragma list\n      #pragma acc kernels loop copyin(a[0:n]) copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 107: error: non variable found in parallel pragma list\n      #pragma acc kernels loop copyin(a[0:n]) copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 107: error: identifier \"n\" is undefined\n      #pragma acc kernels loop copyin(a[0:n]) copyout(b[0:n])\n                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 107: error: non variable found in parallel pragma list\n      #pragma acc kernels loop copyin(a[0:n]) copyout(b[0:n])\n                                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 107: error: non variable found in parallel pragma list\n      #pragma acc kernels loop copyin(a[0:n]) copyout(b[0:n])\n                                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\", line 112: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n42 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/combined_constucts.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16490151299512945
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_async_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/compute_construct_async_clause.c/compute_construct_async_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 13: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 13: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 13: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 13: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 14: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 14: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 14: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 21: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 21: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\", line 23: error: expected a \"]\"\n          #pragma acc kernels async(b[0:n])\n                                       ^\n\n10 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_async_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1645215989992721
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_if_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/compute_construct_if_clause.c/compute_construct_if_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_if_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_if_clause.c\", line 5: catastrophic error: cannot open source file \"acc/acc.h\"\n  #include <acc/acc.h>\n                      ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_if_clause.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1645680069923401
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_num_gangs_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/compute_construct_num_gangs_clause.c/compute_construct_num_gangs_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_gangs_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_gangs_clause.c\", line 23: error: invalid text in pragma\n          #pragma acc parallel num_gangs(num_gangs) num_workers(num_workers) num_vectors(num_vectors)\n                                                                             ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_gangs_clause.c\", line 23: error: extra text after expected end of preprocessing directive\n          #pragma acc parallel num_gangs(num_gangs) num_workers(num_workers) num_vectors(num_vectors)\n                                                                                        ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_gangs_clause.c\", line 28: warning: function \"acc_get_num_gangs\" declared implicitly [implicit_func_decl]\n          if (acc_get_num_gangs() != num_gangs) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_gangs_clause.c\", line 21: warning: variable \"num_vectors\" was declared but never referenced [declared_but_not_referenced]\n          int num_vectors = NUM_VECTORS;\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_gangs_clause.c\", line 46: warning: function \"acc_get_num_gangs\" declared implicitly [implicit_func_decl]\n          if (acc_get_num_gangs() != num_gangs) {\n              ^\n\n2 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_gangs_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16472568700555712
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_num_workersclause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/compute_construct_num_workersclause.c/compute_construct_num_workersclause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_workersclause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_workersclause.c\", line 14: warning: function \"acc_set_num_workers\" declared implicitly [implicit_func_decl]\n      acc_set_num_workers(NUM_WORKERS);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_workersclause.c\", line 23: warning: function \"acc_get_worker_id\" declared implicitly [implicit_func_decl]\n              printf(\"Hello from worker %d\\n\", acc_get_worker_id());\n                                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_workersclause.c\", line 28: warning: function \"acc_get_num_workers\" declared implicitly [implicit_func_decl]\n      int num_workers = acc_get_num_workers();\n                        ^\n\nNVC++-S-0155-Nested Parallelism is not supported for pragma: acc  kernels (/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_num_workersclause.c: 21)\nNVC++/x86-64 Linux 23.5-0: compilation completed with severe errors\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1648704029939836
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_private_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/compute_construct_private_clause.c/compute_construct_private_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 14: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * m * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 14: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * m * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 14: error: expected an expression\n      real_t *a = (real_t *)malloc(n * m * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 14: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * m * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 15: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * m * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 15: error: expected an expression\n      real_t *b = (real_t *)malloc(n * m * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 15: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * m * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 16: error: identifier \"c\" is undefined\n      real_t *c = (real_t *)malloc(n * m * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 16: error: expected an expression\n      real_t *c = (real_t *)malloc(n * m * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 16: error: expected a \";\"\n      real_t *c = (real_t *)malloc(n * m * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 26: error: non variable found in parallel pragma list\n      #pragma acc parallel num_gangs(n) num_workers(m) vector_length(k) private(a, b, c)\n                                                                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 26: error: non variable found in parallel pragma list\n      #pragma acc parallel num_gangs(n) num_workers(m) vector_length(k) private(a, b, c)\n                                                                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\", line 26: error: non variable found in parallel pragma list\n      #pragma acc parallel num_gangs(n) num_workers(m) vector_length(k) private(a, b, c)\n                                                                                      ^\n\n13 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_private_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1648338130034972
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_self_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/compute_construct_self_clause.c/compute_construct_self_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 17: error: identifier \"SEED\" is undefined\n          srand(SEED);\n                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 18: error: identifier \"real_t\" is undefined\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 18: error: identifier \"a\" is undefined\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 18: error: expected an expression\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 18: error: expected a \";\"\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 19: error: identifier \"b\" is undefined\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 19: error: expected an expression\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 19: error: expected a \";\"\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 21: error: identifier \"n\" is undefined\n          for (int x = 0; x < n; ++x) {\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 26: error: non variable found in parallel pragma list\n          #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 26: error: non variable found in parallel pragma list\n          #pragma acc data copyin(a[0:n])\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 26: error: identifier \"n\" is undefined\n          #pragma acc data copyin(a[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 28: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(b[0:n])\n                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 28: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(b[0:n])\n                                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 38: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n              if (fabs(b[x] - a[x]) > PRECISION) {\n                  ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 56: error: identifier \"SEED\" is undefined\n          srand(SEED);\n                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 57: error: identifier \"real_t\" is undefined\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 57: error: identifier \"a\" is undefined\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 57: error: expected an expression\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 57: error: expected a \";\"\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 58: error: identifier \"b\" is undefined\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 58: error: expected an expression\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 58: error: expected a \";\"\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 60: error: identifier \"n\" is undefined\n          for (int x = 0; x < n; ++x) {\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 65: error: non variable found in parallel pragma list\n          #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 65: error: non variable found in parallel pragma list\n          #pragma acc data copyin(a[0:n])\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 65: error: identifier \"n\" is undefined\n          #pragma acc data copyin(a[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 67: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(b[0:n])\n                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 67: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(b[0:n])\n                                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 77: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n              if (fabs(b[x] - a[x]) > PRECISION) {\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 95: error: identifier \"SEED\" is undefined\n          srand(SEED);\n                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 96: error: identifier \"real_t\" is undefined\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 96: error: identifier \"a\" is undefined\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 96: error: expected an expression\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 96: error: expected a \";\"\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 97: error: identifier \"b\" is undefined\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 97: error: expected an expression\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 97: error: expected a \";\"\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 99: error: identifier \"n\" is undefined\n          for (int x = 0; x < n; ++x) {\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 104: error: non variable found in parallel pragma list\n          #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 104: error: non variable found in parallel pragma list\n          #pragma acc data copyin(a[0:n])\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 104: error: identifier \"n\" is undefined\n          #pragma acc data copyin(a[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 106: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(b[0:n])\n                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 106: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(b[0:n])\n                                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\", line 116: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n              if (fabs(b[x] - a[x]) > PRECISION) {\n                  ^\n\n42 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_self_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1646391819958808
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_vector_length_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/compute_construct_vector_length_clause.c/compute_construct_vector_length_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c\", line 16: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c\", line 16: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c\", line 16: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c\", line 16: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c\", line 17: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c\", line 17: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c\", line 17: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n7 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_vector_length_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16465826900093816
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_wait_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/compute_construct_wait_clause.c/compute_construct_wait_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 16: error: identifier \"real_t\" is undefined\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 16: error: identifier \"a\" is undefined\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 16: error: expected an expression\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 16: error: expected a \";\"\n          real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 17: error: identifier \"b\" is undefined\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 17: error: expected an expression\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 17: error: expected a \";\"\n          real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 19: error: identifier \"n\" is undefined\n          for (int i = 0; i < n; ++i) {\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 24: error: non variable found in parallel pragma list\n          #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 24: error: non variable found in parallel pragma list\n          #pragma acc data copyin(a[0:n])\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 24: error: identifier \"n\" is undefined\n          #pragma acc data copyin(a[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 26: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(b[0:n]) wait(1)\n                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 26: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(b[0:n]) wait(1)\n                                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\", line 36: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n              if (fabs(b[i] - a[i]) > PRECISION) {\n                  ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n13 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/compute_construct_wait_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16493279200221878
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_construct.c/data_construct.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 11: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(N * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 11: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(N * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 11: error: expected an expression\n      real_t *a = (real_t *)malloc(N * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 11: error: expected a \";\"\n      real_t *a = (real_t *)malloc(N * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 12: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(N * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 12: error: expected an expression\n      real_t *b = (real_t *)malloc(N * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 12: error: expected a \";\"\n      real_t *b = (real_t *)malloc(N * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 19: error: non variable found in parallel pragma list\n      #pragma acc data copyout(b[0:N])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 19: error: non variable found in parallel pragma list\n      #pragma acc data copyout(b[0:N])\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\", line 31: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[i] - a[i]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n9 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16454010400047991
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_attach_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_construct_attach_clause.c/data_construct_attach_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 12: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 12: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 12: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 12: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 13: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 13: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 13: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 20: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n]) attach(b[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 20: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n]) attach(b[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 20: error: expected a \"]\"\n      #pragma acc data copyin(a[0:n]) attach(b[0:n])\n                                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 22: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 22: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\", line 32: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n12 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_attach_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16485078599362168
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_copy_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_construct_copy_clause.c/data_construct_copy_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 30: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 30: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 30: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 30: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 31: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 31: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 31: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 33: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 38: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 38: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 38: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 40: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 40: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\", line 50: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n13 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copy_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1649262999999337
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_copyin_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_construct_copyin_clause.c/data_construct_copyin_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 11: error: identifier \"SEED\" is undefined\n      srand(SEED);\n            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 12: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 12: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 12: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 12: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 13: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 13: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 13: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 15: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 20: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 20: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 20: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 22: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 22: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 32: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 44: error: identifier \"a\" is undefined\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 44: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 46: error: identifier \"b\" is undefined\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 50: error: identifier \"b\" is undefined\n                  b[x] = a[x];\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 50: error: identifier \"a\" is undefined\n                  b[x] = a[x];\n                         ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 56: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 56: error: identifier \"b\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 56: error: identifier \"a\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\", line 42: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\n21 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyin_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16466906999994535
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_copyout_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_construct_copyout_clause.c/data_construct_copyout_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 9: warning: function \"srand\" declared implicitly [implicit_func_decl]\n      srand(SEED);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 10: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 10: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 10: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 10: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 11: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 11: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 11: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 13: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 14: warning: function \"rand\" declared implicitly [implicit_func_decl]\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 14: error: identifier \"RAND_MAX\" is undefined\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 18: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 18: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 18: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 20: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 20: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\", line 30: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n14 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_copyout_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16477488100645132
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_delete_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_construct_delete_clause.c/data_construct_delete_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 11: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 11: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 11: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 11: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 12: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 12: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 12: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 19: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 19: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 21: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 21: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 31: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 36: error: invalid text in pragma\n      #pragma acc data delete(a[0:n])\n                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 36: error: invalid text in pragma\n      #pragma acc data delete(a[0:n])\n                             ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 36: error: extra text after expected end of preprocessing directive\n      #pragma acc data delete(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 38: error: invalid text in pragma\n          #pragma acc kernels delete(b[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 38: error: invalid text in pragma\n          #pragma acc kernels delete(b[0:n])\n                                    ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 38: error: extra text after expected end of preprocessing directive\n          #pragma acc kernels delete(b[0:n])\n                                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\", line 48: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n17 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_delete_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16458933700050693
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_detach_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_construct_detach_clause.c/data_construct_detach_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_detach_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_detach_clause.c\", line 11: error: expected a \"]\"\n      #pragma acc data detach(a[0:n])\n                                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_detach_clause.c\", line 11: error: invalid text in pragma\n      #pragma acc data detach(a[0:n])\n                                    ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_detach_clause.c\", line 22: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n2 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_detach_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.21509682400210295
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_no_create_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_construct_no_create_clause.c/data_construct_no_create_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 16: warning: function \"test1\" declared implicitly [implicit_func_decl]\n          int err = test1();\n                    ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 28: warning: function \"test2\" declared implicitly [implicit_func_decl]\n          int err = test2();\n                    ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 42: error: identifier \"SEED\" is undefined\n      srand(SEED);\n            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 43: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 43: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 43: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 43: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 44: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 44: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 44: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 46: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 51: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 51: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 51: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 53: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 53: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 63: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 73: error: identifier \"SEED\" is undefined\n      srand(SEED);\n            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 74: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 74: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 74: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 74: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 75: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 75: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 75: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 77: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 82: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 82: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 82: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 84: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 84: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\", line 94: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n28 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_construct_no_create_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16464678599731997
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_deviceptr_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/data_deviceptr_clause.c/data_deviceptr_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 14: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 14: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 14: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 14: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 15: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 15: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 15: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 18: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 24: error: non variable found in parallel pragma list\n      #pragma acc data deviceptr(a, b)\n                                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 24: error: non variable found in parallel pragma list\n      #pragma acc data deviceptr(a, b)\n                                    ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 27: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 27: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 27: error: identifier \"n\" is undefined\n          #pragma acc kernels copyout(b[0:n])\n                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 30: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(a[0:n])\n                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 30: error: non variable found in parallel pragma list\n              #pragma acc kernels copyout(a[0:n])\n                                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 34: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n                      if (fabs(b[x] - a[x]) > PRECISION) {\n                          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\", line 11: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\n15 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/data_deviceptr_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1651087770005688
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/declare_directive.c/declare_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive.c\".\nCompilation terminated.\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16474736800591927
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -DT1 -o /usa/jarmusch/Nvidia/OpenACCV-V/build/declare_directive.c/declare_directive.c1 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16449337400263175
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_directive_create_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/declare_directive_create_clause.c/declare_directive_create_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 8: warning: function \"acc_create_shared_memory\" declared implicitly [implicit_func_decl]\n      acc_create_shared_memory(1024, 1024, 1024);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 19: warning: function \"acc_create_device_memory\" declared implicitly [implicit_func_decl]\n      acc_create_device_memory(1024, 1024, 1024);\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 30: warning: function \"acc_create_structured_reference_counter\" declared implicitly [implicit_func_decl]\n      acc_create_structured_reference_counter(a, 1);\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 33: warning: function \"acc_create_dynamic_reference_counter\" declared implicitly [implicit_func_decl]\n      acc_create_dynamic_reference_counter(b, 1);\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 36: warning: function \"acc_present_increment\" declared implicitly [implicit_func_decl]\n      acc_present_increment(a, 1);\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 39: warning: function \"acc_present_decrement\" declared implicitly [implicit_func_decl]\n      acc_present_decrement(a, 1);\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 48: warning: function \"acc_get_structured_reference_counter\" declared implicitly [implicit_func_decl]\n      if (acc_get_structured_reference_counter(a) != 0) {\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 53: warning: function \"acc_get_dynamic_reference_counter\" declared implicitly [implicit_func_decl]\n      if (acc_get_dynamic_reference_counter(b) != 0) {\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c\", line 5: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\n/usr/bin/ld: /tmp/nvcl2x0HOXKy3tY.o: in function `main':\n/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c:8: undefined reference to `acc_create_shared_memory'\n/usr/bin/ld: /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c:19: undefined reference to `acc_create_device_memory'\n/usr/bin/ld: /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c:30: undefined reference to `acc_create_structured_reference_counter'\n/usr/bin/ld: /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c:33: undefined reference to `acc_create_dynamic_reference_counter'\n/usr/bin/ld: /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c:36: undefined reference to `acc_present_increment'\n/usr/bin/ld: /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c:39: undefined reference to `acc_present_decrement'\n/usr/bin/ld: /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c:48: undefined reference to `acc_get_structured_reference_counter'\n/usr/bin/ld: /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_create_clause.c:53: undefined reference to `acc_get_dynamic_reference_counter'\npgacclnk: child process exit status 1: /usr/bin/ld\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.264871752995532
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_directive_device_resident_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/declare_directive_device_resident_clause.c/declare_directive_device_resident_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 13: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)acc_malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 13: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)acc_malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 13: error: expected an expression\n      real_t *a = (real_t *)acc_malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 13: error: expected a \";\"\n      real_t *a = (real_t *)acc_malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 14: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)acc_malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 14: error: expected an expression\n      real_t *b = (real_t *)acc_malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 14: error: expected a \";\"\n      real_t *b = (real_t *)acc_malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 17: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 23: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 23: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 23: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 26: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 26: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 38: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\", line 10: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\n13 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_device_resident_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11475390200212132
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_directive_link_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/declare_directive_link_clause.c/declare_directive_link_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 10: error: identifier \"SEED\" is undefined\n      srand(SEED);\n            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 11: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 11: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 11: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 11: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 12: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 12: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 12: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 19: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 19: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 21: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 21: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 31: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 43: error: identifier \"a\" is undefined\n      #pragma acc declare link(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 43: error: identifier \"n\" is undefined\n      #pragma acc declare link(a[0:n])\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 45: error: identifier \"b\" is undefined\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 49: error: identifier \"b\" is undefined\n                  b[x] = a[x];\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\", line 49: error: identifier \"a\" is undefined\n                  b[x] = a[x];\n                         ^\n\n17 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/declare_directive_link_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1648515779961599
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "enter_data_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/enter_data_directive.c/enter_data_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 11: error: identifier \"SEED\" is undefined\n      srand(SEED);\n            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 12: error: identifier \"real_t\" is undefined\n      real_t * a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 12: error: identifier \"a\" is undefined\n      real_t * a = (real_t *)malloc(n * sizeof(real_t));\n               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 12: error: expected an expression\n      real_t * a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 12: error: expected a \";\"\n      real_t * a = (real_t *)malloc(n * sizeof(real_t));\n                             ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 13: error: identifier \"b\" is undefined\n      real_t * b = (real_t *)malloc(n * sizeof(real_t));\n               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 13: error: expected an expression\n      real_t * b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 13: error: expected a \";\"\n      real_t * b = (real_t *)malloc(n * sizeof(real_t));\n                             ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 15: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x){\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 20: error: non variable found in parallel pragma list\n      #pragma acc enter data copyin(a[0:n])\n                                    ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 20: error: non variable found in parallel pragma list\n      #pragma acc enter data copyin(a[0:n])\n                                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 20: error: identifier \"n\" is undefined\n      #pragma acc enter data copyin(a[0:n])\n                                        ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 22: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 22: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\", line 32: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION){\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n14 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/enter_data_directive.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1646028630057117
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "exit_data_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/exit_data_directive.c/exit_data_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/exit_data_directive.c",
                    "config": 1,
                    "errors": "test_exit_data:\n     20, Generating enter data copyin(a[:10])\n     22, Generating implicit copyout(b[:10]) [if not already present]\n         Generating implicit copyin(a[:10]) [if not already present]\n     24, Complex loop carried dependence of a-> prevents parallelization\n         Loop carried dependence of b-> prevents parallelization\n         Loop carried backward dependence of b-> prevents vectorization\n         Accelerator serial kernel generated\n         Generating NVIDIA GPU code\n         24, #pragma acc loop seq\n     28, Generating exit data copyout(b[:10])\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4653645590005908
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failing in Thread:1\nAccelerator Fatal Error: call to cuMemcpyDtoHAsync returned error 1: Invalid value\n File: /usa/jarmusch/Nvidia/OpenACCV-V/Tests/exit_data_directive.c\n Function: test_exit_data:9\n Line: 28\n\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.21456036099698395,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "host_data_construct_if_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/host_data_construct_if_clause.c/host_data_construct_if_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_clause.c\", line 22: error: OpenACC data clause expected\n          #pragma acc host_data if(0)\n                                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_clause.c\", line 56: error: OpenACC data clause expected\n          #pragma acc host_data if(1)\n                                     ^\n\n2 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.21500382699014153
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "host_data_construct_if_present_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/host_data_construct_if_present_clause.c/host_data_construct_if_present_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_present_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_present_clause.c\", line 8: warning: function \"malloc\" declared implicitly [implicit_func_decl]\n      int *a = (int *)malloc(10 * sizeof(int));\n                      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_present_clause.c\", line 16: error: invalid text in pragma\n      #pragma acc host_data if_present(a[0:10])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_present_clause.c\", line 16: error: OpenACC data clause expected\n      #pragma acc host_data if_present(a[0:10])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_present_clause.c\", line 16: error: extra text after expected end of preprocessing directive\n      #pragma acc host_data if_present(a[0:10])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_present_clause.c\", line 37: warning: function \"free\" declared implicitly [implicit_func_decl]\n      free(a);\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_present_clause.c\", line 5: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\n3 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_if_present_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16476712599978782
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "host_data_construct_use_device_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/host_data_construct_use_device_clause.c/host_data_construct_use_device_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_use_device_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_use_device_clause.c\", line 14: warning: function \"malloc\" declared implicitly [implicit_func_decl]\n      int *host_ptr = (int *)malloc(sizeof(int));\n                             ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_use_device_clause.c\", line 34: warning: function \"free\" declared implicitly [implicit_func_decl]\n      free(host_ptr);\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/host_data_construct_use_device_clause.c\", line 5: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31506022199755535
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Segmentation fault (core dumped)\n",
                    "export": true,
                    "output": "",
                    "result": 139,
                    "runtime": 0.31489468600193504,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "init_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/init_directive.c/init_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/init_directive.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/init_directive.c\", line 5: error: Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default'\n      #pragma acc init device_type(gpu)\n                                   ^\n\n1 error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/init_directive.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16463459300575778
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_construct.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/kernels_construct.c/kernels_construct.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 14: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 14: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 14: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 14: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 15: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 15: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 15: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 22: warning: expression has no effect [expr_has_no_effect]\n      #pragma acc kernels async(num_gangs, num_workers, vector_length) device_type(device_type) if(if_condition) self(self_condition) copy(copy_condition) copyin(copyin_condition) copyout(copyout_condition) create(create_condition) no_create(no_create_condition) present(present_condition) deviceptr(deviceptr_condition) attach(attach_condition)\n                                ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 22: warning: expression has no effect [expr_has_no_effect]\n      #pragma acc kernels async(num_gangs, num_workers, vector_length) device_type(device_type) if(if_condition) self(self_condition) copy(copy_condition) copyin(copyin_condition) copyout(copyout_condition) create(create_condition) no_create(no_create_condition) present(present_condition) deviceptr(deviceptr_condition) attach(attach_condition)\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 22: error: Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default'\n      #pragma acc kernels async(num_gangs, num_workers, vector_length) device_type(device_type) if(if_condition) self(self_condition) copy(copy_condition) copyin(copyin_condition) copyout(copyout_condition) create(create_condition) no_create(no_create_condition) present(present_condition) deviceptr(deviceptr_condition) attach(attach_condition)\n                                                                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 22: error: invalid text in pragma\n      #pragma acc kernels async(num_gangs, num_workers, vector_length) device_type(device_type) if(if_condition) self(self_condition) copy(copy_condition) copyin(copyin_condition) copyout(copyout_condition) create(create_condition) no_create(no_create_condition) present(present_condition) deviceptr(deviceptr_condition) attach(attach_condition)\n                                                                                                                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 22: error: invalid text in pragma\n      #pragma acc kernels async(num_gangs, num_workers, vector_length) device_type(device_type) if(if_condition) self(self_condition) copy(copy_condition) copyin(copyin_condition) copyout(copyout_condition) create(create_condition) no_create(no_create_condition) present(present_condition) deviceptr(deviceptr_condition) attach(attach_condition)\n                                                                                                                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 22: error: extra text after expected end of preprocessing directive\n      #pragma acc kernels async(num_gangs, num_workers, vector_length) device_type(device_type) if(if_condition) self(self_condition) copy(copy_condition) copyin(copyin_condition) copyout(copyout_condition) create(create_condition) no_create(no_create_condition) present(present_condition) deviceptr(deviceptr_condition) attach(attach_condition)\n                                                                                                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\", line 44: error: too many arguments in function call\n          failed = test1(10, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);\n                                                                       ^\n\n12 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/kernels_construct.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16466453099565115
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_auto_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_auto_clause.c/loop_construct_auto_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 13: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 13: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 13: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 13: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 14: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 14: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 14: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 16: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 21: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 21: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 21: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 23: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 23: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 33: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 45: error: identifier \"a\" is undefined\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 45: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 47: error: identifier \"b\" is undefined\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 51: error: identifier \"b\" is undefined\n                  b[x] = a[x];\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 51: error: identifier \"a\" is undefined\n                  b[x] = a[x];\n                         ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 57: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 57: error: identifier \"b\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 57: error: identifier \"a\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\", line 43: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\n20 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_auto_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1644339909980772
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_collapse_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_collapse_clause.c/loop_construct_collapse_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 16: error: identifier \"real_t\" is undefined\n          real_t *a = (real_t *)malloc(N * sizeof(real_t));\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 16: error: identifier \"a\" is undefined\n          real_t *a = (real_t *)malloc(N * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 16: error: expected an expression\n          real_t *a = (real_t *)malloc(N * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 16: error: expected a \";\"\n          real_t *a = (real_t *)malloc(N * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 17: error: identifier \"b\" is undefined\n          real_t *b = (real_t *)malloc(N * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 17: error: expected an expression\n          real_t *b = (real_t *)malloc(N * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 17: error: expected a \";\"\n          real_t *b = (real_t *)malloc(N * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 24: error: identifier \"force\" is undefined\n          #pragma acc parallel loop collapse(force:2)\n                                             ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 24: error: expected a \")\"\n          #pragma acc parallel loop collapse(force:2)\n                                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 24: error: expression must be an integral constant expression\n          #pragma acc parallel loop collapse(force:2)\n                                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 24: error: expected a \")\"\n          #pragma acc parallel loop collapse(force:2)\n                                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 24: error: this kind of pragma may not be used here\n          #pragma acc parallel loop collapse(force:2)\n                                                     ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 27: error: expected a \";\"\n                  real_t tanI = tan(a[i]);\n                         ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 29: error: identifier \"tanI\" is undefined\n                      b[j] += tanI;\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 56: error: identifier \"real_t\" is undefined\n          real_t *a = (real_t *)malloc(N * sizeof(real_t));\n          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 56: error: identifier \"a\" is undefined\n          real_t *a = (real_t *)malloc(N * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 56: error: expected an expression\n          real_t *a = (real_t *)malloc(N * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 56: error: expected a \";\"\n          real_t *a = (real_t *)malloc(N * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 57: error: identifier \"b\" is undefined\n          real_t *b = (real_t *)malloc(N * sizeof(real_t));\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 57: error: expected an expression\n          real_t *b = (real_t *)malloc(N * sizeof(real_t));\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 57: error: expected a \";\"\n          real_t *b = (real_t *)malloc(N * sizeof(real_t));\n                                ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 64: error: this kind of pragma may not be used here\n          #pragma acc parallel loop collapse(2)\n                                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 67: error: expected a \";\"\n                  real_t tanI = tan(a[i]);\n                         ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 69: error: identifier \"tanI\" is undefined\n                      b[j] += tanI;\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\", line 64: error: count in COLLAPSE clause does not match number of loops, expected 2 loops but found only 1\n          #pragma acc parallel loop collapse(2)\n          ^\n\n25 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_collapse_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16451046599831898
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_gang_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_gang_clause.c/loop_construct_gang_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_gang_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_gang_clause.c\", line 5: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_gang_clause.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16465559299103916
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_independent_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_independent_clause.c/loop_construct_independent_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_independent_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_independent_clause.c\", line 5: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_independent_clause.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.164363627001876
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_private_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_private_clause.c/loop_construct_private_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 11: error: identifier \"SEED\" is undefined\n      srand(SEED);\n            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 12: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 12: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 12: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 12: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 13: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 13: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 13: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 15: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 20: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 20: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 20: error: identifier \"n\" is undefined\n      #pragma acc data copyin(a[0:n])\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 22: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 22: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 24: error: identifier \"tmp\" is undefined\n              #pragma acc loop private(tmp)\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 26: error: identifier \"tmp\" is undefined\n                  tmp = b[x] + c[x];\n                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 26: error: identifier \"c\" is undefined\n                  tmp = b[x] + c[x];\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\", line 29: error: expression must have arithmetic type\n                      a[i] = a[i] + tmp / div;\n                                          ^\n\n18 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_private_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1644565229944419
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_seq_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_seq_clause.c/loop_construct_seq_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_seq_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_seq_clause.c\", line 1: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include \"acc_testsuite.h\"\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_seq_clause.c\".\nCompilation terminated.\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11459780400036834
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -DT1 -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_seq_clause.c/loop_construct_seq_clause.c1 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_seq_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_seq_clause.c\", line 1: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include \"acc_testsuite.h\"\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_seq_clause.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.2143770209950162
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_tile_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_tile_clause.c/loop_construct_tile_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 13: warning: function \"test1\" declared implicitly [implicit_func_decl]\n          failed = failed + test1();\n                            ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 22: warning: function \"test2\" declared implicitly [implicit_func_decl]\n          failed = failed + test2();\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 31: warning: function \"test3\" declared implicitly [implicit_func_decl]\n          failed = failed + test3();\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 40: warning: function \"test4\" declared implicitly [implicit_func_decl]\n          failed = failed + test4();\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 49: warning: function \"test5\" declared implicitly [implicit_func_decl]\n          failed = failed + test5();\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 61: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 61: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 61: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 61: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 62: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 62: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 62: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 65: warning: function \"rand\" declared implicitly [implicit_func_decl]\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 65: error: identifier \"RAND_MAX\" is undefined\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 69: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 69: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 71: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 71: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 81: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 81: error: identifier \"PRECISION\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 92: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 92: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 92: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 92: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 93: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 93: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 93: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 96: warning: function \"rand\" declared implicitly [implicit_func_decl]\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 96: error: identifier \"RAND_MAX\" is undefined\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 100: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 100: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 102: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 102: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 112: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 112: error: identifier \"PRECISION\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 123: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 123: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 123: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 123: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 124: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 124: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 124: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 127: warning: function \"rand\" declared implicitly [implicit_func_decl]\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 127: error: identifier \"RAND_MAX\" is undefined\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 131: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 131: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 133: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 133: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 143: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 143: error: identifier \"PRECISION\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 154: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 154: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 154: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 154: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 155: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 155: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 155: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 158: warning: function \"rand\" declared implicitly [implicit_func_decl]\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 158: error: identifier \"RAND_MAX\" is undefined\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 162: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 162: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 164: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 164: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 174: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 174: error: identifier \"PRECISION\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 185: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 185: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 185: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 185: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 186: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 186: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 186: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 189: warning: function \"rand\" declared implicitly [implicit_func_decl]\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                 ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 189: error: identifier \"RAND_MAX\" is undefined\n          a[x] = rand() / (real_t)(RAND_MAX / 10);\n                                   ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 193: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 193: error: non variable found in parallel pragma list\n      #pragma acc data copyin(a[0:n])\n                               ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 195: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 195: error: non variable found in parallel pragma list\n          #pragma acc kernels copyout(b[0:n])\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 205: warning: function \"fabs\" declared implicitly [implicit_func_decl]\n          if (fabs(b[x] - a[x]) > PRECISION) {\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\", line 205: error: identifier \"PRECISION\" is undefined\n          if (fabs(b[x] - a[x]) > PRECISION) {\n                                  ^\n\n65 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_tile_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16474636700877454
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_vector_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_vector_clause.c/loop_construct_vector_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 18: warning: function \"test1\" declared implicitly [implicit_func_decl]\n          failed = failed + test1();\n                            ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 27: warning: function \"test2\" declared implicitly [implicit_func_decl]\n          failed = failed + test2();\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 39: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 39: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 39: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 39: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 40: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 40: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 40: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 42: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 47: error: expected a \"]\"\n      #pragma acc parallel loop vector(a[0:n])\n                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 48: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 52: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 64: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 64: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 64: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 64: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 65: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 65: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 65: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 67: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 72: error: expected a \"]\"\n      #pragma acc kernels loop vector(a[0:n])\n                                         ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 73: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\", line 77: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n22 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_vector_clause.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.2148738090036204
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_worker_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/loop_construct_worker_clause.c/loop_construct_worker_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_worker_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_worker_clause.c\", line 5: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/loop_construct_worker_clause.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1647871940076584
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_construct.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/parallel_construct.c/parallel_construct.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/parallel_construct.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/parallel_construct.c\", line 5: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/parallel_construct.c\".\nCompilation terminated.\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16465290798805654
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -DT1 -o /usa/jarmusch/Nvidia/OpenACCV-V/build/parallel_construct.c/parallel_construct.c1 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/parallel_construct.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/parallel_construct.c\", line 5: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/parallel_construct.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.2144179089955287
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_construct.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/serial_construct.c/serial_construct.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 18: warning: function \"test1\" declared implicitly [implicit_func_decl]\n          failed = failed + test1();\n                            ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 27: warning: function \"test2\" declared implicitly [implicit_func_decl]\n          failed = failed + test2();\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 36: warning: function \"test3\" declared implicitly [implicit_func_decl]\n          failed = failed + test3();\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 45: warning: function \"test4\" declared implicitly [implicit_func_decl]\n          failed = failed + test4();\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 57: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 57: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 57: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 57: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 58: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 58: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 58: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 60: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 70: error: identifier \"n\" is undefined\n              for (int x = 0; x < n; ++x) {\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 76: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 88: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 88: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 88: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 88: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 89: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 89: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 89: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 91: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 101: error: identifier \"n\" is undefined\n              for (int x = 0; x < n; ++x) {\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 107: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 119: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 119: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 119: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 119: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 120: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 120: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 120: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 122: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 132: error: identifier \"n\" is undefined\n              for (int x = 0; x < n; ++x) {\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 138: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 150: error: identifier \"real_t\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n      ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 150: error: identifier \"a\" is undefined\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 150: error: expected an expression\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 150: error: expected a \";\"\n      real_t *a = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 151: error: identifier \"b\" is undefined\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n              ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 151: error: expected an expression\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                           ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 151: error: expected a \";\"\n      real_t *b = (real_t *)malloc(n * sizeof(real_t));\n                            ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 153: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 163: error: identifier \"n\" is undefined\n              for (int x = 0; x < n; ++x) {\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\", line 169: error: identifier \"n\" is undefined\n      for (int x = 0; x < n; ++x) {\n                          ^\n\n40 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/serial_construct.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1645724150002934
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "set_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/set_directive.c/set_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 6: error: identifier \"acc_device_type_default\" is undefined\n      int device_type = acc_device_type_default;\n                        ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 15: error: Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default'\n      #pragma acc set device_type(acc_device_type_default)\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 18: error: invalid text in pragma\n      #pragma acc set default_async(acc_async_sync) if (async_var == acc_async_default)\n                                                    ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 18: error: extra text after expected end of preprocessing directive\n      #pragma acc set default_async(acc_async_sync) if (async_var == acc_async_default)\n                                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 21: error: invalid text in pragma\n      #pragma acc set device_num(1) if (device_num == 0)\n                                    ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 21: error: extra text after expected end of preprocessing directive\n      #pragma acc set device_num(1) if (device_num == 0)\n                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 24: error: Specified device type is not a valid device type. Currently accepted device types are 'nvidia, host, multicore, and default'\n      #pragma acc set device_type(acc_device_type_gpu) if (device_type == acc_device_type_default)\n                                  ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 24: error: invalid text in pragma\n      #pragma acc set device_type(acc_device_type_gpu) if (device_type == acc_device_type_default)\n                                                       ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 24: error: extra text after expected end of preprocessing directive\n      #pragma acc set device_type(acc_device_type_gpu) if (device_type == acc_device_type_default)\n                                                          ^\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 4: warning: variable \"async_var\" was declared but never referenced [declared_but_not_referenced]\n      int async_var = acc_async_default;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\", line 5: warning: variable \"device_num\" was declared but never referenced [declared_but_not_referenced]\n      int device_num = 0;\n          ^\n\n9 errors detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/set_directive.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1143717730010394
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "shutdown_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/shutdown_directive.c/shutdown_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/shutdown_directive.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.26499143200635444
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.007808815993485041,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "update_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/update_directive.c/update_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/update_directive.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/update_directive.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/update_directive.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16468710299523082
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "wait_clause.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/wait_clause.c/wait_clause.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_clause.c\", line 5: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_clause.c\".\nCompilation terminated.\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1646302950102836
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -DT1 -o /usa/jarmusch/Nvidia/OpenACCV-V/build/wait_clause.c/wait_clause.c1 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_clause.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_clause.c\", line 5: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_clause.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.21451813999738079
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "wait_directive.c": [
            {
                "compilation": {
                    "command": "nvc -acc=gpu -Minfo=all -lm -o /usa/jarmusch/Nvidia/OpenACCV-V/build/wait_directive.c/wait_directive.c0 /usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_directive.c",
                    "config": 1,
                    "errors": "\"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_directive.c\", line 4: catastrophic error: cannot open source file \"acc_runtime.h\"\n  #include <acc_runtime.h>\n                          ^\n\n1 catastrophic error detected in the compilation of \"/usa/jarmusch/Nvidia/OpenACCV-V/Tests/wait_directive.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16461736999917775
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ]
    },
    "summary": {
        "1": {
            "1": {
                "1": {
                    "acc_hostptr.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_wait.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "declare_directive.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "loop_construct_seq_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "parallel_construct.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "wait_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    }
                }
            }
        }
    },
    "systems": [
        {
            "id": 1,
            "machine": "x86_64",
            "name": null,
            "node": "leia",
            "processor": "x86_64",
            "release": "5.15.0-82-generic",
            "version": "#91-Ubuntu SMP Mon Aug 14 14:14:14 UTC 2023"
        }
    ],
    "testsuites": [
        {
            "acc_attach.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_copyin.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_copyout.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_delete.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_detach.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_deviceptr.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_free.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_get_default_async.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_get_device_num.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_get_device_type.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_get_num_devices.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_get_property.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_hostptr.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:kernels,data,data-region,V:1.0-2.7\nint test1(){\n    int err = 0;\n    srand(SEED);\n    real_t * a = (real_t *)malloc(n * sizeof(real_t));\n    real_t * b = (real_t *)malloc(n * sizeof(real_t));\n\n    for (int x = 0; x < n; ++x){\n        a[x] = rand() / (real_t)(RAND_MAX / 10);\n        b[x] = 0;\n    }\n\n    #pragma acc data copyin(a[0:n])\n    {\n        #pragma acc kernels copyout(b[0:n])\n        {\n            #pragma acc loop\n            for (int x = 0; x < n; ++x){\n                b[x] = a[x];\n            }\n        }\n    }\n\n    for (int x = 0; x < n; ++x){\n        if (fabs(b[x] - a[x]) > PRECISION){\n            err += 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "kernels",
                            "data",
                            "data-region"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_init.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "acc_is_present.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_malloc.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_map_data.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_memcpy_device.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "acc_memcpy_from_device.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_memcpy_to_device.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_on_device.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_set_default_async.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_set_device_type.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_shutdown.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_unmap_data.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_update_device.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_update_self.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "acc_wait.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:kernels,data,data-region,V:1.0-2.7\nint test1(){\n    int err = 0;\n    srand(SEED);\n    real_t * a = (real_t *)malloc(n * sizeof(real_t));\n    real_t * b = (real_t *)malloc(n * sizeof(real_t));\n\n    for (int x = 0; x < n; ++x){\n        a[x] = rand() / (real_t)(RAND_MAX / 10);\n        b[x] = 0;\n    }\n\n    #pragma acc data copyin(a[0:n])\n    {\n        #pragma acc kernels copyout(b[0:n])\n        {\n            #pragma acc loop\n            for (int x = 0; x < n; ++x){\n                b[x] = a[x];\n            }\n        }\n    }\n\n    #pragma acc wait(b[0:n])\n\n    for (int x = 0; x < n; ++x){\n        if (fabs(b[x] - a[x]) > PRECISION){\n            err += 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "kernels",
                            "data",
                            "data-region"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_wait_any.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_wait_async.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "async_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "atomic_construct.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "attachment_counter.c": {
                "num tests": 0,
                "tests": {}
            },
            "cache_directive.c": {
                "num tests": 0,
                "tests": {}
            },
            "combined_constucts.c": {
                "num tests": 0,
                "tests": {}
            },
            "compute_construct_async_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "compute_construct_default_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x) {\n        failed = failed + test1();\n    }\n    if (failed != 0) {\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "compute_construct_firstprivate_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "compute_construct_if_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "compute_construct_num_gangs_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "compute_construct_num_workersclause.c": {
                "num tests": 0,
                "tests": {}
            },
            "compute_construct_private_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "compute_construct_reduction_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "compute_construct_self_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "compute_construct_vector_length_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "compute_construct_wait_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_construct.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_construct_attach_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_construct_copy_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_construct_copyin_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_construct_copyout_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_construct_delete_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_construct_detach_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_construct_no_create_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "data_deviceptr_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "declare_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:kernels,data,data-region,V:1.0-2.7\nint test1(){\n    int err = 0;\n    srand(SEED);\n    real_t * a = (real_t *)malloc(n * sizeof(real_t));\n    real_t * b = (real_t *)malloc(n * sizeof(real_t));\n\n    for (int x = 0; x < n; ++x){\n        a[x] = rand() / (real_t)(RAND_MAX / 10);\n        b[x] = 0;\n    }\n\n    #pragma acc declare copyin(a[0:n])\n    {\n        #pragma acc kernels copyout(b[0:n])\n        {\n            #pragma acc loop\n            for (int x = 0; x < n; ++x){\n                b[x] = a[x];\n            }\n        }\n    }\n\n    for (int x = 0; x < n; ++x){\n        if (fabs(b[x] - a[x]) > PRECISION){\n            err += 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "kernels",
                            "data",
                            "data-region"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "declare_directive_create_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "declare_directive_device_resident_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "declare_directive_link_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "enter_data_directive.c": {
                "num tests": 0,
                "tests": {}
            },
            "exit_data_directive.c": {
                "num tests": 0,
                "tests": {}
            },
            "host_data_construct_if_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "host_data_construct_if_present_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "host_data_construct_use_device_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "id": 1,
            "init_directive.c": {
                "num tests": 0,
                "tests": {}
            },
            "kernels_construct.c": {
                "num tests": 0,
                "tests": {}
            },
            "loop_construct_auto_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "loop_construct_collapse_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "loop_construct_device_type_clause.c": {
                "num tests": 1,
                "tests": {
                    "2": {
                        "content": "#ifndef T2\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test2();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 1);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "loop_construct_gang_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "loop_construct_independent_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "loop_construct_private_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "loop_construct_reduction_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n// T1:kernels,data,data-region,V:1.0-2.7\nint test1(){\n    int err = 0;\n    srand(SEED);\n    real_t * a = (real_t *)malloc(n * sizeof(real_t));\n    real_t * b = (real_t *)malloc(n * sizeof(real_t));\n\n    for (int x = 0; x < n; ++x){\n        a[x] = rand() / (real_t)(RAND_MAX / 10);\n        b[x] = 0;\n    }\n\n    #pragma acc data copyin(a[0:n])\n    {\n        #pragma acc kernels copyout(b[0:n])\n        {\n            #pragma acc loop\n            for (int x = 0; x < n; ++x){\n                b[x] = a[x];\n            }\n        }\n    }\n\n    for (int x = 0; x < n; ++x){\n        if (fabs(b[x] - a[x]) > PRECISION){\n            err += 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "loop_construct_seq_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:kernels,data,data-region,V:1.0-2.7\nint test1(){\n    int err = 0;\n    srand(SEED);\n    real_t * a = (real_t *)malloc(n * sizeof(real_t));\n    real_t * b = (real_t *)malloc(n * sizeof(real_t));\n\n    for (int x = 0; x < n; ++x){\n        a[x] = rand() / (real_t)(RAND_MAX / 10);\n        b[x] = 0;\n    }\n\n    #pragma acc data copyin(a[0:n])\n    {\n        #pragma acc kernels copyout(b[0:n])\n        {\n            #pragma acc loop seq\n            for (int x = 0; x < n; ++x){\n                b[x] = a[x];\n            }\n        }\n    }\n\n    for (int x = 0; x < n; ++x){\n        if (fabs(b[x] - a[x]) > PRECISION){\n            err += 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "kernels",
                            "data",
                            "data-region"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "loop_construct_tile_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "loop_construct_vector_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "loop_construct_worker_clause.c": {
                "num tests": 0,
                "tests": {}
            },
            "parallel_construct.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:kernels,data,data-region,V:1.0-2.7\nint test1(){\n    int err = 0;\n    srand(SEED);\n    real_t * a = (real_t *)malloc(n * sizeof(real_t));\n    real_t * b = (real_t *)malloc(n * sizeof(real_t));\n\n    for (int x = 0; x < n; ++x){\n        a[x] = rand() / (real_t)(RAND_MAX / 10);\n        b[x] = 0;\n    }\n\n    #pragma acc parallel num_gangs(n) num_workers(n) vector_length(n)\n    {\n        #pragma acc kernels copyout(b[0:n])\n        {\n            #pragma acc loop\n            for (int x = 0; x < n; ++x){\n                b[x] = a[x];\n            }\n        }\n    }\n\n    for (int x = 0; x < n; ++x){\n        if (fabs(b[x] - a[x]) > PRECISION){\n            err += 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "kernels",
                            "data",
                            "data-region"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_construct.c": {
                "num tests": 0,
                "tests": {}
            },
            "set_directive.c": {
                "num tests": 0,
                "tests": {}
            },
            "shutdown_directive.c": {
                "num tests": 0,
                "tests": {}
            },
            "update_directive.c": {
                "num tests": 0,
                "tests": {}
            },
            "wait_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:kernels,data,data-region,V:1.0-2.7\nint test1(){\n    int err = 0;\n    srand(SEED);\n    real_t * a = (real_t *)malloc(n * sizeof(real_t));\n    real_t * b = (real_t *)malloc(n * sizeof(real_t));\n\n    for (int x = 0; x < n; ++x){\n        a[x] = rand() / (real_t)(RAND_MAX / 10);\n        b[x] = 0;\n    }\n\n    #pragma acc data copyin(a[0:n])\n    {\n        #pragma acc kernels copyout(b[0:n])\n        {\n            #pragma acc loop\n            for (int x = 0; x < n; ++x){\n                b[x] = a[x];\n            }\n        }\n    }\n\n    for (int x = 0; x < n; ++x){\n        if (fabs(b[x] - a[x]) > PRECISION){\n            err += 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "kernels",
                            "data",
                            "data-region"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "wait_directive.c": {
                "num tests": 0,
                "tests": {}
            }
        }
    ]
}