{
    "configs": [
        {
            "CC": "nvc",
            "CCFlags": [],
            "CC_ACC_Version": "2.7",
            "CPP": "",
            "CPPFlags": [],
            "CPP_ACC_Version": null,
            "FC": "",
            "FCFlags": [],
            "FC_ACC_Version": null,
            "PostCompileCommands": [],
            "PostRunCommands": [],
            "PreCompileCommands": [],
            "PreRunCommands": [],
            "build_dir": "/lustre/schandra_crpl/users/2802/vv/build",
            "config_id": -1,
            "config_name": "init_config.txt",
            "env": null,
            "exclude_tags": [],
            "exclude_tests": [
                "acc_testsuite.Fh",
                "acc_testsuite.h",
                "acc_testsuite_declare.h"
            ],
            "export_format": "json",
            "fast": false,
            "id": 1,
            "include_by_default": true,
            "include_tags": [],
            "include_tests": [],
            "keep_build_dir": false,
            "keep_mutated_tests": false,
            "keep_partial_results": false,
            "keep_policy": "on-error",
            "mutated_test_dir": "/lustre/schandra_crpl/users/2802/vv/build/mutated_tests",
            "mutators": [],
            "partial": false,
            "partial_results_dir": "/lustre/schandra_crpl/users/2802/vv/build/partial_results",
            "runAll": true,
            "runtime_prefix": "",
            "seed": null,
            "system_name": null,
            "tag_evaluation": null,
            "test_dir": "/lustre/schandra_crpl/users/2802/vv/Tests",
            "timeout": 10
        }
    ],
    "runs": {
        "acc_async_test.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_async_test.c/acc_async_test.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c\", line 14: warning: function \"acc_async_queue_create\" declared implicitly [implicit_func_decl]\n      async_queue = acc_async_queue_create(dev_num);\n                    ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c\", line 17: warning: function \"acc_async_operation_create\" declared implicitly [implicit_func_decl]\n      acc_async_operation_create(async_queue, wait_arg);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c\", line 20: warning: function \"acc_async_test\" declared implicitly [implicit_func_decl]\n      if (acc_async_test(wait_arg) == 0) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c\", line 26: warning: function \"acc_async_queue_destroy\" declared implicitly [implicit_func_decl]\n      acc_async_queue_destroy(async_queue);\n      ^\n\n/tmp/nvcha_Av1JPMbat.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c:14: undefined reference to `acc_async_queue_create'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c:17: undefined reference to `acc_async_operation_create'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c:26: undefined reference to `acc_async_queue_destroy'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.41761922650039196
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_async_test.c/acc_async_test.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_async_test.c\", line 34: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16859520506113768
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019474618136882782,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_attach.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_attach.c/acc_attach.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_attach.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_attach.c\", line 13: warning: function \"acc_attach\" declared implicitly [implicit_func_decl]\n      acc_attach(&host_ptr);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_attach.c\", line 16: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *device_ptr = (int *)acc_malloc(sizeof(int));\n                               ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_attach.c\", line 20: warning: function \"acc_detach\" declared implicitly [implicit_func_decl]\n      acc_detach(&host_ptr);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_attach.c\", line 28: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(device_ptr);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4178347047418356
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.020160489715635777,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyin.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_copyin.c/acc_copyin.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_copyin.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_copyin.c\", line 15: warning: function \"acc_copyin\" declared implicitly [implicit_func_decl]\n      int *device_data = (int *)acc_copyin(host_data, sizeof(int) * 10);\n                                ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21673970576375723
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0198261309415102,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_copyout.c/acc_copyout.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_copyout.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_copyout.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *device_data = (int *)acc_malloc(sizeof(int));\n                                ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_copyout.c\", line 13: warning: function \"acc_copyin\" declared implicitly [implicit_func_decl]\n      acc_copyin(device_data, &host_data, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_copyout.c\", line 17: warning: function \"acc_copyout\" declared implicitly [implicit_func_decl]\n      acc_copyout(host_data_copy, device_data, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_copyout.c\", line 25: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(device_data);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.5175530835986137
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.020120909437537193,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_create.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_create.c/acc_create.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_create.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_create.c\", line 9: warning: function \"acc_create\" declared implicitly [implicit_func_decl]\n      void *dev_ptr = acc_create(NULL, 1024);\n                      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_create.c\", line 9: warning: a value of type \"int\" cannot be used to initialize an entity of type \"void *\" [bad_initializer_type]\n      void *dev_ptr = acc_create(NULL, 1024);\n                      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_create.c\", line 15: warning: function \"acc_is_present\" declared implicitly [implicit_func_decl]\n      if (acc_is_present(dev_ptr, 1024) != 1) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_create.c\", line 20: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(dev_ptr);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16762688662856817
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.009278049692511559,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_delete.c/acc_delete.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_delete.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_delete.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      void *data = acc_malloc(1024);\n                   ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_delete.c\", line 9: warning: a value of type \"int\" cannot be used to initialize an entity of type \"void *\" [bad_initializer_type]\n      void *data = acc_malloc(1024);\n                   ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_delete.c\", line 12: warning: function \"acc_copyin\" declared implicitly [implicit_func_decl]\n      acc_copyin(data, 1024);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_delete.c\", line 15: warning: function \"acc_delete\" declared implicitly [implicit_func_decl]\n      acc_delete(data, 1024);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_delete.c\", line 18: warning: function \"acc_is_present\" declared implicitly [implicit_func_decl]\n      if (acc_is_present(data, 1024) != 0) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_delete.c\", line 23: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(data);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.8198653561994433
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.02018817327916622,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_detach.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_detach.c/acc_detach.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c\", line 8: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *device_ptr = (int *)acc_malloc(sizeof(int));\n                               ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c\", line 11: warning: function \"acc_attach\" declared implicitly [implicit_func_decl]\n      acc_attach(host_ptr, device_ptr);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c\", line 14: warning: function \"acc_detach\" declared implicitly [implicit_func_decl]\n      acc_detach(host_ptr);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c\", line 17: warning: function \"acc_is_attached\" declared implicitly [implicit_func_decl]\n      if (acc_is_attached(host_ptr, device_ptr) != 0) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c\", line 22: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(device_ptr);\n      ^\n\n/tmp/nvcV0_An1JxcuKA.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c:17: undefined reference to `acc_is_attached'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.21820584125816822
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_detach.c/acc_detach.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_detach.c\", line 33: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2182814022526145
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019701319746673107,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_deviceptr.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_deviceptr.c/acc_deviceptr.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_deviceptr.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_deviceptr.c\", line 17: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *device_array = (int *)acc_malloc(10 * sizeof(int));\n                                 ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_deviceptr.c\", line 20: warning: function \"acc_memcpy\" declared implicitly [implicit_func_decl]\n      acc_memcpy(device_array, host_array, 10 * sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_deviceptr.c\", line 23: warning: function \"acc_deviceptr\" declared implicitly [implicit_func_decl]\n      int *device_ptr = (int *)acc_deviceptr(device_array);\n                               ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_deviceptr.c\", line 36: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(device_array);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1662940913811326
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019379591569304466,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_free.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_free.c/acc_free.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_free.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_free.c\", line 8: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      void *data_dev = acc_malloc(100);\n                       ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_free.c\", line 8: warning: a value of type \"int\" cannot be used to initialize an entity of type \"void *\" [bad_initializer_type]\n      void *data_dev = acc_malloc(100);\n                       ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_free.c\", line 11: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(data_dev);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2162734093144536
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.019749481230974197,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_default_async.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_default_async.c/acc_get_default_async.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_default_async.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_default_async.c\", line 9: warning: function \"acc_set_default_async\" declared implicitly [implicit_func_decl]\n      acc_set_default_async(acc_async_noval);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_default_async.c\", line 9: error: identifier \"acc_async_noval\" is undefined\n      acc_set_default_async(acc_async_noval);\n                            ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_default_async.c\", line 12: warning: function \"acc_get_default_async\" declared implicitly [implicit_func_decl]\n      int default_async = acc_get_default_async();\n                          ^\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_default_async.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.168143174611032
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_default_async.c/acc_get_default_async.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_default_async.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_default_async.c\", line 25: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1677165888249874
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019662179052829742,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_device_num.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_device_num.c/acc_get_device_num.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_num.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_num.c\", line 9: error: identifier \"acc_device_t\" is undefined\n      acc_device_t dev_type = acc_device_default;\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_num.c\", line 9: error: identifier \"acc_device_default\" is undefined\n      acc_device_t dev_type = acc_device_default;\n                              ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_num.c\", line 12: warning: function \"acc_get_device_num\" declared implicitly [implicit_func_decl]\n      int device_num = acc_get_device_num(dev_type);\n                       ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n2 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_num.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11700898874551058
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_device_num.c/acc_get_device_num.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_num.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_num.c\", line 25: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21776858530938625
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019817492924630642,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_device_type.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_device_type.c/acc_get_device_type.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_type.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_type.c\", line 9: warning: function \"acc_set_device_type\" declared implicitly [implicit_func_decl]\n      acc_set_device_type(ACC_DEVICE_TYPE_GPU);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_type.c\", line 9: error: identifier \"ACC_DEVICE_TYPE_GPU\" is undefined\n      acc_set_device_type(ACC_DEVICE_TYPE_GPU);\n                          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_type.c\", line 12: error: identifier \"acc_device_t\" is undefined\n      acc_device_t device_type = acc_get_device_type();\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_type.c\", line 12: warning: function \"acc_get_device_type\" declared implicitly [implicit_func_decl]\n      acc_device_t device_type = acc_get_device_type();\n                                 ^\n\n2 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_type.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11686942726373672
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_device_type.c/acc_get_device_type.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_type.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_device_type.c\", line 23: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16685004718601704
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019731846638023853,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_num_devices.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_num_devices.c/acc_get_num_devices.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_num_devices.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_num_devices.c\", line 9: warning: function \"acc_get_num_devices\" declared implicitly [implicit_func_decl]\n      int num_devices = acc_get_num_devices(acc_device_host);\n                        ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_num_devices.c\", line 9: error: identifier \"acc_device_host\" is undefined\n      int num_devices = acc_get_num_devices(acc_device_host);\n                                            ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_num_devices.c\", line 17: error: identifier \"acc_device_nvidia\" is undefined\n      num_devices = acc_get_num_devices(acc_device_nvidia);\n                                        ^\n\n2 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_num_devices.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11629280541092157
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_num_devices.c/acc_get_num_devices.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_num_devices.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_num_devices.c\", line 30: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21775074303150177
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01985711231827736,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_property.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_property.c/acc_get_property.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 8: warning: function \"acc_get_device_type\" declared implicitly [implicit_func_decl]\n      int dev_type = acc_get_device_type();\n                     ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 9: warning: function \"acc_get_device_number\" declared implicitly [implicit_func_decl]\n      int dev_num = acc_get_device_number();\n                    ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 12: warning: function \"acc_get_property\" declared implicitly [implicit_func_decl]\n      size_t mem_size = acc_get_property(dev_num, dev_type, acc_property_memory);\n                        ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 12: error: identifier \"acc_property_memory\" is undefined\n      size_t mem_size = acc_get_property(dev_num, dev_type, acc_property_memory);\n                                                            ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 13: error: identifier \"acc_property_free_memory\" is undefined\n      size_t free_mem_size = acc_get_property(dev_num, dev_type, acc_property_free_memory);\n                                                                 ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 21: warning: function \"acc_get_property_string\" declared implicitly [implicit_func_decl]\n      const char* name = acc_get_property_string(dev_num, dev_type, acc_property_name);\n                         ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 21: error: identifier \"acc_property_name\" is undefined\n      const char* name = acc_get_property_string(dev_num, dev_type, acc_property_name);\n                                                                    ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 21: warning: a value of type \"int\" cannot be used to initialize an entity of type \"const char *\" [bad_initializer_type]\n      const char* name = acc_get_property_string(dev_num, dev_type, acc_property_name);\n                         ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 22: error: identifier \"acc_property_vendor\" is undefined\n      const char* vendor = acc_get_property_string(dev_num, dev_type, acc_property_vendor);\n                                                                      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 22: warning: a value of type \"int\" cannot be used to initialize an entity of type \"const char *\" [bad_initializer_type]\n      const char* vendor = acc_get_property_string(dev_num, dev_type, acc_property_vendor);\n                           ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 23: error: identifier \"acc_property_driver\" is undefined\n      const char* driver_version = acc_get_property_string(dev_num, dev_type, acc_property_driver);\n                                                                              ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 23: warning: a value of type \"int\" cannot be used to initialize an entity of type \"const char *\" [bad_initializer_type]\n      const char* driver_version = acc_get_property_string(dev_num, dev_type, acc_property_driver);\n                                   ^\n\n5 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11649289727210999
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_get_property.c/acc_get_property.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_get_property.c\", line 36: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16755129117518663
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019661834463477135,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_init.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_init.c/acc_init.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_init.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_init.c\", line 9: warning: function \"acc_init\" declared implicitly [implicit_func_decl]\n      acc_init(ACC_DEVICE_TYPE_GPU, 0);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_init.c\", line 9: error: identifier \"ACC_DEVICE_TYPE_GPU\" is undefined\n      acc_init(ACC_DEVICE_TYPE_GPU, 0);\n               ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_init.c\", line 15: warning: function \"acc_shutdown\" declared implicitly [implicit_func_decl]\n      acc_shutdown(ACC_DEVICE_TYPE_GPU, 0);\n      ^\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_init.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11709427367895842
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_init.c/acc_init.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_init.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_init.c\", line 23: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16675563901662827
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0188217144459486,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_is_present.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_is_present.c/acc_is_present.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_is_present.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_is_present.c\", line 17: warning: function \"acc_is_present\" declared implicitly [implicit_func_decl]\n      if (acc_is_present(data, sizeof(int) * 10) == 0) {\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_is_present.c\", line 19: warning: function \"acc_copyin\" declared implicitly [implicit_func_decl]\n          acc_copyin(data, sizeof(int) * 10);\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_is_present.c\", line 23: warning: function \"acc_is_present\" declared implicitly [implicit_func_decl]\n      if (acc_is_present(data, sizeof(int) * 10) == 0) {\n          ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1679079020395875
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009178291074931622,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_malloc.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_malloc.c/acc_malloc.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_malloc.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_malloc.c\", line 9: error: identifier \"d_void\" is undefined\n      d_void* ptr = acc_malloc(1024);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_malloc.c\", line 9: error: identifier \"ptr\" is undefined\n      d_void* ptr = acc_malloc(1024);\n              ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_malloc.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      d_void* ptr = acc_malloc(1024);\n                    ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_malloc.c\", line 21: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n          acc_free(ptr);\n          ^\n\n2 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_malloc.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11512831132858992
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_malloc.c/acc_malloc.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_malloc.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_malloc.c\", line 30: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16762702073901892
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019652425311505795,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_map_data.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_map_data.c/acc_map_data.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_map_data.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_map_data.c\", line 12: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      void *device_ptr = acc_malloc(1024);\n                         ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_map_data.c\", line 12: warning: a value of type \"int\" cannot be used to initialize an entity of type \"void *\" [bad_initializer_type]\n      void *device_ptr = acc_malloc(1024);\n                         ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_map_data.c\", line 15: warning: function \"acc_map_data\" declared implicitly [implicit_func_decl]\n      acc_map_data(host_ptr, device_ptr, 1024);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_map_data.c\", line 18: warning: function \"acc_is_present\" declared implicitly [implicit_func_decl]\n      if (acc_is_present(host_ptr, 1024) != 1) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_map_data.c\", line 23: warning: function \"acc_unmap_data\" declared implicitly [implicit_func_decl]\n      acc_unmap_data(host_ptr, device_ptr, 1024);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_map_data.c\", line 26: warning: function \"acc_is_present\" declared implicitly [implicit_func_decl]\n      if (acc_is_present(host_ptr, 1024) != 0) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_map_data.c\", line 31: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(device_ptr);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16645855735987425
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.0197057006880641,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_memcpy_d2d.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_memcpy_d2d.c/acc_memcpy_d2d.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_d2d.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_d2d.c\", line 19: warning: function \"acc_memcpy_d2d\" declared implicitly [implicit_func_decl]\n      acc_memcpy_d2d(data_arg_dest, data_arg_src, bytes, dev_num_dest, dev_num_src);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_d2d.c\", line 8: warning: variable \"async_arg_src\" was declared but never referenced [declared_but_not_referenced]\n      int async_arg_src = 0;\n          ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16749438550323248
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019652752205729485,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_memcpy_device.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_memcpy_device.c/acc_memcpy_device.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      void *data_dev_src = acc_malloc(1024);\n                           ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 9: warning: a value of type \"int\" cannot be used to initialize an entity of type \"void *\" [bad_initializer_type]\n      void *data_dev_src = acc_malloc(1024);\n                           ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 10: warning: a value of type \"int\" cannot be used to initialize an entity of type \"void *\" [bad_initializer_type]\n      void *data_dev_dest = acc_malloc(1024);\n                            ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 13: warning: function \"acc_memcpy_device\" declared implicitly [implicit_func_decl]\n      acc_memcpy_device(data_dev_src, \"Hello, world!\", 13);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 19: warning: function \"acc_malloc_host\" declared implicitly [implicit_func_decl]\n      char *data_host = (char *)acc_malloc_host(1024);\n                                ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 20: warning: function \"acc_memcpy_host\" declared implicitly [implicit_func_decl]\n      acc_memcpy_host(data_host, data_dev_dest, 13);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 26: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(data_dev_src);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 28: warning: function \"acc_free_host\" declared implicitly [implicit_func_decl]\n      acc_free_host(data_host);\n      ^\n\n/tmp/nvcbYaBdFS7qH6N.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c:19: undefined reference to `acc_malloc_host'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c:20: undefined reference to `acc_memcpy_host'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c:28: undefined reference to `acc_free_host'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1665032198652625
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_memcpy_device.c/acc_memcpy_device.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_device.c\", line 36: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16801666654646397
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019650764763355255,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_memcpy_from_device.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_memcpy_from_device.c/acc_memcpy_from_device.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_from_device.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_from_device.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      void *data_dev_src = acc_malloc(1024);\n                           ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_from_device.c\", line 9: warning: a value of type \"int\" cannot be used to initialize an entity of type \"void *\" [bad_initializer_type]\n      void *data_dev_src = acc_malloc(1024);\n                           ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_from_device.c\", line 18: warning: function \"acc_memcpy_from_device\" declared implicitly [implicit_func_decl]\n      acc_memcpy_from_device(data_host_dest, data_dev_src, 1024);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_from_device.c\", line 28: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(data_dev_src);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21709225792437792
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.019780478440225124,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_memcpy_to_device.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_memcpy_to_device.c/acc_memcpy_to_device.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_to_device.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_to_device.c\", line 4: catastrophic error: cannot open source file \"acc_testsuite.h\"\n  #include <acc_testsuite.h>\n                            ^\n\n1 catastrophic error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_memcpy_to_device.c\".\nCompilation terminated.\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1177622526884079
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_on_device.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_on_device.c/acc_on_device.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_on_device.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_on_device.c\", line 9: warning: function \"acc_on_device\" declared implicitly [implicit_func_decl]\n      if (acc_on_device(acc_device_host) == 1) {\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_on_device.c\", line 9: error: identifier \"acc_device_host\" is undefined\n      if (acc_on_device(acc_device_host) == 1) {\n                        ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_on_device.c\", line 11: error: identifier \"acc_device_not_host\" is undefined\n          if (acc_on_device(acc_device_not_host) == 0) {\n                            ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_on_device.c\", line 17: error: identifier \"acc_device_not_host\" is undefined\n          if (acc_on_device(acc_device_not_host) == 1) {\n                            ^\n\n3 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_on_device.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11740406416356564
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_on_device.c/acc_on_device.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_on_device.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_on_device.c\", line 29: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21776217967271805
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019917087629437447,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_set_default_async.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_set_default_async.c/acc_set_default_async.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_set_default_async.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_default_async.c\", line 9: warning: function \"acc_set_default_async\" declared implicitly [implicit_func_decl]\n      acc_set_default_async(1);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_default_async.c\", line 18: warning: function \"acc_get_async_queue\" declared implicitly [implicit_func_decl]\n      if (acc_get_async_queue() != 1) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_default_async.c\", line 23: error: identifier \"acc_async_default\" is undefined\n      acc_set_default_async(acc_async_default);\n                            ^\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_default_async.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11774451564997435
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_set_default_async.c/acc_set_default_async.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_set_default_async.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_default_async.c\", line 31: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21779927052557468
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019726836122572422,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_set_device_num.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_set_device_num.c/acc_set_device_num.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_num.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_num.c\", line 9: warning: function \"acc_set_device_type\" declared implicitly [implicit_func_decl]\n      acc_set_device_type(ACC_DEVICE_TYPE_CPU);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_num.c\", line 9: error: identifier \"ACC_DEVICE_TYPE_CPU\" is undefined\n      acc_set_device_type(ACC_DEVICE_TYPE_CPU);\n                          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_num.c\", line 12: warning: function \"acc_set_device_num\" declared implicitly [implicit_func_decl]\n      acc_set_device_num(0, ACC_DEVICE_TYPE_CPU);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_num.c\", line 15: warning: function \"acc_get_device_num\" declared implicitly [implicit_func_decl]\n      if (acc_get_device_num() != 0) {\n          ^\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_num.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11638811510056257
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_set_device_num.c/acc_set_device_num.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_num.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_num.c\", line 25: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16761946771293879
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019658026285469532,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_set_device_type.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_set_device_type.c/acc_set_device_type.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_type.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_type.c\", line 9: warning: function \"acc_set_device_type\" declared implicitly [implicit_func_decl]\n      acc_set_device_type(ACC_DEVICE_GPU);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_type.c\", line 9: error: identifier \"ACC_DEVICE_GPU\" is undefined\n      acc_set_device_type(ACC_DEVICE_GPU);\n                          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_type.c\", line 23: error: identifier \"ACC_DEVICE_CPU\" is undefined\n      acc_set_device_type(ACC_DEVICE_CPU);\n                          ^\n\n2 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_type.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11643472127616405
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_set_device_type.c/acc_set_device_type.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_type.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_set_device_type.c\", line 42: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16758154425770044
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019636872224509716,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_shutdown.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_shutdown.c/acc_shutdown.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c\", line 9: error: identifier \"acc_device_t\" is undefined\n      acc_device_t dev_type = acc_device_default;\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c\", line 9: error: identifier \"acc_device_default\" is undefined\n      acc_device_t dev_type = acc_device_default;\n                              ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c\", line 11: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *data = (int *)acc_malloc(sizeof(int) * 10);\n                         ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c\", line 14: warning: function \"acc_shutdown\" declared implicitly [implicit_func_decl]\n      acc_shutdown(dev_type);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c\", line 17: warning: function \"acc_deviceptr\" declared implicitly [implicit_func_decl]\n      int *data_ptr = (int *)acc_deviceptr(data, dev_num);\n                             ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c\", line 23: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(data);\n      ^\n\n2 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11767796706408262
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_shutdown.c/acc_shutdown.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_shutdown.c\", line 31: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16525555402040482
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01965387910604477,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_unmap_data.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_unmap_data.c/acc_unmap_data.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_unmap_data.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_unmap_data.c\", line 13: warning: function \"acc_map_data\" declared implicitly [implicit_func_decl]\n      int *device_data = (int*)acc_map_data(host_data, sizeof(int));\n                               ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_unmap_data.c\", line 16: warning: function \"acc_unmap_data\" declared implicitly [implicit_func_decl]\n      acc_unmap_data(device_data);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_unmap_data.c\", line 19: warning: function \"acc_is_mapped\" declared implicitly [implicit_func_decl]\n      if (acc_is_mapped(device_data) != 0) {\n          ^\n\n/tmp/nvcM9bBYLpSpv-J.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_unmap_data.c:19: undefined reference to `acc_is_mapped'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1666497653350234
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_unmap_data.c/acc_unmap_data.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_unmap_data.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_unmap_data.c\", line 32: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16804499085992575
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01970168575644493,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_device.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_update_device.c/acc_update_device.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_update_device.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_update_device.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *shared_data = (int *)acc_malloc(sizeof(int));\n                                ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_update_device.c\", line 17: warning: function \"acc_update_device\" declared implicitly [implicit_func_decl]\n      acc_update_device(shared_data, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_update_device.c\", line 25: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(shared_data);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21767963282763958
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.01980567444115877,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_self.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_update_self.c/acc_update_self.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_update_self.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_update_self.c\", line 15: warning: function \"acc_update_self\" declared implicitly [implicit_func_decl]\n      acc_update_self(data_arg, bytes);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.218163026496768
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019802062772214413,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_wait.c/acc_wait.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c\", line 9: warning: function \"acc_async_queue\" declared implicitly [implicit_func_decl]\n      int async_queue = acc_async_queue();\n                        ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c\", line 12: warning: function \"acc_device_num\" declared implicitly [implicit_func_decl]\n      int dev_num = acc_device_num();\n                    ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c\", line 30: warning: function \"acc_wait\" declared implicitly [implicit_func_decl]\n          acc_wait(async_queue);\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c\", line 42: warning: function \"acc_async_queue_destroy\" declared implicitly [implicit_func_decl]\n      acc_async_queue_destroy(async_queue);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c\", line 15: warning: variable \"data\" was declared but never referenced [declared_but_not_referenced]\n      int data[10];\n          ^\n\n/tmp/nvc8AcB0IOO5t4I.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c:9: undefined reference to `acc_async_queue'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c:12: undefined reference to `acc_device_num'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c:42: undefined reference to `acc_async_queue_destroy'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16744020581245422
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_wait.c/acc_wait.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait.c\", line 50: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1656452463939786
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01894382666796446,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait_any.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_wait_any.c/acc_wait_any.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_any.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_any.c\", line 10: error: identifier \"acc_async_sync\" is undefined\n      async_queues[0] = acc_async_sync;\n                        ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_any.c\", line 40: warning: function \"acc_wait_any\" declared implicitly [implicit_func_decl]\n      int index = acc_wait_any(2, async_queues);\n                  ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_any.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11672969814389944
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_wait_any.c/acc_wait_any.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_any.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_any.c\", line 53: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2176678692921996
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019795824773609638,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait_async.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/acc_wait_async.c/acc_wait_async.c0 /lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c\", line 9: warning: function \"acc_async_queue_create\" declared implicitly [implicit_func_decl]\n      int async_queue = acc_async_queue_create();\n                        ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c\", line 15: warning: function \"acc_wait_async\" declared implicitly [implicit_func_decl]\n      acc_wait_async(wait_arg, async_queue);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c\", line 18: warning: function \"acc_async_queue_empty\" declared implicitly [implicit_func_decl]\n      if (acc_async_queue_empty(async_queue)) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c\", line 23: warning: function \"acc_async_queue_destroy\" declared implicitly [implicit_func_decl]\n      acc_async_queue_destroy(async_queue);\n      ^\n\n/tmp/nvciYcByFb3rMEA.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c:9: undefined reference to `acc_async_queue_create'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c:12: undefined reference to `acc_async_queue_create'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c:15: undefined reference to `acc_wait_async'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c:18: undefined reference to `acc_async_queue_empty'\n/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c:23: undefined reference to `acc_async_queue_destroy'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.21793310344219208
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/acc_wait_async.c/acc_wait_async.c1 /lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/acc_wait_async.c\", line 31: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2185012698173523
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019798911176621914,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "async_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/async_clause.c/async_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/async_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16610632464289665
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009228101931512356,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_construct.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/atomic_construct.c/atomic_construct.c0 /lustre/schandra_crpl/users/2802/vv/Tests/atomic_construct.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/atomic_construct.c\", line 8: warning: variable \"v\" was set but never used [set_but_not_used]\n      int v = 0;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1652183337137103
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019657068885862827,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "attachment_counter.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/attachment_counter.c/attachment_counter.c0 /lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int* ptr = (int*)acc_malloc(sizeof(int));\n                       ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c\", line 12: warning: function \"acc_attach\" declared implicitly [implicit_func_decl]\n      acc_attach(ptr, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c\", line 18: warning: function \"acc_detach\" declared implicitly [implicit_func_decl]\n      acc_detach(ptr);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c\", line 24: warning: function \"acc_get_attachment_counter\" declared implicitly [implicit_func_decl]\n      if (acc_get_attachment_counter(ptr) != 0) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c\", line 29: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(ptr);\n      ^\n\n/tmp/nvcFpdBDXkko_FX.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c:24: undefined reference to `acc_get_attachment_counter'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.2666763812303543
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/attachment_counter.c/attachment_counter.c1 /lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/attachment_counter.c\", line 37: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21849673334509134
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019788694567978382,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "cache_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/cache_directive.c/cache_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/cache_directive.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16789277270436287
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009210769087076187,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "combined_constucts.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/combined_constucts.c/combined_constucts.c0 /lustre/schandra_crpl/users/2802/vv/Tests/combined_constucts.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/combined_constucts.c\", line 17: error: identifier \"sum\" is undefined\n          sum += data[i];\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/combined_constucts.c\", line 23: error: identifier \"sum\" is undefined\n          sum += data[i];\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/combined_constucts.c\", line 29: error: identifier \"sum\" is undefined\n          sum += data[i];\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/combined_constucts.c\", line 33: error: identifier \"sum\" is undefined\n      if (sum != 4950) {\n          ^\n\n4 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/combined_constucts.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11508797574788332
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/combined_constucts.c/combined_constucts.c1 /lustre/schandra_crpl/users/2802/vv/Tests/combined_constucts.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/combined_constucts.c\", line 43: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21772725600749254
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019770394079387188,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_async_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_async_clause.c/compute_construct_async_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_async_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1667590644210577
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019638393074274063,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_default_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_default_clause.c/compute_construct_default_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_default_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21660207957029343
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019732387736439705,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_firstprivate_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_firstprivate_clause.c/compute_construct_firstprivate_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_firstprivate_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16659491695463657
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.019222392700612545,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_if_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_if_clause.c/compute_construct_if_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_if_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_if_clause.c\", line 9: warning: variable \"condition\" was declared but never referenced [declared_but_not_referenced]\n      int condition = 0;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1675709169358015
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.018406367860734463,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_num_gangs_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_num_gangs_clause.c/compute_construct_num_gangs_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_num_gangs_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1666197944432497
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.018993444740772247,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_num_workersclause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_num_workersclause.c/compute_construct_num_workersclause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_num_workersclause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_num_workersclause.c\", line 19: warning: function \"acc_get_num_workers\" declared implicitly [implicit_func_decl]\n      if (acc_get_num_workers() != 4) {\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n/tmp/nvcfxeBpVIlMDXs.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_num_workersclause.c:19: undefined reference to `acc_get_num_workers'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16691237967461348
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_num_workersclause.c/compute_construct_num_workersclause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_num_workersclause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_num_workersclause.c\", line 29: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16568111535161734
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019764925353229046,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_private_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_private_clause.c/compute_construct_private_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_private_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_private_clause.c\", line 23: error: identifier \"x\" is undefined\n      if (x != 0 || y != 0 || z != 0) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_private_clause.c\", line 23: error: identifier \"y\" is undefined\n      if (x != 0 || y != 0 || z != 0) {\n                    ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_private_clause.c\", line 23: error: identifier \"z\" is undefined\n      if (x != 0 || y != 0 || z != 0) {\n                              ^\n\n3 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_private_clause.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11594310402870178
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_private_clause.c/compute_construct_private_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_private_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_private_clause.c\", line 33: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16748294048011303
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019634286873042583,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_reduction_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_reduction_clause.c/compute_construct_reduction_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_reduction_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21798261906951666
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01989900041371584,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_self_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_self_clause.c/compute_construct_self_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_self_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1668883441016078
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009207211434841156,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_vector_length_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_vector_length_clause.c/compute_construct_vector_length_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_vector_length_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_vector_length_clause.c\", line 21: warning: function \"acc_get_vector_length\" declared implicitly [implicit_func_decl]\n          int vector_length = acc_get_vector_length();\n                              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n/tmp/nvcc-eBgUrKt0Fk.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_vector_length_clause.c:21: undefined reference to `acc_get_vector_length'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1674958597868681
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_vector_length_clause.c/compute_construct_vector_length_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_vector_length_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_vector_length_clause.c\", line 33: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16571662202477455
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01978460792452097,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "compute_construct_wait_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/compute_construct_wait_clause.c/compute_construct_wait_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/compute_construct_wait_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16764106508344412
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009407507255673409,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct.c/data_construct.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c\", line 10: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      acc_malloc(a, sizeof(int));\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c\", line 10: warning: variable \"a\" is used before its value is set [used_before_set]\n      acc_malloc(a, sizeof(int));\n                 ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c\", line 13: warning: function \"acc_copyin\" declared implicitly [implicit_func_decl]\n      acc_copyin(a, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c\", line 16: warning: function \"acc_parallel\" declared implicitly [implicit_func_decl]\n      acc_parallel(a, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c\", line 19: warning: function \"acc_copyout\" declared implicitly [implicit_func_decl]\n      acc_copyout(a, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c\", line 22: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(a);\n      ^\n\n/tmp/nvc3vfBL_ry2RgW.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c:16: undefined reference to `acc_parallel'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1664016516879201
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/data_construct.c/data_construct.c1 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct.c\", line 30: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21820736955851316
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01979165803641081,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_attach_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_attach_clause.c/data_construct_attach_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_attach_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_attach_clause.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *shared_array = (int *)acc_malloc(sizeof(int) * 10);\n                                 ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_attach_clause.c\", line 15: warning: function \"acc_attach\" declared implicitly [implicit_func_decl]\n      acc_attach(non_shared_array, shared_array, sizeof(int) * 10);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_attach_clause.c\", line 23: warning: function \"acc_detach\" declared implicitly [implicit_func_decl]\n      acc_detach(non_shared_array, shared_array);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_attach_clause.c\", line 33: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(shared_array);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21805387176573277
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.019760502502322197,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_copy_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_copy_clause.c/data_construct_copy_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_copy_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2180212764069438
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019792751409113407,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_copyin_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_copyin_clause.c/data_construct_copyin_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_copyin_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_copyin_clause.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *shared_mem = (int *)acc_malloc(sizeof(int));\n                               ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_copyin_clause.c\", line 30: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(shared_mem);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2177317552268505
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019692618399858475,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_copyout_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_copyout_clause.c/data_construct_copyout_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_copyout_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21777342073619366
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019954037852585316,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_create_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_create_clause.c/data_construct_create_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 9: error: identifier \"acc_data_construct_t\" is undefined\n      acc_data_construct_t data_construct;\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 10: warning: function \"acc_data_construct_init\" declared implicitly [implicit_func_decl]\n      acc_data_construct_init(&data_construct, NULL, 0, 0);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 16: warning: function \"acc_data_construct_add_variable\" declared implicitly [implicit_func_decl]\n      acc_data_construct_add_variable(&data_construct, &var, 0, 0);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 19: error: identifier \"acc_compute_construct_t\" is undefined\n      acc_compute_construct_t compute_construct;\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 20: warning: function \"acc_compute_construct_init\" declared implicitly [implicit_func_decl]\n      acc_compute_construct_init(&compute_construct, NULL, 0, 0);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 23: warning: function \"acc_compute_construct_add_data_construct\" declared implicitly [implicit_func_decl]\n      acc_compute_construct_add_data_construct(&compute_construct, &data_construct, 0, 0);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 26: error: identifier \"acc_enterdata_directive_t\" is undefined\n      acc_enterdata_directive_t enterdata_directive;\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 27: warning: function \"acc_enterdata_directive_init\" declared implicitly [implicit_func_decl]\n      acc_enterdata_directive_init(&enterdata_directive, NULL, 0, 0);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 30: warning: function \"acc_enterdata_directive_add_compute_construct\" declared implicitly [implicit_func_decl]\n      acc_enterdata_directive_add_compute_construct(&enterdata_directive, &compute_construct, 0, 0);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 33: error: identifier \"acc_create_clause_t\" is undefined\n      acc_create_clause_t create_clause;\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 34: warning: function \"acc_create_clause_init\" declared implicitly [implicit_func_decl]\n      acc_create_clause_init(&create_clause, NULL, 0, 0);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 37: warning: function \"acc_enterdata_directive_add_create_clause\" declared implicitly [implicit_func_decl]\n      acc_enterdata_directive_add_create_clause(&enterdata_directive, &create_clause, 0, 0);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 40: warning: function \"acc_enterdata_directive_execute\" declared implicitly [implicit_func_decl]\n      acc_enterdata_directive_execute(&enterdata_directive);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 43: warning: function \"acc_data_construct_get_variable\" declared implicitly [implicit_func_decl]\n      if (acc_data_construct_get_variable(&data_construct, 0) != &var) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 43: warning: operand types are incompatible (\"int\" and \"int *\") [incompatible_operands]\n      if (acc_data_construct_get_variable(&data_construct, 0) != &var) {\n                                                              ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 48: warning: function \"acc_compute_construct_get_data_construct\" declared implicitly [implicit_func_decl]\n      if (acc_compute_construct_get_data_construct(&compute_construct, 0) != &data_construct) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 53: warning: function \"acc_create_clause_get_executed\" declared implicitly [implicit_func_decl]\n      if (acc_create_clause_get_executed(&create_clause) != 1) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 58: warning: function \"acc_data_construct_destroy\" declared implicitly [implicit_func_decl]\n      acc_data_construct_destroy(&data_construct);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 59: warning: function \"acc_compute_construct_destroy\" declared implicitly [implicit_func_decl]\n      acc_compute_construct_destroy(&compute_construct);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 60: warning: function \"acc_enterdata_directive_destroy\" declared implicitly [implicit_func_decl]\n      acc_enterdata_directive_destroy(&enterdata_directive);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 61: warning: function \"acc_create_clause_destroy\" declared implicitly [implicit_func_decl]\n      acc_create_clause_destroy(&create_clause);\n      ^\n\n4 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11700042150914669
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_create_clause.c/data_construct_create_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_create_clause.c\", line 69: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16762448102235794
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.018683452159166336,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_delete_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_delete_clause.c/data_construct_delete_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_delete_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_delete_clause.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *shared_mem = (int *)acc_malloc(sizeof(int));\n                               ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_delete_clause.c\", line 21: warning: function \"acc_attach\" declared implicitly [implicit_func_decl]\n      acc_attach(non_shared_mem, shared_mem, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_delete_clause.c\", line 24: warning: function \"acc_detach\" declared implicitly [implicit_func_decl]\n      acc_detach(non_shared_mem, shared_mem, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_delete_clause.c\", line 27: warning: function \"acc_delete\" declared implicitly [implicit_func_decl]\n      acc_delete(non_shared_mem);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21793953515589237
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.019378512166440487,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_detach_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_detach_clause.c/data_construct_detach_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *shared_mem = (int *)acc_malloc(sizeof(int));\n                               ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c\", line 12: warning: function \"acc_attach\" declared implicitly [implicit_func_decl]\n      int *ptr = (int *)acc_attach(shared_mem, sizeof(int));\n                        ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c\", line 15: warning: function \"acc_detach\" declared implicitly [implicit_func_decl]\n      acc_detach(ptr);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c\", line 18: warning: function \"acc_is_attached\" declared implicitly [implicit_func_decl]\n      if (acc_is_attached(ptr)) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c\", line 23: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(shared_mem);\n      ^\n\n/tmp/nvcyugBipCKtXHC.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c:18: undefined reference to `acc_is_attached'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16674784664064646
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_detach_clause.c/data_construct_detach_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_detach_clause.c\", line 31: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2180888233706355
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019715444184839725,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_construct_no_create_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_construct_no_create_clause.c/data_construct_no_create_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_construct_no_create_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_no_create_clause.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *shared_mem = (int *)acc_malloc(sizeof(int));\n                               ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_no_create_clause.c\", line 27: warning: function \"acc_attach\" declared implicitly [implicit_func_decl]\n          acc_attach(device_mem, shared_mem);\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_no_create_clause.c\", line 33: warning: function \"acc_detach\" declared implicitly [implicit_func_decl]\n          acc_detach(device_mem, shared_mem);\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_construct_no_create_clause.c\", line 42: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(shared_mem);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21627474576234818
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019781678915023804,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_deviceptr_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_deviceptr_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1659962860867381
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "*** Error in `/lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c0': double free or corruption (fasttop): 0x0000000000b61010 ***\n======= Backtrace: =========\n/lib64/libc.so.6(+0x81299)[0x2ad390713299]\n/lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c0[0x4008de]\n/lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c0[0x400935]\n/lib64/libc.so.6(__libc_start_main+0xf5)[0x2ad3906b4555]\n/lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c0[0x400769]\n======= Memory map: ========\n00400000-00401000 r-xp 00000000 43c:a4108 144115579102541747             /lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c0\n00600000-00601000 r--p 00000000 43c:a4108 144115579102541747             /lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c0\n00601000-00602000 rw-p 00001000 43c:a4108 144115579102541747             /lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c0\n00b61000-00b82000 rw-p 00000000 00:00 0                                  [heap]\n2ad38e9d0000-2ad38e9f2000 r-xp 00000000 08:02 519                        /usr/lib64/ld-2.17.so\n2ad38e9f2000-2ad38e9f5000 rw-p 00000000 00:00 0 \n2ad38ea20000-2ad38ea25000 rw-p 00000000 00:00 0 \n2ad38ebf1000-2ad38ebf2000 r--p 00021000 08:02 519                        /usr/lib64/ld-2.17.so\n2ad38ebf2000-2ad38ebf3000 rw-p 00022000 08:02 519                        /usr/lib64/ld-2.17.so\n2ad38ebf3000-2ad38ebf4000 rw-p 00000000 00:00 0 \n2ad38ebf4000-2ad38eca2000 r-xp 00000000 00:27 15772243                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvomp.so\n2ad38eca2000-2ad38eea1000 ---p 000ae000 00:27 15772243                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvomp.so\n2ad38eea1000-2ad38eea2000 r--p 000ad000 00:27 15772243                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvomp.so\n2ad38eea2000-2ad38eea3000 rw-p 000ae000 00:27 15772243                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvomp.so\n2ad38eea3000-2ad38fbf5000 rw-p 00000000 00:00 0 \n2ad38fbf5000-2ad38fbf7000 r-xp 00000000 08:02 67143                      /usr/lib64/libdl-2.17.so\n2ad38fbf7000-2ad38fdf7000 ---p 00002000 08:02 67143                      /usr/lib64/libdl-2.17.so\n2ad38fdf7000-2ad38fdf8000 r--p 00002000 08:02 67143                      /usr/lib64/libdl-2.17.so\n2ad38fdf8000-2ad38fdf9000 rw-p 00003000 08:02 67143                      /usr/lib64/libdl-2.17.so\n2ad38fdf9000-2ad38fe10000 r-xp 00000000 08:02 340                        /usr/lib64/libpthread-2.17.so\n2ad38fe10000-2ad39000f000 ---p 00017000 08:02 340                        /usr/lib64/libpthread-2.17.so\n2ad39000f000-2ad390010000 r--p 00016000 08:02 340                        /usr/lib64/libpthread-2.17.so\n2ad390010000-2ad390011000 rw-p 00017000 08:02 340                        /usr/lib64/libpthread-2.17.so\n2ad390011000-2ad390015000 rw-p 00000000 00:00 0 \n2ad390015000-2ad3901cb000 r-xp 00000000 00:27 15805582                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvcpumath.so\n2ad3901cb000-2ad3903ca000 ---p 001b6000 00:27 15805582                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvcpumath.so\n2ad3903ca000-2ad3903f5000 r--p 001b5000 00:27 15805582                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvcpumath.so\n2ad3903f5000-2ad390404000 rw-p 001e0000 00:27 15805582                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvcpumath.so\n2ad390404000-2ad39042d000 rw-p 00000000 00:00 0 \n2ad39042d000-2ad390482000 r-xp 00000000 00:27 15629803                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvc.so\n2ad390482000-2ad390682000 ---p 00055000 00:27 15629803                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvc.so\n2ad390682000-2ad39068e000 r--p 00055000 00:27 15629803                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvc.so\n2ad39068e000-2ad390690000 rw-p 00061000 00:27 15629803                   /opt/shared/nvidia-hpc-sdk/2023.235/Linux_x86_64/23.5/compilers/lib/libnvc.so\n2ad390690000-2ad390692000 rw-p 00000000 00:00 0 \n2ad390692000-2ad390855000 r-xp 00000000 08:02 1920                       /usr/lib64/libc-2.17.so\n2ad390855000-2ad390a55000 ---p 001c3000 08:02 1920                       /usr/lib64/libc-2.17.so\n2ad390a55000-2ad390a59000 r--p 001c3000 08:02 1920                       /usr/lib64/libc-2.17.so\n2ad390a59000-2ad390a5b000 rw-p 001c7000 08:02 1920                       /usr/lib64/libc-2.17.so\n2ad390a5b000-2ad390a60000 rw-p 00000000 00:00 0 \n2ad390a60000-2ad390a7d000 r-xp 00000000 00:27 13452647                   /opt/shared/gcc/12.2.0/lib64/libgcc_s.so.1\n2ad390a7d000-2ad390c7c000 ---p 0001d000 00:27 13452647                   /opt/shared/gcc/12.2.0/lib64/libgcc_s.so.1\n2ad390c7c000-2ad390c7d000 r--p 0001c000 00:27 13452647                   /opt/shared/gcc/12.2.0/lib64/libgcc_s.so.1\n2ad390c7d000-2ad390c7e000 rw-p 0001d000 00:27 13452647                   /opt/shared/gcc/12.2.0/lib64/libgcc_s.so.1\n2ad390c7e000-2ad390d7f000 r-xp 00000000 08:02 67843                      /usr/lib64/libm-2.17.so\n2ad390d7f000-2ad390f7e000 ---p 00101000 08:02 67843                      /usr/lib64/libm-2.17.so\n2ad390f7e000-2ad390f7f000 r--p 00100000 08:02 67843                      /usr/lib64/libm-2.17.so\n2ad390f7f000-2ad390f80000 rw-p 00101000 08:02 67843                      /usr/lib64/libm-2.17.so\n2ad394000000-2ad394021000 rw-p 00000000 00:00 0 \n2ad394021000-2ad398000000 ---p 00000000 00:00 0 \n7ffeb4235000-7ffeb4254000 rwxp 00000000 00:00 0                          [stack]\n7ffeb4254000-7ffeb4258000 rw-p 00000000 00:00 0 \n7ffeb4288000-7ffeb428a000 r-xp 00000000 00:00 0                          [vdso]\nffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]\n",
                    "export": false,
                    "output": "",
                    "result": -6,
                    "runtime": 0.017361554317176342,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/data_deviceptr_clause.c/data_deviceptr_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/data_deviceptr_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_deviceptr_clause.c\", line 34: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16793115995824337
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01923500746488571,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_present_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/data_present_clause.c/data_present_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *ptr = (int *)acc_malloc(sizeof(int));\n                        ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 12: warning: function \"acc_data_present\" declared implicitly [implicit_func_decl]\n      acc_data_present(ptr, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 15: warning: function \"acc_attach\" declared implicitly [implicit_func_decl]\n      acc_attach(ptr, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 18: warning: function \"acc_present_increment\" declared implicitly [implicit_func_decl]\n      acc_present_increment(ptr, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 21: warning: function \"acc_detach\" declared implicitly [implicit_func_decl]\n      acc_detach(ptr, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 24: warning: function \"acc_present_decrement\" declared implicitly [implicit_func_decl]\n      acc_present_decrement(ptr, sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 27: warning: function \"acc_present_get_count\" declared implicitly [implicit_func_decl]\n      if (acc_present_get_count(ptr, sizeof(int)) == 0) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 29: warning: function \"acc_delete\" declared implicitly [implicit_func_decl]\n          acc_delete(ptr, sizeof(int));\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 33: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(ptr);\n      ^\n\n/tmp/nvcd4gBjQIUc8uV.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c:12: undefined reference to `acc_data_present'\n/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c:18: undefined reference to `acc_present_increment'\n/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c:24: undefined reference to `acc_present_decrement'\n/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c:27: undefined reference to `acc_present_get_count'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1668358314782381
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/data_present_clause.c/data_present_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/data_present_clause.c\", line 41: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16796175483614206
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01969046611338854,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/declare_directive.c/declare_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/declare_directive.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2178899124264717
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01983048766851425,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_directive_create_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/declare_directive_create_clause.c/declare_directive_create_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_create_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_create_clause.c\", line 21: error: expression must have pointer-to-struct-or-union type but it has type \"int *\"\n      if (ptr->structured_reference_counter != 1) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_create_clause.c\", line 29: error: expression must have pointer-to-struct-or-union type but it has type \"int *\"\n      if (ptr->structured_reference_counter != 0) {\n          ^\n\n2 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_create_clause.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11664940603077412
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/declare_directive_create_clause.c/declare_directive_create_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_create_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_create_clause.c\", line 47: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16758797224611044
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019639509730041027,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_directive_device_resident_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/declare_directive_device_resident_clause.c/declare_directive_device_resident_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_device_resident_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_device_resident_clause.c\", line 10: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      device_var = (int *)acc_malloc(sizeof(int));\n                          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_device_resident_clause.c\", line 27: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(device_var);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21642900072038174
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019785884767770767,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_directive_link_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/declare_directive_link_clause.c/declare_directive_link_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/declare_directive_link_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16629330441355705
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01968502439558506,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "enter_data_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/enter_data_directive.c/enter_data_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/enter_data_directive.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1666217427700758
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019668557681143284,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "exit_data_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/exit_data_directive.c/exit_data_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/exit_data_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/exit_data_directive.c\", line 16: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      acc_malloc(dev_data, 10 * sizeof(int));\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/exit_data_directive.c\", line 16: warning: variable \"dev_data\" is used before its value is set [used_before_set]\n      acc_malloc(dev_data, 10 * sizeof(int));\n                 ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/exit_data_directive.c\", line 19: warning: function \"acc_memcpy\" declared implicitly [implicit_func_decl]\n      acc_memcpy(dev_data, data, 10 * sizeof(int));\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/exit_data_directive.c\", line 23: warning: variable \"host_data\" is used before its value is set [used_before_set]\n      acc_malloc(host_data, 10 * sizeof(int));\n                 ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/exit_data_directive.c\", line 36: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(dev_data);\n      ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21778842899948359
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": -11,
                    "runtime": 0.019760933704674244,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "host_data_construct_if_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/host_data_construct_if_clause.c/host_data_construct_if_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/host_data_construct_if_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16682648938149214
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009425324387848377,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "host_data_construct_if_present_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/host_data_construct_if_present_clause.c/host_data_construct_if_present_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/host_data_construct_if_present_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/host_data_construct_if_present_clause.c\", line 9: warning: function \"acc_malloc\" declared implicitly [implicit_func_decl]\n      int *device_data = (int *)acc_malloc(sizeof(int));\n                                ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/host_data_construct_if_present_clause.c\", line 28: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(device_data);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/host_data_construct_if_present_clause.c\", line 13: warning: variable \"host_data\" was declared but never referenced [declared_but_not_referenced]\n      int host_data = 456;\n          ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2160831205546856
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019703378900885582,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "host_data_construct_use_device_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/host_data_construct_use_device_clause.c/host_data_construct_use_device_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/host_data_construct_use_device_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16585867293179035
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017329156398773193,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "init_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/init_directive.c/init_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/init_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/init_directive.c\", line 12: warning: function \"acc_get_device_type\" declared implicitly [implicit_func_decl]\n      if (acc_get_device_type() != acc_device_current) {\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/init_directive.c\", line 12: error: identifier \"acc_device_current\" is undefined\n      if (acc_get_device_type() != acc_device_current) {\n                                   ^\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/init_directive.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1171526089310646
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/init_directive.c/init_directive.c1 /lustre/schandra_crpl/users/2802/vv/Tests/init_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/init_directive.c\", line 22: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.26785170659422874
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019762899726629257,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_construct.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/kernels_construct.c/kernels_construct.c0 /lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\", line 9: error: expected a \";\"\n      void kernel_function(int* data) {\n                                      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\", line 17: warning: parsing restarts here after previous syntax error [end_of_flush]\n      int* device_data = (int*)acc_malloc(100 * sizeof(int));\n                                                            ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\", line 21: error: identifier \"device_data\" is undefined\n          device_data[i] = i;\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\", line 25: warning: function \"acc_kernels\" declared implicitly [implicit_func_decl]\n      acc_kernels(kernel_function, device_data);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\", line 25: error: identifier \"device_data\" is undefined\n      acc_kernels(kernel_function, device_data);\n                                   ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\", line 28: warning: function \"acc_sync\" declared implicitly [implicit_func_decl]\n      acc_sync(device_data);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\", line 38: warning: function \"acc_free\" declared implicitly [implicit_func_decl]\n      acc_free(device_data);\n      ^\n\n3 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1167993200942874
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/kernels_construct.c/kernels_construct.c1 /lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/kernels_construct.c\", line 46: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16548449080437422
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.018053446896374226,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_auto_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_auto_clause.c/loop_construct_auto_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_auto_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21718076523393393
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.019865064881742,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_collapse_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_collapse_clause.c/loop_construct_collapse_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_collapse_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21748133469372988
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.01959596946835518,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_device_type_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_device_type_clause.c/loop_construct_device_type_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_device_type_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_device_type_clause.c\", line 10: warning: function \"acc_get_device_type\" declared implicitly [implicit_func_decl]\n          device_type = acc_get_device_type();\n                        ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_device_type_clause.c\", line 11: error: identifier \"acc_device_default\" is undefined\n          if (device_type != acc_device_default) {\n                             ^\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_device_type_clause.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11828950699418783
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_device_type_clause.c/loop_construct_device_type_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_device_type_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_device_type_clause.c\", line 22: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.1665272731333971
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019636498764157295,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_gang_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_gang_clause.c/loop_construct_gang_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_gang_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_gang_clause.c\", line 32: error: expected an expression\n              if (/* check work here */) {\n                                       ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_gang_clause.c\", line 9: warning: variable \"num_gangs\" was declared but never referenced [declared_but_not_referenced]\n      int num_gangs = 4;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_gang_clause.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1162154907360673
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_gang_clause.c/loop_construct_gang_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_gang_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_gang_clause.c\", line 44: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16758307348936796
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009175611659884453,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_independent_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_independent_clause.c/loop_construct_independent_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_independent_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_independent_clause.c\", line 6: warning: variable \"j\" was declared but never referenced [declared_but_not_referenced]\n      int i, j, k;\n             ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_independent_clause.c\", line 6: warning: variable \"k\" was declared but never referenced [declared_but_not_referenced]\n      int i, j, k;\n                ^\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16529111750423908
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019744069315493107,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_private_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_private_clause.c/loop_construct_private_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_private_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_private_clause.c\", line 12: error: identifier \"tmp\" is undefined\n          tmp = 0;\n          ^\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_private_clause.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11691361293196678
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_private_clause.c/loop_construct_private_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_private_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_private_clause.c\", line 32: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16523011773824692
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019673350267112255,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_reduction_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_reduction_clause.c/loop_construct_reduction_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_reduction_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16648110654205084
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01958805788308382,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_seq_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_seq_clause.c/loop_construct_seq_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_seq_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_seq_clause.c\", line 6: warning: variable \"j\" was declared but never referenced [declared_but_not_referenced]\n      int i, j;\n             ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16600818280130625
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01965923048555851,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_tile_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_tile_clause.c/loop_construct_tile_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_tile_clause.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16622718051075935
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019649026915431023,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_vector_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_vector_clause.c/loop_construct_vector_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_vector_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_vector_clause.c\", line 7: warning: variable \"vector_length\" was declared but never referenced [declared_but_not_referenced]\n      int vector_length = 4;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21637446712702513
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019856774248182774,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_construct_worker_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_worker_clause.c/loop_construct_worker_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_worker_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_worker_clause.c\", line 16: warning: function \"acc_get_worker_id\" declared implicitly [implicit_func_decl]\n          if (acc_get_worker_id() != i) {\n              ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n/tmp/nvch7jBvMuJ0Qao.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_worker_clause.c:16: undefined reference to `acc_get_worker_id'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1668451838195324
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/loop_construct_worker_clause.c/loop_construct_worker_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_worker_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/loop_construct_worker_clause.c\", line 27: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16796347964555025
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009341626428067684,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_construct.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/parallel_construct.c/parallel_construct.c0 /lustre/schandra_crpl/users/2802/vv/Tests/parallel_construct.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/parallel_construct.c\", line 18: error: identifier \"arr\" is undefined\n              sum += arr[i];\n                     ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/parallel_construct.c\", line 22: error: identifier \"arr\" is undefined\n          arr[0] = sum;\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/parallel_construct.c\", line 26: error: identifier \"arr\" is undefined\n      if (arr[0] != 45) {\n          ^\n\n3 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/parallel_construct.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11773610766977072
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/parallel_construct.c/parallel_construct.c1 /lustre/schandra_crpl/users/2802/vv/Tests/parallel_construct.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/parallel_construct.c\", line 36: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21751873288303614
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019725865684449673,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "reference_counters.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/reference_counters.c/reference_counters.c0 /lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c\", line 24: warning: function \"acc_get_reference_count\" declared implicitly [implicit_func_decl]\n              if (acc_get_reference_count(a) != 1 || acc_get_reference_count(b) != 1) {\n                  ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c\", line 24: error: identifier \"a\" is undefined\n              if (acc_get_reference_count(a) != 1 || acc_get_reference_count(b) != 1) {\n                                          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c\", line 24: error: identifier \"b\" is undefined\n              if (acc_get_reference_count(a) != 1 || acc_get_reference_count(b) != 1) {\n                                                                             ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c\", line 33: warning: function \"acc_get_reference_count\" declared implicitly [implicit_func_decl]\n          if (acc_get_reference_count(a) != 0 || acc_get_reference_count(b) != 0) {\n              ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c\", line 33: error: identifier \"a\" is undefined\n          if (acc_get_reference_count(a) != 0 || acc_get_reference_count(b) != 0) {\n                                      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c\", line 33: error: identifier \"b\" is undefined\n          if (acc_get_reference_count(a) != 0 || acc_get_reference_count(b) != 0) {\n                                                                         ^\n\n4 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.1679266346618533
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/reference_counters.c/reference_counters.c1 /lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/reference_counters.c\", line 44: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2177644744515419
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019757128320634365,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "routine_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/routine_directive.c/routine_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/routine_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/routine_directive.c\", line 18: error: expected a \";\"\n      void accelerator_function(){\n                                 ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/routine_directive.c\", line 31: warning: parsing restarts here after previous syntax error [end_of_flush]\n      accelerator_function();\n                            ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n1 error detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/routine_directive.c\".\n",
                    "export": true,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16694268863648176
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_construct.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/serial_construct.c/serial_construct.c0 /lustre/schandra_crpl/users/2802/vv/Tests/serial_construct.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21771241445094347
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01976588647812605,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "set_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/set_directive.c/set_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c\", line 18: error: identifier \"acc_default_async_var\" is undefined\n      if (acc_default_async_var != acc_async_default){\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c\", line 18: error: identifier \"acc_async_default\" is undefined\n      if (acc_default_async_var != acc_async_default){\n                                   ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c\", line 23: error: identifier \"acc_current_device_num_var\" is undefined\n      if (acc_current_device_num_var != 1){\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c\", line 28: error: identifier \"acc_current_device_type_var\" is undefined\n      if (acc_current_device_type_var != acc_device_type_gpu){\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c\", line 28: error: identifier \"acc_device_type_gpu\" is undefined\n      if (acc_current_device_type_var != acc_device_type_gpu){\n                                         ^\n\n5 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.16700983978807926
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/set_directive.c/set_directive.c1 /lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/set_directive.c\", line 38: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21693474892526865
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019741405732929707,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "shutdown_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/shutdown_directive.c/shutdown_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/shutdown_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/shutdown_directive.c\", line 11: warning: function \"acc_get_device_id\" declared implicitly [implicit_func_decl]\n      int device_id = acc_get_device_id(device_type, device_num);\n                      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/shutdown_directive.c\", line 17: warning: function \"acc_is_device_available\" declared implicitly [implicit_func_decl]\n      if (acc_is_device_available(device_id)) {\n          ^\n\n/tmp/nvcV1kBn_qv_sPH.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/shutdown_directive.c:11: undefined reference to `acc_get_device_id'\n/lustre/schandra_crpl/users/2802/vv/Tests/shutdown_directive.c:17: undefined reference to `acc_is_device_available'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.21745788026601076
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/shutdown_directive.c/shutdown_directive.c1 /lustre/schandra_crpl/users/2802/vv/Tests/shutdown_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/shutdown_directive.c\", line 27: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16802806314080954
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019739633426070213,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "update_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/update_directive.c/update_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/update_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/update_directive.c\", line 7: warning: variable \"a\" was declared but never referenced [declared_but_not_referenced]\n      int a = 0;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.166433647274971
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019616815261542797,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "variable_implicit_data_attributes.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/variable_implicit_data_attributes.c/variable_implicit_data_attributes.c0 /lustre/schandra_crpl/users/2802/vv/Tests/variable_implicit_data_attributes.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/variable_implicit_data_attributes.c\", line 15: error: identifier \"sum\" is undefined\n              sum += i;\n              ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/variable_implicit_data_attributes.c\", line 23: error: identifier \"sum\" is undefined\n          int sum_private = sum;\n                            ^\n\n2 errors detected in the compilation of \"/lustre/schandra_crpl/users/2802/vv/Tests/variable_implicit_data_attributes.c\".\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.11785681452602148
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/variable_implicit_data_attributes.c/variable_implicit_data_attributes.c1 /lustre/schandra_crpl/users/2802/vv/Tests/variable_implicit_data_attributes.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/variable_implicit_data_attributes.c\", line 36: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21773349959403276
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.019725984893739223,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "variable_predetermined_data_attributes.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/variable_predetermined_data_attributes.c/variable_predetermined_data_attributes.c0 /lustre/schandra_crpl/users/2802/vv/Tests/variable_predetermined_data_attributes.c",
                    "config": 1,
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21702132932841778
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.01978345774114132,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "wait_clause.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/wait_clause.c/wait_clause.c0 /lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c\", line 9: warning: function \"acc_set_device_num\" declared implicitly [implicit_func_decl]\n      acc_set_device_num(1, 1);\n      ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c\", line 10: warning: function \"acc_set_async\" declared implicitly [implicit_func_decl]\n      acc_set_async(1, 1);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c\", line 13: warning: function \"acc_parallel\" declared implicitly [implicit_func_decl]\n      acc_parallel(1, 1, 1, 1);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c\", line 17: warning: function \"acc_wait\" declared implicitly [implicit_func_decl]\n      acc_wait(1, 1);\n      ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c\", line 20: warning: function \"acc_get_device_num\" declared implicitly [implicit_func_decl]\n      if (acc_get_device_num(1) != 1 || acc_get_async(1) != 1) {\n          ^\n\n\"/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c\", line 20: warning: function \"acc_get_async\" declared implicitly [implicit_func_decl]\n      if (acc_get_device_num(1) != 1 || acc_get_async(1) != 1) {\n                                        ^\n\n/tmp/nvcAClBoszOpf4E.o: In function `test1':\n/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c:10: undefined reference to `acc_set_async'\n/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c:13: undefined reference to `acc_parallel'\n/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c:14: undefined reference to `acc_parallel'\n/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c:20: undefined reference to `acc_get_async'\n",
                    "export": false,
                    "output": "",
                    "result": 2,
                    "runtime": 0.2177133159711957
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "nvc -DT1 -o /lustre/schandra_crpl/users/2802/vv/build/wait_clause.c/wait_clause.c1 /lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/wait_clause.c\", line 30: warning: variable \"failed\" was declared but never referenced [declared_but_not_referenced]\n      int failed;\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16810600832104683
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.009498423896729946,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "wait_directive.c": [
            {
                "compilation": {
                    "command": "nvc -o /lustre/schandra_crpl/users/2802/vv/build/wait_directive.c/wait_directive.c0 /lustre/schandra_crpl/users/2802/vv/Tests/wait_directive.c",
                    "config": 1,
                    "errors": "\"/lustre/schandra_crpl/users/2802/vv/Tests/wait_directive.c\", line 18: warning: function \"acc_async_test\" declared implicitly [implicit_func_decl]\n      if (acc_async_test(1) != 0) {\n          ^\n\nRemark: individual warnings can be suppressed with \"--diag_suppress <warning-name>\"\n\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21718842163681984
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.019723649136722088,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ]
    },
    "summary": {
        "1": {
            "1": {
                "1": {
                    "acc_async_test.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_attach.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "acc_copyin.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "acc_copyout.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "acc_create.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "acc_delete.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "acc_detach.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_deviceptr.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "acc_free.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_default_async.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_device_num.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_device_type.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_num_devices.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_property.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_init.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_is_present.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "acc_malloc.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_map_data.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "acc_memcpy_d2d.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "acc_memcpy_device.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_memcpy_from_device.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "acc_on_device.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_set_default_async.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_set_device_num.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_set_device_type.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_shutdown.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_unmap_data.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_update_device.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "acc_update_self.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "acc_wait.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_wait_any.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_wait_async.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "async_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_construct.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "attachment_counter.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "cache_directive.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "combined_constucts.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "compute_construct_async_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "compute_construct_default_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "compute_construct_firstprivate_clause.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "compute_construct_if_clause.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "compute_construct_num_gangs_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "compute_construct_num_workersclause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "compute_construct_private_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "compute_construct_reduction_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "compute_construct_self_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "compute_construct_vector_length_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "compute_construct_wait_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_construct.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "data_construct_attach_clause.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "data_construct_copy_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_construct_copyin_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_construct_copyout_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_construct_create_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "data_construct_delete_clause.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "data_construct_detach_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "data_construct_no_create_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_deviceptr_clause.c": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "data_present_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "declare_directive.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "declare_directive_create_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "declare_directive_device_resident_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "declare_directive_link_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "enter_data_directive.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "exit_data_directive.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "host_data_construct_if_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "host_data_construct_if_present_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "host_data_construct_use_device_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "init_directive.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "kernels_construct.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "loop_construct_auto_clause.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "loop_construct_collapse_clause.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "loop_construct_device_type_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "loop_construct_gang_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "loop_construct_independent_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "loop_construct_private_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "loop_construct_reduction_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "loop_construct_seq_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "loop_construct_tile_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "loop_construct_vector_clause.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "loop_construct_worker_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "parallel_construct.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "reference_counters.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_construct.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "set_directive.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "shutdown_directive.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "update_directive.c": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "variable_implicit_data_attributes.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "variable_predetermined_data_attributes.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "wait_clause.c": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "wait_directive.c": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    }
                }
            }
        }
    },
    "systems": [
        {
            "id": 1,
            "machine": "x86_64",
            "name": null,
            "node": "r2v01",
            "processor": "x86_64",
            "release": "3.10.0-1127.19.1.el7.x86_64",
            "version": "#1 SMP Tue Aug 25 17:23:54 UTC 2020"
        }
    ],
    "testsuites": [
        {
            "acc_async_test.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc async test,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // complete the test here\n    int wait_arg = 0;\n    int dev_num = 0;\n    int async_queue = 0;\n\n    // create an async queue\n    async_queue = acc_async_queue_create(dev_num);\n\n    // create an async operation\n    acc_async_operation_create(async_queue, wait_arg);\n\n    // test for completion of the async operation\n    if (acc_async_test(wait_arg) == 0) {\n        // async operation has not completed\n        err = 1;\n    }\n\n    // clean up\n    acc_async_queue_destroy(async_queue);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc async test"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_attach.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc attach,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Create a host pointer to a memory location\n    int *host_ptr = (int *)malloc(sizeof(int));\n    *host_ptr = 1234;\n\n    // Attach the host pointer to the device\n    acc_attach(&host_ptr);\n\n    // Create a device pointer to the same memory location\n    int *device_ptr = (int *)acc_malloc(sizeof(int));\n    *device_ptr = 5678;\n\n    // Detach the host pointer from the device\n    acc_detach(&host_ptr);\n\n    // Check that the device pointer still points to the same memory location\n    if (*device_ptr != 5678) {\n        err = 1;\n    }\n\n    // Free the device memory\n    acc_free(device_ptr);\n\n    // Free the host memory\n    free(host_ptr);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc attach"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_copyin.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc copyin,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate some memory on the host\n    int *host_data = (int *)malloc(sizeof(int) * 10);\n    for (int i = 0; i < 10; i++) {\n        host_data[i] = i;\n    }\n\n    // Copy the data to the device using acc_copyin\n    int *device_data = (int *)acc_copyin(host_data, sizeof(int) * 10);\n\n    // Check that the data has been copied correctly\n    for (int i = 0; i < 10; i++) {\n        if (device_data[i] != host_data[i]) {\n            err++;\n        }\n    }\n\n    // Free the memory on the host\n    free(host_data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc copyin"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_copyout.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc copyout,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate some memory on the device\n    int *device_data = (int *)acc_malloc(sizeof(int));\n\n    // Copy some data to the device\n    int host_data = 42;\n    acc_copyin(device_data, &host_data, sizeof(int));\n\n    // Copy the data back to the host\n    int *host_data_copy = (int *)acc_malloc(sizeof(int));\n    acc_copyout(host_data_copy, device_data, sizeof(int));\n\n    // Check that the data was copied correctly\n    if (*host_data_copy != host_data) {\n        err = 1;\n    }\n\n    // Free the memory on the device\n    acc_free(device_data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc copyout"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_create.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc create,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate memory on the device\n    void *dev_ptr = acc_create(NULL, 1024);\n    if (dev_ptr == NULL) {\n        err = 1;\n    }\n\n    // Check if the memory is correctly allocated\n    if (acc_is_present(dev_ptr, 1024) != 1) {\n        err = 1;\n    }\n\n    // Free the memory\n    acc_free(dev_ptr);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc create"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_delete.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc delete,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate some memory on the device\n    void *data = acc_malloc(1024);\n\n    // Copy some data to the device\n    acc_copyin(data, 1024);\n\n    // Delete the data on the device\n    acc_delete(data, 1024);\n\n    // Check that the data has been deleted\n    if (acc_is_present(data, 1024) != 0) {\n        err = 1;\n    }\n\n    // Free the memory on the device\n    acc_free(data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc delete"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_detach.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc detach,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int *host_ptr = (int *)malloc(sizeof(int));\n    int *device_ptr = (int *)acc_malloc(sizeof(int));\n\n    // attach the host pointer to the device pointer\n    acc_attach(host_ptr, device_ptr);\n\n    // detach the host pointer from the device pointer\n    acc_detach(host_ptr);\n\n    // check that the host pointer is no longer attached to the device pointer\n    if (acc_is_attached(host_ptr, device_ptr) != 0) {\n        err = 1;\n    }\n\n    // free the device memory\n    acc_free(device_ptr);\n\n    // free the host memory\n    free(host_ptr);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc detach"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_deviceptr.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc deviceptr,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate a host array\n    int *host_array = (int *)malloc(10 * sizeof(int));\n\n    // Initialize the host array\n    for (int i = 0; i < 10; i++) {\n        host_array[i] = i;\n    }\n\n    // Create a device array\n    int *device_array = (int *)acc_malloc(10 * sizeof(int));\n\n    // Copy the host array to the device array\n    acc_memcpy(device_array, host_array, 10 * sizeof(int));\n\n    // Get the device pointer for the first element of the device array\n    int *device_ptr = (int *)acc_deviceptr(device_array);\n\n    // Check that the device pointer is not null\n    if (device_ptr == NULL) {\n        err = 1;\n    }\n\n    // Check that the device pointer points to the correct location\n    if (device_ptr != device_array) {\n        err = 1;\n    }\n\n    // Free the device array\n    acc_free(device_array);\n\n    // Free the host array\n    free(host_array);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc deviceptr"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_free.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc free,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate memory on the current device\n    void *data_dev = acc_malloc(100);\n\n    // Free the memory\n    acc_free(data_dev);\n\n    // Check that the memory has been freed\n    if (data_dev != NULL) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc free"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_get_default_async.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc get default async,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the default async queue to a non-default value\n    acc_set_default_async(acc_async_noval);\n\n    // Get the default async queue\n    int default_async = acc_get_default_async();\n\n    // Check that the default async queue is the same as the one we set\n    if (default_async != acc_async_noval) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc get default async"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_get_device_num.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc get device num,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the device type to a valid value\n    acc_device_t dev_type = acc_device_default;\n\n    // Get the device number for the current thread\n    int device_num = acc_get_device_num(dev_type);\n\n    // Check that the device number is valid\n    if (device_num < 0) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc get device num"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_get_device_type.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc get device type,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the device type to a known value\n    acc_set_device_type(ACC_DEVICE_TYPE_GPU);\n\n    // Get the device type and check that it matches the expected value\n    acc_device_t device_type = acc_get_device_type();\n    if (device_type != ACC_DEVICE_TYPE_GPU) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc get device type"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_get_num_devices.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc get num devices,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Get the number of available devices of type acc_device_host\n    int num_devices = acc_get_num_devices(acc_device_host);\n\n    // Check that the number of devices is greater than zero\n    if (num_devices <= 0) {\n        err = 1;\n    }\n\n    // Get the number of available devices of type acc_device_nvidia\n    num_devices = acc_get_num_devices(acc_device_nvidia);\n\n    // Check that the number of devices is greater than zero\n    if (num_devices <= 0) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc get num devices"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_get_property.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc get property,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Get the device type and number\n    int dev_type = acc_get_device_type();\n    int dev_num = acc_get_device_number();\n\n    // Get the memory size and free memory size for the device\n    size_t mem_size = acc_get_property(dev_num, dev_type, acc_property_memory);\n    size_t free_mem_size = acc_get_property(dev_num, dev_type, acc_property_free_memory);\n\n    // Check that the memory size is greater than the free memory size\n    if (mem_size <= free_mem_size) {\n        err = 1;\n    }\n\n    // Get the device name, vendor, and driver version\n    const char* name = acc_get_property_string(dev_num, dev_type, acc_property_name);\n    const char* vendor = acc_get_property_string(dev_num, dev_type, acc_property_vendor);\n    const char* driver_version = acc_get_property_string(dev_num, dev_type, acc_property_driver);\n\n    // Check that the device name, vendor, and driver version are not empty\n    if (name == NULL || vendor == NULL || driver_version == NULL) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc get property"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_init.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc init,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Initialize the runtime for a specific device type and device number\n    acc_init(ACC_DEVICE_TYPE_GPU, 0);\n\n    // Do some work with the GPU\n    // ...\n\n    // Shut down the runtime for the GPU\n    acc_shutdown(ACC_DEVICE_TYPE_GPU, 0);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc init"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_is_present.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc is present,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate some data on the host\n    int *data = (int *)malloc(sizeof(int) * 10);\n\n    // Initialize the data\n    for (int i = 0; i < 10; i++) {\n        data[i] = i;\n    }\n\n    // Check if the data is present on the device\n    if (acc_is_present(data, sizeof(int) * 10) == 0) {\n        // The data is not present on the device, so copy it\n        acc_copyin(data, sizeof(int) * 10);\n    }\n\n    // Check if the data is present on the device again\n    if (acc_is_present(data, sizeof(int) * 10) == 0) {\n        // The data is still not present on the device, so there's an error\n        err = 1;\n    }\n\n    // Free the data\n    free(data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc is present"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_malloc.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc malloc,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate space in the current device memory\n    d_void* ptr = acc_malloc(1024);\n    if (ptr == NULL) {\n        // Allocation error\n        err = 1;\n    } else {\n        // Use the deviceptr clause to tell the compiler that the pointer target is resident on the device\n        #pragma acc deviceptr(ptr)\n\n        // Use the pointer to access the device memory\n        // ...\n\n        // Free the memory when it is no longer needed\n        acc_free(ptr);\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc malloc"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_map_data.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc map data,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate some memory on the host\n    void *host_ptr = malloc(1024);\n\n    // Allocate some memory on the device\n    void *device_ptr = acc_malloc(1024);\n\n    // Map the device memory to the host memory\n    acc_map_data(host_ptr, device_ptr, 1024);\n\n    // Check that the data is correctly mapped\n    if (acc_is_present(host_ptr, 1024) != 1) {\n        err = 1;\n    }\n\n    // Unmap the device memory\n    acc_unmap_data(host_ptr, device_ptr, 1024);\n\n    // Check that the data is no longer mapped\n    if (acc_is_present(host_ptr, 1024) != 0) {\n        err = 1;\n    }\n\n    // Free the device memory\n    acc_free(device_ptr);\n\n    // Free the host memory\n    free(host_ptr);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc map data"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_memcpy_d2d.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc memcpy d2d,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int dev_num_dest = 0;\n    int dev_num_src = 1;\n    int async_arg_src = 0;\n    int bytes = 1024;\n    void *data_arg_dest = malloc(bytes);\n    void *data_arg_src = malloc(bytes);\n\n    // Initialize data on device 1\n    for (int i = 0; i < bytes; i++) {\n        ((char*)data_arg_src)[i] = i % 256;\n    }\n\n    // Copy data from device 1 to device 0\n    acc_memcpy_d2d(data_arg_dest, data_arg_src, bytes, dev_num_dest, dev_num_src);\n\n    // Verify that the data was copied correctly\n    for (int i = 0; i < bytes; i++) {\n        if (((char*)data_arg_dest)[i] != ((char*)data_arg_src)[i]) {\n            err = 1;\n            break;\n        }\n    }\n\n    // Clean up\n    free(data_arg_dest);\n    free(data_arg_src);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc memcpy d2d"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_memcpy_device.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc memcpy device,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate memory on the device\n    void *data_dev_src = acc_malloc(1024);\n    void *data_dev_dest = acc_malloc(1024);\n\n    // Initialize data on the device\n    acc_memcpy_device(data_dev_src, \"Hello, world!\", 13);\n\n    // Copy data from device to device\n    acc_memcpy_device(data_dev_dest, data_dev_src, 13);\n\n    // Check that the data was copied correctly\n    char *data_host = (char *)acc_malloc_host(1024);\n    acc_memcpy_host(data_host, data_dev_dest, 13);\n    if (strcmp(data_host, \"Hello, world!\") != 0) {\n        err = 1;\n    }\n\n    // Free memory on the device\n    acc_free(data_dev_src);\n    acc_free(data_dev_dest);\n    acc_free_host(data_host);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc memcpy device"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_memcpy_from_device.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc memcpy from device,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate memory on the device\n    void *data_dev_src = acc_malloc(1024);\n    void *data_host_dest = malloc(1024);\n\n    // Initialize data on the device\n    for (int i = 0; i < 1024; i++) {\n        ((char*)data_dev_src)[i] = i;\n    }\n\n    // Copy data from the device to the host\n    acc_memcpy_from_device(data_host_dest, data_dev_src, 1024);\n\n    // Verify that the data was copied correctly\n    for (int i = 0; i < 1024; i++) {\n        if (((char*)data_host_dest)[i] != i) {\n            err++;\n        }\n    }\n\n    // Free memory on the device\n    acc_free(data_dev_src);\n    free(data_host_dest);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc memcpy from device"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_memcpy_to_device.c": {
                "num tests": 0,
                "tests": {}
            },
            "acc_on_device.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc on device,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Check if the device is a host\n    if (acc_on_device(acc_device_host) == 1) {\n        // If the device is a host, check if the compute region is executed on the host\n        if (acc_on_device(acc_device_not_host) == 0) {\n            // If the compute region is not executed on the host, return an error\n            err = 1;\n        }\n    } else {\n        // If the device is not a host, check if the compute region is executed on an accelerator\n        if (acc_on_device(acc_device_not_host) == 1) {\n            // If the compute region is executed on an accelerator, return an error\n            err = 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc on device"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_set_default_async.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc set default async,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the default asynchronous activity queue to a specific queue\n    acc_set_default_async(1);\n\n    // Create a compute construct with an async clause that does not specify a queue\n    #pragma acc parallel async\n    {\n        // Do some work\n    }\n\n    // Check that the work was executed asynchronously in the default queue\n    if (acc_get_async_queue() != 1) {\n        err = 1;\n    }\n\n    // Reset the default asynchronous activity queue to the initial value\n    acc_set_default_async(acc_async_default);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc set default async"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_set_device_num.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc set device num,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the device type to CPU\n    acc_set_device_type(ACC_DEVICE_TYPE_CPU);\n\n    // Set the device number to 0\n    acc_set_device_num(0, ACC_DEVICE_TYPE_CPU);\n\n    // Check that the device number is set correctly\n    if (acc_get_device_num() != 0) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc set device num"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_set_device_type.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc set device type,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the device type to GPU\n    acc_set_device_type(ACC_DEVICE_GPU);\n\n    // Create a compute region that uses the GPU device\n    #pragma acc parallel num_gangs(1) vector_length(1)\n    {\n        // Do some computation on the GPU\n        int i = 0;\n        #pragma acc loop\n        for (i = 0; i < 100; i++) {\n            // Do some computation\n        }\n    }\n\n    // Set the device type to CPU\n    acc_set_device_type(ACC_DEVICE_CPU);\n\n    // Create a compute region that uses the CPU device\n    #pragma acc parallel num_gangs(1) vector_length(1)\n    {\n        // Do some computation on the CPU\n        int i = 0;\n        #pragma acc loop\n        for (i = 0; i < 100; i++) {\n            // Do some computation\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc set device type"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_shutdown.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc shutdown,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the device and data\n    acc_device_t dev_type = acc_device_default;\n    int dev_num = 0;\n    int *data = (int *)acc_malloc(sizeof(int) * 10);\n\n    // Shut down the device\n    acc_shutdown(dev_type);\n\n    // Check that the data is no longer present in the device memory\n    int *data_ptr = (int *)acc_deviceptr(data, dev_num);\n    if (data_ptr != NULL) {\n        err = 1;\n    }\n\n    // Free the data\n    acc_free(data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc shutdown"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_unmap_data.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc unmap data,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate some host memory\n    int *host_data = (int*)malloc(sizeof(int));\n    *host_data = 1234;\n\n    // Map the host memory to the device\n    int *device_data = (int*)acc_map_data(host_data, sizeof(int));\n\n    // Unmap the device memory from the host\n    acc_unmap_data(device_data);\n\n    // Check that the device memory is no longer mapped to the host\n    if (acc_is_mapped(device_data) != 0) {\n        err = 1;\n    }\n\n    // Free the host memory\n    free(host_data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc unmap data"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_update_device.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc update device,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a shared memory region\n    int *shared_data = (int *)acc_malloc(sizeof(int));\n    *shared_data = 1;\n\n    // create a device memory region\n    int *device_data = (int *)acc_malloc(sizeof(int));\n    *device_data = 2;\n\n    // update the device memory from the shared memory\n    acc_update_device(shared_data, sizeof(int));\n\n    // check that the device memory has been updated\n    if (*device_data != 1) {\n        err = 1;\n    }\n\n    // free the memory regions\n    acc_free(shared_data);\n    acc_free(device_data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc update device"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_update_self.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc update self,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int data_arg[10];\n    int bytes = sizeof(data_arg);\n\n    // Initialize data_arg with some values\n    for (int i = 0; i < 10; i++) {\n        data_arg[i] = i;\n    }\n\n    // Call acc_update_self to update the data in local memory from the corresponding device memory\n    acc_update_self(data_arg, bytes);\n\n    // Check that the data in local memory has been updated\n    for (int i = 0; i < 10; i++) {\n        if (data_arg[i] != i) {\n            err = 1;\n            break;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc update self"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_wait.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc wait,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create an async queue\n    int async_queue = acc_async_queue();\n\n    // create a device\n    int dev_num = acc_device_num();\n\n    // create a data array\n    int data[10];\n\n    // create a compute region\n    #pragma acc parallel num_gangs(1) vector_length(10)\n    {\n        // create a data array\n        int data[10];\n\n        // initialize the data array\n        #pragma acc loop\n        for (int i = 0; i < 10; i++) {\n            data[i] = i;\n        }\n\n        // wait for the async queue to complete\n        acc_wait(async_queue);\n\n        // check the data array\n        #pragma acc loop\n        for (int i = 0; i < 10; i++) {\n            if (data[i] != i) {\n                err++;\n            }\n        }\n    }\n\n    // destroy the async queue\n    acc_async_queue_destroy(async_queue);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc wait"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_wait_any.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc wait any,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Create an array of asynchronous queues\n    int async_queues[2];\n    async_queues[0] = acc_async_sync;\n    async_queues[1] = acc_async_sync;\n\n    // Create a compute construct\n    #pragma acc parallel num_gangs(1)\n    {\n        // Create a kernel that will execute asynchronously\n        #pragma acc kernels async(async_queues[0])\n        {\n            // Do some work\n            int i = 0;\n            #pragma acc loop\n            for (i = 0; i < 100; i++) {\n                // Do some work\n            }\n        }\n\n        // Create another kernel that will execute asynchronously\n        #pragma acc kernels async(async_queues[1])\n        {\n            // Do some work\n            int i = 0;\n            #pragma acc loop\n            for (i = 0; i < 100; i++) {\n                // Do some work\n            }\n        }\n    }\n\n    // Wait for any of the asynchronous queues to complete\n    int index = acc_wait_any(2, async_queues);\n\n    // Check that the correct queue completed\n    if (index != 0 && index != 1) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc wait any"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "acc_wait_async.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:acc wait async,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create an async queue\n    int async_queue = acc_async_queue_create();\n\n    // create a wait argument\n    int wait_arg = acc_async_queue_create();\n\n    // enqueue a wait operation on the async queue\n    acc_wait_async(wait_arg, async_queue);\n\n    // check that the wait operation has been enqueued\n    if (acc_async_queue_empty(async_queue)) {\n        err = 1;\n    }\n\n    // destroy the async queue\n    acc_async_queue_destroy(async_queue);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "acc wait async"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "async_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:async clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // complete the test here\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "async clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "atomic_construct.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:atomic construct,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int x = 0;\n    int v = 0;\n\n    // atomic read\n    #pragma acc atomic read\n    v = x;\n\n    // atomic write\n    #pragma acc atomic write\n    x = 1;\n\n    // atomic update\n    #pragma acc atomic update\n    x++;\n\n    // atomic capture\n    #pragma acc atomic capture\n    v = x++;\n\n    // atomic capture with multiple statements\n    #pragma acc atomic capture\n    {\n        v = x;\n        x++;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "atomic construct"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "attachment_counter.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:attachment counter,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // allocate a pointer in device memory\n    int* ptr = (int*)acc_malloc(sizeof(int));\n\n    // attach the pointer to a device address\n    acc_attach(ptr, sizeof(int));\n\n    // increment the attachment counter\n    acc_attach(ptr, sizeof(int));\n\n    // detach the pointer from the device address\n    acc_detach(ptr);\n\n    // decrement the attachment counter\n    acc_detach(ptr);\n\n    // check if the attachment counter is zero\n    if (acc_get_attachment_counter(ptr) != 0) {\n        err = 1;\n    }\n\n    // free the pointer\n    acc_free(ptr);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "attachment counter"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "cache_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:cache directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create an array to be cached\n    int arr[100];\n\n    // initialize the array\n    for (int i = 0; i < 100; i++) {\n        arr[i] = i;\n    }\n\n    // cache the array\n    #pragma acc cache(arr)\n\n    // modify the array\n    for (int i = 0; i < 100; i++) {\n        arr[i] = arr[i] + 1;\n    }\n\n    // check that the array has been modified\n    for (int i = 0; i < 100; i++) {\n        if (arr[i] != i + 1) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "cache directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "combined_constucts.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:combined constucts,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the data\n    int data[100];\n    for (int i = 0; i < 100; i++) {\n        data[i] = i;\n    }\n\n    // Use a parallel loop to compute the sum of the data\n    #pragma acc parallel loop reduction(+:sum)\n    for (int i = 0; i < 100; i++) {\n        sum += data[i];\n    }\n\n    // Use a serial loop to compute the sum of the data\n    #pragma acc serial loop reduction(+:sum)\n    for (int i = 0; i < 100; i++) {\n        sum += data[i];\n    }\n\n    // Use a kernels loop to compute the sum of the data\n    #pragma acc kernels loop reduction(+:sum)\n    for (int i = 0; i < 100; i++) {\n        sum += data[i];\n    }\n\n    // Check the results\n    if (sum != 4950) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "combined constucts"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_async_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct async clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // complete the test here\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct async clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_default_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n// T1: compute construct default clause, V: 2.7-3.3\nint test1() {\n    int err = 0;\n\n    // Set up data for the test\n    int data[100];\n    for (int i = 0; i < 100; i++) {\n        data[i] = i;\n    }\n\n    // Create a compute construct with the default clause\n    #pragma acc parallel default(present)\n    {\n        // Use the data in the compute construct\n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += data[i];\n        }\n\n        // Check that the data is present in the compute construct\n        if (sum != 4950) {\n            err = 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x) {\n        failed = failed + test1();\n    }\n    if (failed != 0) {\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "compute_construct_firstprivate_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct firstprivate clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a shared variable\n    int shared_var = 0;\n\n    // create a private variable\n    int private_var = 0;\n\n    // create a firstprivate variable\n    int firstprivate_var = 0;\n\n    // create a compute construct with firstprivate clause\n    #pragma acc compute firstprivate(firstprivate_var)\n    {\n        // increment the shared variable\n        shared_var++;\n\n        // increment the private variable\n        private_var++;\n\n        // increment the firstprivate variable\n        firstprivate_var++;\n    }\n\n    // check that the firstprivate variable was not modified\n    if (firstprivate_var != 0) {\n        err++;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct firstprivate clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_if_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct if clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the if clause\n    int condition = 0;\n    #pragma acc if (condition)\n    {\n        // This code should not be executed\n        err = 1;\n    }\n\n    // Check that the if clause was not executed\n    if (err == 0) {\n        // The if clause was not executed, as expected\n        return 0;\n    } else {\n        // The if clause was executed, which is not expected\n        return 1;\n    }\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct if clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_num_gangs_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct num_gangs clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the number of gangs to 2 in dimension 1\n    #pragma acc parallel num_gangs(2)\n    {\n        // Do some work\n    }\n\n    // Set the number of gangs to 3 in dimensions 1 and 2\n    #pragma acc parallel num_gangs(3, 3)\n    {\n        // Do some work\n    }\n\n    // Set the number of gangs to 4 in dimensions 1, 2, and 3\n    #pragma acc parallel num_gangs(4, 4, 4)\n    {\n        // Do some work\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct num_gangs clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_num_workersclause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct num_workersclause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the number of workers to 4\n    #pragma acc parallel num_workers(4)\n    {\n        // Do some work\n        #pragma acc loop\n        for (int i = 0; i < 100; i++) {\n            // ...\n        }\n    }\n\n    // Check that the number of workers is 4\n    if (acc_get_num_workers() != 4) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct num_workersclause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_private_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct private clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a parallel region with a private clause\n    #pragma acc parallel private(x)\n    {\n        // create a serial region with a private clause\n        #pragma acc serial private(y)\n        {\n            // create a kernels region with a private clause\n            #pragma acc kernels private(z)\n            {\n                // do some work\n            }\n        }\n    }\n\n    // check that the private variables were created correctly\n    if (x != 0 || y != 0 || z != 0) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct private clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_reduction_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct reduction clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int a[100];\n    int b[100];\n    int c[100];\n\n    // Initialize arrays\n    for (int i = 0; i < 100; i++) {\n        a[i] = i;\n        b[i] = i;\n        c[i] = 0;\n    }\n\n    // Compute reduction\n    #pragma acc parallel loop reduction(+:c)\n    for (int i = 0; i < 100; i++) {\n        c[i] += a[i] + b[i];\n    }\n\n    // Check result\n    for (int i = 0; i < 100; i++) {\n        if (c[i] != a[i] + b[i]) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct reduction clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_self_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct self clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a parallel region with a self clause\n    #pragma acc parallel self(true)\n    {\n        // do some work\n        #pragma acc loop\n        for (int i = 0; i < 10; i++) {\n            // do some work\n        }\n    }\n\n    // create a serial region with a self clause\n    #pragma acc serial self(true)\n    {\n        // do some work\n        #pragma acc loop\n        for (int i = 0; i < 10; i++) {\n            // do some work\n        }\n    }\n\n    // create a kernels region with a self clause\n    #pragma acc kernels self(true)\n    {\n        // do some work\n        #pragma acc loop\n        for (int i = 0; i < 10; i++) {\n            // do some work\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct self clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_vector_length_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct vector_length clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the vector length to 4\n    #pragma acc parallel vector_length(4)\n    {\n        // Do some vector operations\n        #pragma acc loop vector\n        for (int i = 0; i < 10; i++) {\n            // ...\n        }\n    }\n\n    // Check that the vector length was set correctly\n    #pragma acc parallel\n    {\n        int vector_length = acc_get_vector_length();\n        if (vector_length != 4) {\n            err = 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct vector_length clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "compute_construct_wait_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:compute construct wait clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int data[100];\n\n    #pragma acc parallel loop\n    for (int i = 0; i < 100; i++) {\n        data[i] = i;\n    }\n\n    #pragma acc wait\n\n    for (int i = 0; i < 100; i++) {\n        if (data[i] != i) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "compute construct wait clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Allocate memory on the device\n    int *a;\n    acc_malloc(a, sizeof(int));\n\n    // Copy data from local memory to device memory\n    acc_copyin(a, sizeof(int));\n\n    // Launch a kernel to perform a calculation on the data\n    acc_parallel(a, sizeof(int));\n\n    // Copy data back from device memory to local memory\n    acc_copyout(a, sizeof(int));\n\n    // Free the memory on the device\n    acc_free(a);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct_attach_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct attach clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Create a shared memory array\n    int *shared_array = (int *)acc_malloc(sizeof(int) * 10);\n\n    // Create a non-shared memory array\n    int *non_shared_array = (int *)malloc(sizeof(int) * 10);\n\n    // Attach the non-shared array to the shared array\n    acc_attach(non_shared_array, shared_array, sizeof(int) * 10);\n\n    // Perform some operations on the shared array\n    for (int i = 0; i < 10; i++) {\n        shared_array[i] = i;\n    }\n\n    // Detach the non-shared array from the shared array\n    acc_detach(non_shared_array, shared_array);\n\n    // Check that the non-shared array is still accessible\n    for (int i = 0; i < 10; i++) {\n        if (non_shared_array[i] != i) {\n            err++;\n        }\n    }\n\n    // Free the memory\n    acc_free(shared_array);\n    free(non_shared_array);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct attach clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct_copy_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct copy clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int *a, *b;\n    a = (int *)malloc(sizeof(int));\n    b = (int *)malloc(sizeof(int));\n    *a = 1;\n    *b = 2;\n    #pragma acc data copy(a, b)\n    {\n        #pragma acc parallel\n        {\n            a[0] = 3;\n            b[0] = 4;\n        }\n    }\n    if (*a != 3 || *b != 4) {\n        err = 1;\n    }\n    free(a);\n    free(b);\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct copy clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct_copyin_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct copyin clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a shared memory region\n    int *shared_mem = (int *)acc_malloc(sizeof(int));\n\n    // create a copy of the shared memory region\n    int *copy_mem = (int *)acc_malloc(sizeof(int));\n\n    // initialize the shared memory region\n    *shared_mem = 1;\n\n    // create a compute construct with a copyin clause\n    #pragma acc parallel copyin(shared_mem)\n    {\n        // increment the shared memory region\n        *shared_mem += 1;\n    }\n\n    // check that the shared memory region has been incremented\n    if (*shared_mem != 2) {\n        err = 1;\n    }\n\n    // free the memory\n    acc_free(shared_mem);\n    acc_free(copy_mem);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct copyin clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct_copyout_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct copyout clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int *a, *b;\n\n    // Initialize variables\n    a = (int *)malloc(sizeof(int));\n    b = (int *)malloc(sizeof(int));\n    *a = 1;\n    *b = 2;\n\n    // Copy data from a to b\n    #pragma acc data copyout(b[0:1])\n    {\n        #pragma acc parallel\n        {\n            b[0] = a[0];\n        }\n    }\n\n    // Check that b[0] has been copied from a[0]\n    if (b[0] != 1) {\n        err = 1;\n    }\n\n    // Free memory\n    free(a);\n    free(b);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct copyout clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct_create_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct create clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a new data construct\n    acc_data_construct_t data_construct;\n    acc_data_construct_init(&data_construct, NULL, 0, 0);\n\n    // create a new variable\n    int var = 0;\n\n    // add the variable to the data construct\n    acc_data_construct_add_variable(&data_construct, &var, 0, 0);\n\n    // create a new compute construct\n    acc_compute_construct_t compute_construct;\n    acc_compute_construct_init(&compute_construct, NULL, 0, 0);\n\n    // add the data construct to the compute construct\n    acc_compute_construct_add_data_construct(&compute_construct, &data_construct, 0, 0);\n\n    // create a new enterdata directive\n    acc_enterdata_directive_t enterdata_directive;\n    acc_enterdata_directive_init(&enterdata_directive, NULL, 0, 0);\n\n    // add the compute construct to the enterdata directive\n    acc_enterdata_directive_add_compute_construct(&enterdata_directive, &compute_construct, 0, 0);\n\n    // create a new create clause\n    acc_create_clause_t create_clause;\n    acc_create_clause_init(&create_clause, NULL, 0, 0);\n\n    // add the create clause to the enterdata directive\n    acc_enterdata_directive_add_create_clause(&enterdata_directive, &create_clause, 0, 0);\n\n    // execute the enterdata directive\n    acc_enterdata_directive_execute(&enterdata_directive);\n\n    // check that the variable was created and attached to the data construct\n    if (acc_data_construct_get_variable(&data_construct, 0) != &var) {\n        err = 1;\n    }\n\n    // check that the data construct was created and attached to the compute construct\n    if (acc_compute_construct_get_data_construct(&compute_construct, 0) != &data_construct) {\n        err = 1;\n    }\n\n    // check that the create clause was executed\n    if (acc_create_clause_get_executed(&create_clause) != 1) {\n        err = 1;\n    }\n\n    // clean up\n    acc_data_construct_destroy(&data_construct);\n    acc_compute_construct_destroy(&compute_construct);\n    acc_enterdata_directive_destroy(&enterdata_directive);\n    acc_create_clause_destroy(&create_clause);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct create clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct_delete_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct delete clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a shared memory region\n    int *shared_mem = (int *)acc_malloc(sizeof(int));\n\n    // create a pointer to a non-shared memory region\n    int *non_shared_mem = (int *)malloc(sizeof(int));\n\n    // set the value of the shared memory region to 1\n    *shared_mem = 1;\n\n    // set the value of the non-shared memory region to 2\n    *non_shared_mem = 2;\n\n    // attach the non-shared memory region to the shared memory region\n    acc_attach(non_shared_mem, shared_mem, sizeof(int));\n\n    // detach the non-shared memory region from the shared memory region\n    acc_detach(non_shared_mem, shared_mem, sizeof(int));\n\n    // delete the non-shared memory region\n    acc_delete(non_shared_mem);\n\n    // check that the shared memory region has not been modified\n    if (*shared_mem != 1) {\n        err = 1;\n    }\n\n    // check that the non-shared memory region has been deleted\n    if (non_shared_mem != NULL) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct delete clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct_detach_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct detach clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a shared memory region\n    int *shared_mem = (int *)acc_malloc(sizeof(int));\n\n    // create a pointer to a variable in shared memory\n    int *ptr = (int *)acc_attach(shared_mem, sizeof(int));\n\n    // detach the pointer from shared memory\n    acc_detach(ptr);\n\n    // check that the pointer is no longer attached to shared memory\n    if (acc_is_attached(ptr)) {\n        err = 1;\n    }\n\n    // free the shared memory region\n    acc_free(shared_mem);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct detach clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_construct_no_create_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data construct no_create clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Create a shared memory region\n    int *shared_mem = (int *)acc_malloc(sizeof(int));\n\n    // Create a device memory region\n    int *device_mem = (int *)acc_malloc(sizeof(int));\n\n    // Initialize the shared memory region\n    *shared_mem = 1;\n\n    // Initialize the device memory region\n    *device_mem = 2;\n\n    // Create a compute construct with the no_create clause\n    #pragma acc parallel num_gangs(1) no_create(shared_mem)\n    {\n        // Increment the shared memory region\n        *shared_mem += 1;\n\n        // Attach the device memory region to the shared memory region\n        acc_attach(device_mem, shared_mem);\n\n        // Increment the device memory region\n        *device_mem += 1;\n\n        // Detach the device memory region from the shared memory region\n        acc_detach(device_mem, shared_mem);\n    }\n\n    // Check the values of the shared and device memory regions\n    if (*shared_mem != 2 || *device_mem != 3) {\n        err = 1;\n    }\n\n    // Free the memory regions\n    acc_free(shared_mem);\n    acc_free(device_mem);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data construct no_create clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_deviceptr_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data deviceptr clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int *host_ptr = (int *)malloc(sizeof(int));\n    int *device_ptr = (int *)malloc(sizeof(int));\n\n    // Set the host pointer to a value\n    *host_ptr = 1234;\n\n    // Use the data deviceptr clause to declare the device pointer\n    #pragma acc data deviceptr(device_ptr)\n    {\n        // Copy the value from the host pointer to the device pointer\n        device_ptr = host_ptr;\n    }\n\n    // Check that the value was copied correctly\n    if (*device_ptr != *host_ptr) {\n        err = 1;\n    }\n\n    // Free the memory\n    free(host_ptr);\n    free(device_ptr);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data deviceptr clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "data_present_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:data present clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a pointer to a shared memory region\n    int *ptr = (int *)acc_malloc(sizeof(int));\n\n    // create a data present clause for the pointer\n    acc_data_present(ptr, sizeof(int));\n\n    // perform an attach action on the pointer\n    acc_attach(ptr, sizeof(int));\n\n    // increment the structured reference counter for the pointer\n    acc_present_increment(ptr, sizeof(int));\n\n    // perform a detach action on the pointer\n    acc_detach(ptr, sizeof(int));\n\n    // decrement the structured reference counter for the pointer\n    acc_present_decrement(ptr, sizeof(int));\n\n    // check if the structured reference counter is zero\n    if (acc_present_get_count(ptr, sizeof(int)) == 0) {\n        // perform a delete action on the pointer\n        acc_delete(ptr, sizeof(int));\n    }\n\n    // free the shared memory region\n    acc_free(ptr);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "data present clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "declare_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:declare directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // declare a variable in device memory\n    int a;\n    #pragma acc declare create(a)\n\n    // copy the value of a from host to device\n    #pragma acc update device(a)\n\n    // perform some computation on the device\n    #pragma acc parallel loop\n    for (int i = 0; i < 10; i++) {\n        a += i;\n    }\n\n    // copy the value of a from device to host\n    #pragma acc update host(a)\n\n    // check the result\n    if (a != 45) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "declare directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "declare_directive_create_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:declare directive create clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int *ptr = NULL;\n\n    // create a pointer to a variable in shared memory\n    #pragma acc declare create(ptr)\n\n    // check that the pointer is not null\n    if (ptr == NULL) {\n        err = 1;\n    }\n\n    // increment the structured reference counter for the pointer\n    #pragma acc present(ptr)\n\n    // check that the structured reference counter is now 1\n    if (ptr->structured_reference_counter != 1) {\n        err = 1;\n    }\n\n    // decrement the structured reference counter for the pointer\n    #pragma acc present(ptr)\n\n    // check that the structured reference counter is now 0\n    if (ptr->structured_reference_counter != 0) {\n        err = 1;\n    }\n\n    // delete the pointer\n    #pragma acc delete(ptr)\n\n    // check that the pointer is now null\n    if (ptr != NULL) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "declare directive create clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "declare_directive_device_resident_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:declare directive device_resident clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // declare a variable on the device\n    int *device_var;\n    device_var = (int *)acc_malloc(sizeof(int));\n\n    // set the value of the variable on the device\n    *device_var = 42;\n\n    // declare a variable on the host\n    int host_var;\n\n    // copy the value of the device variable to the host variable\n    host_var = *device_var;\n\n    // check that the value of the host variable is the same as the value of the device variable\n    if (host_var != 42) {\n        err = 1;\n    }\n\n    // free the memory allocated on the device\n    acc_free(device_var);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "declare directive device_resident clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "declare_directive_link_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:declare directive link clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // declare a global variable\n    int global_var = 0;\n\n    // create a link to the global variable\n    #pragma acc declare link(global_var)\n\n    // use the global variable in an accelerator routine\n    #pragma acc parallel\n    {\n        global_var = 1;\n    }\n\n    // check that the global variable has been updated\n    if (global_var != 1) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "declare directive link clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "enter_data_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:enter data directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Create a data array\n    int data[10];\n\n    // Initialize the data array\n    for (int i = 0; i < 10; i++) {\n        data[i] = i;\n    }\n\n    // Create an OpenACC region\n    #pragma acc enter data copyin(data)\n\n    // Check that the data has been copied into the device\n    for (int i = 0; i < 10; i++) {\n        if (data[i] != i) {\n            err++;\n        }\n    }\n\n    // Exit the OpenACC region\n    #pragma acc exit data delete(data)\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "enter data directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "exit_data_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:exit data directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a data array\n    int data[10];\n    for (int i = 0; i < 10; i++) {\n        data[i] = i;\n    }\n\n    // create a device array\n    int *dev_data;\n    acc_malloc(dev_data, 10 * sizeof(int));\n\n    // copy data to device\n    acc_memcpy(dev_data, data, 10 * sizeof(int));\n\n    // create a host array\n    int *host_data;\n    acc_malloc(host_data, 10 * sizeof(int));\n\n    // copy data from device to host\n    acc_memcpy(host_data, dev_data, 10 * sizeof(int));\n\n    // verify that the data was copied correctly\n    for (int i = 0; i < 10; i++) {\n        if (host_data[i] != data[i]) {\n            err++;\n        }\n    }\n\n    // free device memory\n    acc_free(dev_data);\n\n    // free host memory\n    acc_free(host_data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "exit data directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "host_data_construct_if_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:host_data construct if clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the host data\n    int host_data[10];\n    for (int i = 0; i < 10; i++) {\n        host_data[i] = i;\n    }\n\n    // Create a device data array\n    int device_data[10];\n\n    // Use the host_data construct with an if clause to copy the data to the device\n    #pragma acc host_data if(host_data[0] == 0)\n    {\n        // Copy the data to the device\n        #pragma acc parallel loop\n        for (int i = 0; i < 10; i++) {\n            device_data[i] = host_data[i];\n        }\n    }\n\n    // Check that the data was copied correctly\n    for (int i = 0; i < 10; i++) {\n        if (device_data[i] != host_data[i]) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "host_data construct if clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "host_data_construct_if_present_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:host_data construct if_present clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the device memory\n    int *device_data = (int *)acc_malloc(sizeof(int));\n    *device_data = 123;\n\n    // Set up the host data\n    int host_data = 456;\n\n    // Use the host_data construct with the if_present clause\n    #pragma acc host_data if_present(device_data)\n    {\n        // Access the device data\n        int device_value = *device_data;\n\n        // Check that the device data is correct\n        if (device_value != 123) {\n            err = 1;\n        }\n    }\n\n    // Free the device memory\n    acc_free(device_data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "host_data construct if_present clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "host_data_construct_use_device_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:host_data construct use_device clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the data\n    int *data = (int *)malloc(sizeof(int) * 10);\n    for (int i = 0; i < 10; i++) {\n        data[i] = i;\n    }\n\n    // Use the host_data construct with the use_device clause to copy the data to the device\n    #pragma acc host_data use_device(data)\n    {\n        // Copy the data to the device\n        #pragma acc parallel loop\n        for (int i = 0; i < 10; i++) {\n            data[i] = i;\n        }\n    }\n\n    // Check that the data has been copied correctly\n    for (int i = 0; i < 10; i++) {\n        if (data[i] != i) {\n            err++;\n        }\n    }\n\n    // Free the data\n    free(data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "host_data construct use_device clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "id": 1,
            "init_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:init directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Initialize the runtime for the current device type\n    #pragma acc init device_type(acc_device_current)\n\n    // Check that the current device type is initialized\n    if (acc_get_device_type() != acc_device_current) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "init directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "kernels_construct.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:kernels construct,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Define a kernel function\n    void kernel_function(int* data) {\n        // Do some computation on the data\n        for (int i = 0; i < 100; i++) {\n            data[i] = data[i] + 1;\n        }\n    }\n\n    // Create a device array\n    int* device_data = (int*)acc_malloc(100 * sizeof(int));\n\n    // Initialize the device array\n    for (int i = 0; i < 100; i++) {\n        device_data[i] = i;\n    }\n\n    // Launch the kernel\n    acc_kernels(kernel_function, device_data);\n\n    // Synchronize the device\n    acc_sync(device_data);\n\n    // Check the result\n    for (int i = 0; i < 100; i++) {\n        if (device_data[i] != i + 1) {\n            err++;\n        }\n    }\n\n    // Free the device array\n    acc_free(device_data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "kernels construct"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_auto_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct auto clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create an array of random numbers\n    int arr[100];\n    for (int i = 0; i < 100; i++) {\n        arr[i] = rand() % 100;\n    }\n\n    // create a loop with the auto clause\n    #pragma acc loop auto\n    for (int i = 0; i < 100; i++) {\n        // do some computation on the array\n        arr[i] = arr[i] + 1;\n    }\n\n    // check that the loop iterations are data-independent\n    for (int i = 0; i < 100; i++) {\n        if (arr[i] != arr[i] + 1) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct auto clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_collapse_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct collapse clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the data\n    int N = 100;\n    int a[N];\n    for (int i = 0; i < N; i++) {\n        a[i] = i;\n    }\n\n    // Collapse the loops\n#pragma acc parallel loop collapse(2)\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < N; j++) {\n            a[i] += a[j];\n        }\n    }\n\n    // Check the result\n    for (int i = 0; i < N; i++) {\n        if (a[i] != (i * (i + 1)) / 2) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct collapse clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_device_type_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct device_type clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int device_type = 0;\n\n    #pragma acc loop device_type(device_type)\n    for (int i = 0; i < 10; i++) {\n        device_type = acc_get_device_type();\n        if (device_type != acc_device_default) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct device_type clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_gang_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct gang clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the loop construct\n    int num_gangs = 4;\n    int num_iterations = 100;\n    int gang_size = 25;\n    int iteration_size = 10;\n\n    // Create a parallel region with the gang clause\n    #pragma acc parallel num_gangs(num_gangs)\n    {\n        // Create a loop construct with the gang clause\n        #pragma acc loop gang(num_gangs)\n        for (int i = 0; i < num_iterations; i += iteration_size) {\n            // Do some work\n            #pragma acc loop\n            for (int j = 0; j < gang_size; j++) {\n                // Do some work\n            }\n        }\n    }\n\n    // Check that the loop construct was executed correctly\n    for (int i = 0; i < num_iterations; i += iteration_size) {\n        for (int j = 0; j < gang_size; j++) {\n            // Check that the work was done correctly\n            if (/* check work here */) {\n                err++;\n            }\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct gang clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_independent_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct independent clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int i, j, k;\n    int a[100];\n    int b[100];\n    int c[100];\n\n    // Initialize arrays\n    for (i = 0; i < 100; i++) {\n        a[i] = i;\n        b[i] = i;\n        c[i] = i;\n    }\n\n    // Loop with independent clause\n    #pragma acc loop independent\n    for (i = 0; i < 100; i++) {\n        a[i] = b[i] + c[i];\n    }\n\n    // Check results\n    for (i = 0; i < 100; i++) {\n        if (a[i] != b[i] + c[i]) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct independent clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_private_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct private clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a parallel loop with a private variable\n    #pragma acc parallel loop private(tmp)\n    for (int i = 0; i < 10; i++) {\n        // initialize the private variable\n        tmp = 0;\n\n        // update the private variable within the loop\n        #pragma acc loop\n        for (int j = 0; j < 10; j++) {\n            tmp += j;\n        }\n\n        // check if the private variable is correctly updated\n        if (tmp != 45) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct private clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_reduction_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n// T1: loop construct reduction clause, V: 2.7-3.3\nint test1() {\n    int err = 0;\n\n    // Initialize variables\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\n    // Set up the loop\n    #pragma acc parallel loop reduction(+:x, y, z)\n    for (int i = 0; i < 10; ++i) {\n        x += 1;\n        y += 2;\n        z += 3;\n    }\n\n    // Check the results\n    if (x != 10 || y != 20 || z != 30) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x) {\n        failed = failed + test1();\n    }\n    if (failed != 0) {\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [],
                        "versions": []
                    }
                }
            },
            "loop_construct_seq_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct seq clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int i, j;\n    int N = 100;\n    int a[N];\n    int b[N];\n\n    // Initialize arrays\n    for (i = 0; i < N; i++) {\n        a[i] = i;\n        b[i] = 0;\n    }\n\n    // Execute loop with seq clause\n    #pragma acc parallel loop seq\n    for (i = 0; i < N; i++) {\n        b[i] = a[i];\n    }\n\n    // Check results\n    for (i = 0; i < N; i++) {\n        if (b[i] != a[i]) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct seq clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_tile_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct tile clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the tile size to 16\n    int tile_size = 16;\n\n    // Create a loop nest with two loops\n    #pragma acc loop tile(tile_size)\n    for (int i = 0; i < 100; i += tile_size) {\n        for (int j = 0; j < 100; j += tile_size) {\n            // Do some work here\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct tile clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_vector_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct vector clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int vector_length = 4;\n    int num_iterations = 100;\n\n    // Set up the data\n    int* data = (int*)malloc(sizeof(int) * num_iterations);\n    for (int i = 0; i < num_iterations; i++) {\n        data[i] = i;\n    }\n\n    // Run the loop with the vector clause\n    #pragma acc parallel loop vector(vector_length)\n    for (int i = 0; i < num_iterations; i++) {\n        data[i] += 1;\n    }\n\n    // Check the results\n    for (int i = 0; i < num_iterations; i++) {\n        if (data[i] != i + 1) {\n            err++;\n        }\n    }\n\n    free(data);\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct vector clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "loop_construct_worker_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:loop construct worker clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the loop construct with the worker clause\n    #pragma acc loop worker\n    for (int i = 0; i < 10; i++) {\n        // Do some work here\n    }\n\n    // Check that the loop iterations were distributed among the workers\n    for (int i = 0; i < 10; i++) {\n        if (acc_get_worker_id() != i) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "loop construct worker clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "parallel_construct.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:parallel construct,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a parallel region with 4 gangs and 2 workers per gang\n    #pragma acc parallel num_gangs(4) num_workers(2)\n    {\n        // create a reduction variable to store the sum of the values in the array\n        int sum = 0;\n\n        // create a loop to iterate over the array\n        #pragma acc loop\n        for (int i = 0; i < 10; i++) {\n            // add the value at the current index to the reduction variable\n            sum += arr[i];\n        }\n\n        // store the reduction variable in the array\n        arr[0] = sum;\n    }\n\n    // check that the reduction variable has the correct value\n    if (arr[0] != 45) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "parallel construct"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "reference_counters.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:reference counters,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a data region with a structured reference counter\n    #pragma acc data copy(a[0:10])\n    {\n        // increment the structured reference counter\n        #pragma acc enter data copyin(a[0:10])\n\n        // create a data region with a dynamic reference counter\n        #pragma acc data copy(b[0:10])\n        {\n            // increment the dynamic reference counter\n            #pragma acc enter data copyin(b[0:10])\n\n            // decrement the dynamic reference counter\n            #pragma acc exit data copyout(b[0:10])\n\n            // check that the reference counters are still non-zero\n            if (acc_get_reference_count(a) != 1 || acc_get_reference_count(b) != 1) {\n                err = 1;\n            }\n        }\n\n        // decrement the structured reference counter\n        #pragma acc exit data copyout(a[0:10])\n\n        // check that the reference counters are still non-zero\n        if (acc_get_reference_count(a) != 0 || acc_get_reference_count(b) != 0) {\n            err = 1;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "reference counters"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "routine_directive.c": {
                "num tests": 0,
                "tests": {}
            },
            "serial_construct.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:serial construct,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up data for the test\n    int data[10];\n    for (int i = 0; i < 10; i++) {\n        data[i] = i;\n    }\n\n    // Execute the serial construct\n    #pragma acc serial\n    {\n        // Perform some computation on the data\n        for (int i = 0; i < 10; i++) {\n            data[i] = data[i] * 2;\n        }\n    }\n\n    // Check the results\n    for (int i = 0; i < 10; i++) {\n        if (data[i] != i * 2) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "serial construct"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "set_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:set directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set the default asynchronous queue to the initial value\n    #pragma acc set default_async(acc_async_default)\n\n    // Set the device number to a valid device number\n    #pragma acc set device_num(1)\n\n    // Set the device type to a valid device type\n    #pragma acc set device_type(acc_device_type_gpu)\n\n    // Check that the default asynchronous queue is set to the initial value\n    if (acc_default_async_var != acc_async_default){\n        err = 1;\n    }\n\n    // Check that the device number is set to the specified value\n    if (acc_current_device_num_var != 1){\n        err = 1;\n    }\n\n    // Check that the device type is set to the specified value\n    if (acc_current_device_type_var != acc_device_type_gpu){\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "set directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "shutdown_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:shutdown directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up a device\n    int device_type = 1; // GPU\n    int device_num = 0;\n    int device_id = acc_get_device_id(device_type, device_num);\n\n    // Shut down the device\n    #pragma acc shutdown device_type(device_type) device_num(device_num)\n\n    // Check that the device is no longer available\n    if (acc_is_device_available(device_id)) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "shutdown directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "update_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:update directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n    int a = 0;\n\n    #pragma acc update device(a)\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "update directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "variable_implicit_data_attributes.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:variable implicit data attributes,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create a parallel region with a reduction clause\n    #pragma acc parallel reduction(+:sum)\n    {\n        // create a loop with a reduction clause\n        #pragma acc loop reduction(+:sum)\n        for (int i = 0; i < 10; i++) {\n            // access the variable \"sum\" in the reduction clause\n            sum += i;\n        }\n    }\n\n    // check that the variable \"sum\" is implicitly private\n    #pragma acc parallel\n    {\n        // access the variable \"sum\" in the parallel region\n        int sum_private = sum;\n        // check that the value of \"sum_private\" is the same as the original \"sum\"\n        if (sum_private != sum) {\n            err++;\n        }\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "variable implicit data attributes"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "variable_predetermined_data_attributes.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:variable predetermined data attributes,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // declare a variable that is private to each thread\n    int thread_private_var = 0;\n\n    // declare a variable that is private to the worker\n    int worker_private_var = 0;\n\n    // declare a variable that is private to the gang\n    int gang_private_var = 0;\n\n    // declare a variable that is shared across all threads\n    int shared_var = 0;\n\n    // create a compute construct with a loop directive\n    #pragma acc parallel loop\n    for (int i = 0; i < 10; i++) {\n        // increment the private variables\n        thread_private_var++;\n        worker_private_var++;\n        gang_private_var++;\n\n        // increment the shared variable\n        shared_var++;\n    }\n\n    // check that the private variables have the correct values\n    if (thread_private_var != 10) {\n        err++;\n    }\n    if (worker_private_var != 10) {\n        err++;\n    }\n    if (gang_private_var != 10) {\n        err++;\n    }\n\n    // check that the shared variable has the correct value\n    if (shared_var != 100) {\n        err++;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "variable predetermined data attributes"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "wait_clause.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:wait clause,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // Set up the device and activity queues\n    acc_set_device_num(1, 1);\n    acc_set_async(1, 1);\n\n    // Enqueue some operations on the device\n    acc_parallel(1, 1, 1, 1);\n    acc_parallel(1, 1, 1, 1);\n\n    // Wait for the operations to complete\n    acc_wait(1, 1);\n\n    // Check that the operations have completed\n    if (acc_get_device_num(1) != 1 || acc_get_async(1) != 1) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "wait clause"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "wait_directive.c": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n//T1:wait directive,V:2.7-3.3\nint test1(){\n    int err = 0;\n\n    // create an asynchronous operation\n    #pragma acc parallel async(1)\n    {\n        // do some work\n    }\n\n    // wait for the asynchronous operation to complete\n    #pragma acc wait(1)\n\n    // check that the asynchronous operation has completed\n    if (acc_async_test(1) != 0) {\n        err = 1;\n    }\n\n    return err;\n}\n#endif\n#ifndef T1\n    failed = 0;\n    for (int x = 0; x < NUM_TEST_CALLS; ++x){\n        failed = failed + test1();\n    }\n    if (failed != 0){\n        failcode = failcode + (1 << 0);\n    }\n#endif\n",
                        "tags": [
                            "wait directive"
                        ],
                        "versions": [
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            }
        }
    ]
}